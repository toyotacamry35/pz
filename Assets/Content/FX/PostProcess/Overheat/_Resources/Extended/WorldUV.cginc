#ifndef WORLD_UV_INCLUDED
#define WORLD_UV_INCLUDED

uniform sampler2D _CameraDepthTexture; 
uniform sampler2D _CameraDepthNormalsTexture;
float4x4 _viewSpaceToWorld;
float4x4 clipToWorld;


void WorldUVCalculate(inout float4 worldPosFromScreen, inout float4 worldNormalFromScreen, float3 worldPos, float2 uv)
{	
	//WORLD POSITION FROM PIXEL

	float4 posClip = UnityWorldToClipPos(worldPos);
	float4 posScreen = ComputeScreenPos(posClip);	
	
	float4 clip = float4(posClip.xy, 0.0, 1.0);
	float3 worldDirection = mul(clipToWorld, clip) - _WorldSpaceCameraPos;

	float depth = SAMPLE_DEPTH_TEXTURE(_CameraDepthTexture, uv);
	depth = LinearEyeDepth(depth);
	float3 worldspace = worldDirection * depth + _WorldSpaceCameraPos;
	worldPosFromScreen = float4(worldspace, 1.0);


	//WORLD SPACE NORMALS

	float depthValue;
	float3 normalValues;

	//view space normals from depth+normals texture generated by camera
	DecodeDepthNormal(tex2D(_CameraDepthNormalsTexture, posScreen.xy), depthValue, normalValues);	

	//transform normals to world space
	normalValues = mul(_viewSpaceToWorld, float4(normalValues.xyz, 0)).xyz;
	
	float4 normals = float4 (normalValues, 1);
	worldNormalFromScreen = normals;
}

#endif