// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using GeneratedCode.DeltaObjects.ReplicationInterfaces;
using SharedCode.Logging;
using GeneratedCode.Repositories;
using SharedCode.EntitySystem;
using GeneratedCode.EntitySystem;
using SharedCode.EntitySystem.Delta;

namespace GeneratedCode.DeltaObjects
{
    public class WorldPersonalMachineEngineAlways : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldPersonalMachineEngineAlways
    {
        public WorldPersonalMachineEngineAlways(Assets.ColonyShared.SharedCode.Entities.Engine.IWorldPersonalMachineEngine deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Engine.IWorldPersonalMachineEngine __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Engine.IWorldPersonalMachineEngine)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1146718758;
    }

    public class WorldPersonalMachineEngineClientBroadcast : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldPersonalMachineEngineClientBroadcast
    {
        public WorldPersonalMachineEngineClientBroadcast(Assets.ColonyShared.SharedCode.Entities.Engine.IWorldPersonalMachineEngine deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Engine.IWorldPersonalMachineEngine __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Engine.IWorldPersonalMachineEngine)__deltaObjectBase__;
            }
        }

        public override int TypeId => 1429304589;
    }

    public class WorldPersonalMachineEngineClientFullApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldPersonalMachineEngineClientFullApi
    {
        public WorldPersonalMachineEngineClientFullApi(Assets.ColonyShared.SharedCode.Entities.Engine.IWorldPersonalMachineEngine deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Engine.IWorldPersonalMachineEngine __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Engine.IWorldPersonalMachineEngine)__deltaObjectBase__;
            }
        }

        public override int TypeId => 1898803171;
    }

    public class WorldPersonalMachineEngineClientFull : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldPersonalMachineEngineClientFull
    {
        public WorldPersonalMachineEngineClientFull(Assets.ColonyShared.SharedCode.Entities.Engine.IWorldPersonalMachineEngine deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Engine.IWorldPersonalMachineEngine __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Engine.IWorldPersonalMachineEngine)__deltaObjectBase__;
            }
        }

        public IDeltaDictionary<ResourceSystem.Utils.OuterRef, ResourceSystem.Utils.OuterRef> WorldPersonalMachines
        {
            get
            {
                return __deltaObject__.WorldPersonalMachines;
            }
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = WorldPersonalMachines;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -54538470;
    }

    public class WorldPersonalMachineEngineServerApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldPersonalMachineEngineServerApi
    {
        public WorldPersonalMachineEngineServerApi(Assets.ColonyShared.SharedCode.Entities.Engine.IWorldPersonalMachineEngine deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Engine.IWorldPersonalMachineEngine __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Engine.IWorldPersonalMachineEngine)__deltaObjectBase__;
            }
        }

        public override int TypeId => 149151483;
    }

    public class WorldPersonalMachineEngineServer : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldPersonalMachineEngineServer
    {
        public WorldPersonalMachineEngineServer(Assets.ColonyShared.SharedCode.Entities.Engine.IWorldPersonalMachineEngine deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Engine.IWorldPersonalMachineEngine __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Engine.IWorldPersonalMachineEngine)__deltaObjectBase__;
            }
        }

        public IDeltaDictionary<ResourceSystem.Utils.OuterRef, ResourceSystem.Utils.OuterRef> WorldPersonalMachines
        {
            get
            {
                return __deltaObject__.WorldPersonalMachines;
            }
        }

        public System.Threading.Tasks.Task<ResourceSystem.Utils.OuterRef> GetOrAddMachine(SharedCode.Aspects.Item.Templates.WorldPersonalMachineDef def, ResourceSystem.Utils.OuterRef key)
        {
            return __deltaObject__.GetOrAddMachine(def, key);
        }

        public System.Threading.Tasks.Task RemoveMachine(ResourceSystem.Utils.OuterRef key)
        {
            return __deltaObject__.RemoveMachine(key);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = WorldPersonalMachines;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 719209625;
    }
}