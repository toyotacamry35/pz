// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using GeneratedCode.DeltaObjects.ReplicationInterfaces;
using SharedCode.Logging;
using GeneratedCode.Repositories;
using SharedCode.EntitySystem;
using GeneratedCode.EntitySystem;
using SharedCode.EntitySystem.Delta;

namespace GeneratedCode.DeltaObjects
{
    public class BakenCharacterEntityAlways : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IBakenCharacterEntityAlways
    {
        public BakenCharacterEntityAlways(SharedCode.Entities.IBakenCharacterEntity deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.IBakenCharacterEntity __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.IBakenCharacterEntity)__deltaObjectBase__;
            }
        }

        public override int TypeId => -122419421;
    }

    public class BakenCharacterEntityClientBroadcast : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IBakenCharacterEntityClientBroadcast
    {
        public BakenCharacterEntityClientBroadcast(SharedCode.Entities.IBakenCharacterEntity deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.IBakenCharacterEntity __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.IBakenCharacterEntity)__deltaObjectBase__;
            }
        }

        public override int TypeId => 1361943516;
    }

    public class BakenCharacterEntityClientFullApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IBakenCharacterEntityClientFullApi
    {
        public BakenCharacterEntityClientFullApi(SharedCode.Entities.IBakenCharacterEntity deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.IBakenCharacterEntity __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.IBakenCharacterEntity)__deltaObjectBase__;
            }
        }

        public override int TypeId => 411797838;
    }

    public class BakenCharacterEntityClientFull : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IBakenCharacterEntityClientFull
    {
        public BakenCharacterEntityClientFull(SharedCode.Entities.IBakenCharacterEntity deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.IBakenCharacterEntity __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.IBakenCharacterEntity)__deltaObjectBase__;
            }
        }

        public IDeltaDictionary<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>, bool> RegisteredBakens
        {
            get
            {
                return __deltaObject__.RegisteredBakens;
            }
        }

        public SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> ActiveBaken => __deltaObject__.ActiveBaken;
        public System.Threading.Tasks.ValueTask<bool> BakenCanBeActivated(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> bakenRef)
        {
            return __deltaObject__.BakenCanBeActivated(bakenRef);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 13:
                    currProperty = RegisteredBakens;
                    break;
                case 14:
                    currProperty = ActiveBaken;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 387779950;
    }

    public class BakenCharacterEntityServerApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IBakenCharacterEntityServerApi
    {
        public BakenCharacterEntityServerApi(SharedCode.Entities.IBakenCharacterEntity deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.IBakenCharacterEntity __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.IBakenCharacterEntity)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1482304115;
    }

    public class BakenCharacterEntityServer : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IBakenCharacterEntityServer
    {
        public BakenCharacterEntityServer(SharedCode.Entities.IBakenCharacterEntity deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.IBakenCharacterEntity __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.IBakenCharacterEntity)__deltaObjectBase__;
            }
        }

        public System.Guid CharacterId => __deltaObject__.CharacterId;
        public bool CharacterLoaded => __deltaObject__.CharacterLoaded;
        public IDeltaDictionary<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>, bool> RegisteredBakens
        {
            get
            {
                return __deltaObject__.RegisteredBakens;
            }
        }

        public SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> ActiveBaken => __deltaObject__.ActiveBaken;
        public System.Threading.Tasks.ValueTask<bool> BakenCanBeActivated(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> bakenRef)
        {
            return __deltaObject__.BakenCanBeActivated(bakenRef);
        }

        public System.Threading.Tasks.ValueTask<bool> ActivateBaken(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> bakenRef)
        {
            return __deltaObject__.ActivateBaken(bakenRef);
        }

        public System.Threading.Tasks.ValueTask RegisterBaken(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> bakenRef, bool loaded)
        {
            return __deltaObject__.RegisterBaken(bakenRef, loaded);
        }

        public System.Threading.Tasks.ValueTask BakenIsDestroyed(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> bakenRef)
        {
            return __deltaObject__.BakenIsDestroyed(bakenRef);
        }

        public System.Threading.Tasks.ValueTask SetCharacterLoaded(bool loaded)
        {
            return __deltaObject__.SetCharacterLoaded(loaded);
        }

        public System.Threading.Tasks.ValueTask SetLogin(bool logined)
        {
            return __deltaObject__.SetLogin(logined);
        }

        public System.Threading.Tasks.ValueTask<bool> CanBeUnloaded()
        {
            return __deltaObject__.CanBeUnloaded();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = CharacterId;
                    break;
                case 11:
                    currProperty = CharacterLoaded;
                    break;
                case 13:
                    currProperty = RegisteredBakens;
                    break;
                case 14:
                    currProperty = ActiveBaken;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 808007115;
    }
}