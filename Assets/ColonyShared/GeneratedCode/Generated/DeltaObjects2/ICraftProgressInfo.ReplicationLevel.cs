// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using GeneratedCode.DeltaObjects.ReplicationInterfaces;
using SharedCode.Logging;
using GeneratedCode.Repositories;
using SharedCode.EntitySystem;
using GeneratedCode.EntitySystem;
using SharedCode.EntitySystem.Delta;

namespace GeneratedCode.DeltaObjects
{
    public class CraftProgressInfoAlways : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ICraftProgressInfoAlways
    {
        public CraftProgressInfoAlways(SharedCode.DeltaObjects.ICraftProgressInfo deltaObject): base(deltaObject)
        {
        }

        SharedCode.DeltaObjects.ICraftProgressInfo __deltaObject__
        {
            get
            {
                return (SharedCode.DeltaObjects.ICraftProgressInfo)__deltaObjectBase__;
            }
        }

        public override int TypeId => 953281395;
    }

    public class CraftProgressInfoClientBroadcast : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ICraftProgressInfoClientBroadcast
    {
        public CraftProgressInfoClientBroadcast(SharedCode.DeltaObjects.ICraftProgressInfo deltaObject): base(deltaObject)
        {
        }

        SharedCode.DeltaObjects.ICraftProgressInfo __deltaObject__
        {
            get
            {
                return (SharedCode.DeltaObjects.ICraftProgressInfo)__deltaObjectBase__;
            }
        }

        public long StartTime => __deltaObject__.StartTime;
        public float Duration => __deltaObject__.Duration;
        public SharedCode.Aspects.Item.Templates.BaseItemResource ResultItem => __deltaObject__.ResultItem;
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = StartTime;
                    break;
                case 11:
                    currProperty = Duration;
                    break;
                case 12:
                    currProperty = ResultItem;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -503796296;
    }

    public class CraftProgressInfoClientFullApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ICraftProgressInfoClientFullApi
    {
        public CraftProgressInfoClientFullApi(SharedCode.DeltaObjects.ICraftProgressInfo deltaObject): base(deltaObject)
        {
        }

        SharedCode.DeltaObjects.ICraftProgressInfo __deltaObject__
        {
            get
            {
                return (SharedCode.DeltaObjects.ICraftProgressInfo)__deltaObjectBase__;
            }
        }

        public override int TypeId => 1553921407;
    }

    public class CraftProgressInfoClientFull : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ICraftProgressInfoClientFull
    {
        public CraftProgressInfoClientFull(SharedCode.DeltaObjects.ICraftProgressInfo deltaObject): base(deltaObject)
        {
        }

        SharedCode.DeltaObjects.ICraftProgressInfo __deltaObject__
        {
            get
            {
                return (SharedCode.DeltaObjects.ICraftProgressInfo)__deltaObjectBase__;
            }
        }

        public long StartTime => __deltaObject__.StartTime;
        public float Duration => __deltaObject__.Duration;
        public SharedCode.Aspects.Item.Templates.BaseItemResource ResultItem => __deltaObject__.ResultItem;
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = StartTime;
                    break;
                case 11:
                    currProperty = Duration;
                    break;
                case 12:
                    currProperty = ResultItem;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 1101056850;
    }

    public class CraftProgressInfoServerApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ICraftProgressInfoServerApi
    {
        public CraftProgressInfoServerApi(SharedCode.DeltaObjects.ICraftProgressInfo deltaObject): base(deltaObject)
        {
        }

        SharedCode.DeltaObjects.ICraftProgressInfo __deltaObject__
        {
            get
            {
                return (SharedCode.DeltaObjects.ICraftProgressInfo)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1874469976;
    }

    public class CraftProgressInfoServer : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ICraftProgressInfoServer
    {
        public CraftProgressInfoServer(SharedCode.DeltaObjects.ICraftProgressInfo deltaObject): base(deltaObject)
        {
        }

        SharedCode.DeltaObjects.ICraftProgressInfo __deltaObject__
        {
            get
            {
                return (SharedCode.DeltaObjects.ICraftProgressInfo)__deltaObjectBase__;
            }
        }

        public long StartTime => __deltaObject__.StartTime;
        public float Duration => __deltaObject__.Duration;
        public SharedCode.Aspects.Item.Templates.BaseItemResource ResultItem => __deltaObject__.ResultItem;
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = StartTime;
                    break;
                case 11:
                    currProperty = Duration;
                    break;
                case 12:
                    currProperty = ResultItem;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 720366989;
    }
}