// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using System;
using SharedCode.Entities.Service;
using SharedCode.EntitySystem.ChainCalls;
using SharedCode.Logging;
using SharedCode.OurSimpleIoC;
using SharedCode.Serializers;
using SharedCode.Utils;
using System.Linq;
using System.Collections.Generic;
using System.CodeDom.Compiler;
using GeneratedCode.DeltaObjects.Chain;

[GeneratedCode("CodeGen", "1.0")]
public class AccountEntityAlwaysChainProxy : IChainedEntity
{
    private AccountEntityChainProxy __chain__;
    public AccountEntityAlwaysChainProxy(AccountEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public AccountEntityAlwaysChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public AccountEntityAlwaysChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public AccountEntityAlwaysChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static AccountEntityAlwaysChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IAccountEntityAlways entity)
    {
        return new AccountEntityAlwaysChainProxy(new AccountEntityChainProxy((SharedCode.Entities.IAccountEntity)entity.GetBaseDeltaObject()));
    }

    public static AccountEntityAlwaysChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IAccountEntityAlways entity, IChainedEntity fromChain)
    {
        return new AccountEntityAlwaysChainProxy(new AccountEntityChainProxy((SharedCode.Entities.IAccountEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class AccountEntityClientBroadcastChainProxy : IChainedEntity
{
    private AccountEntityChainProxy __chain__;
    public AccountEntityClientBroadcastChainProxy(AccountEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public AccountEntityClientBroadcastChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public AccountEntityClientBroadcastChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public AccountEntityClientBroadcastChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static AccountEntityClientBroadcastChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IAccountEntityClientBroadcast entity)
    {
        return new AccountEntityClientBroadcastChainProxy(new AccountEntityChainProxy((SharedCode.Entities.IAccountEntity)entity.GetBaseDeltaObject()));
    }

    public static AccountEntityClientBroadcastChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IAccountEntityClientBroadcast entity, IChainedEntity fromChain)
    {
        return new AccountEntityClientBroadcastChainProxy(new AccountEntityChainProxy((SharedCode.Entities.IAccountEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class AccountEntityClientFullApiChainProxy : IChainedEntity
{
    private AccountEntityChainProxy __chain__;
    public AccountEntityClientFullApiChainProxy(AccountEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public AccountEntityClientFullApiChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public AccountEntityClientFullApiChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public AccountEntityClientFullApiChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static AccountEntityClientFullApiChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IAccountEntityClientFullApi entity)
    {
        return new AccountEntityClientFullApiChainProxy(new AccountEntityChainProxy((SharedCode.Entities.IAccountEntity)entity.GetBaseDeltaObject()));
    }

    public static AccountEntityClientFullApiChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IAccountEntityClientFullApi entity, IChainedEntity fromChain)
    {
        return new AccountEntityClientFullApiChainProxy(new AccountEntityChainProxy((SharedCode.Entities.IAccountEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class AccountEntityClientFullChainProxy : IChainedEntity
{
    private AccountEntityChainProxy __chain__;
    public AccountEntityClientFullChainProxy(AccountEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public AccountEntityClientFullChainProxy ConsumeRewards()
    {
        __chain__.ConsumeRewards();
        return this;
    }

    public AccountEntityClientFullChainProxy DeleteAccountCharacter(ChainArgument<System.Guid> characterId)
    {
        __chain__.DeleteAccountCharacter(characterId);
        return this;
    }

    public AccountEntityClientFullChainProxy CreateNewCharacter(ChainArgument<string> name, ChainArgument<System.Guid> accountId)
    {
        __chain__.CreateNewCharacter(name, accountId);
        return this;
    }

    public AccountEntityClientFullChainProxy SetGender(ChainArgument<ResourceSystem.Aspects.Misc.GenderDef> val)
    {
        __chain__.SetGender(val);
        return this;
    }

    public AccountEntityClientFullChainProxy TryConsumeUnconsumedExp(ChainArgument<int> val)
    {
        __chain__.TryConsumeUnconsumedExp(val);
        return this;
    }

    public AccountEntityClientFullChainProxy CalcAccLevel()
    {
        __chain__.CalcAccLevel();
        return this;
    }

    public AccountEntityClientFullChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public AccountEntityClientFullChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public AccountEntityClientFullChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static AccountEntityClientFullChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IAccountEntityClientFull entity)
    {
        return new AccountEntityClientFullChainProxy(new AccountEntityChainProxy((SharedCode.Entities.IAccountEntity)entity.GetBaseDeltaObject()));
    }

    public static AccountEntityClientFullChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IAccountEntityClientFull entity, IChainedEntity fromChain)
    {
        return new AccountEntityClientFullChainProxy(new AccountEntityChainProxy((SharedCode.Entities.IAccountEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class AccountEntityServerApiChainProxy : IChainedEntity
{
    private AccountEntityChainProxy __chain__;
    public AccountEntityServerApiChainProxy(AccountEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public AccountEntityServerApiChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public AccountEntityServerApiChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public AccountEntityServerApiChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static AccountEntityServerApiChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IAccountEntityServerApi entity)
    {
        return new AccountEntityServerApiChainProxy(new AccountEntityChainProxy((SharedCode.Entities.IAccountEntity)entity.GetBaseDeltaObject()));
    }

    public static AccountEntityServerApiChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IAccountEntityServerApi entity, IChainedEntity fromChain)
    {
        return new AccountEntityServerApiChainProxy(new AccountEntityChainProxy((SharedCode.Entities.IAccountEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class AccountEntityServerChainProxy : IChainedEntity
{
    private AccountEntityChainProxy __chain__;
    public AccountEntityServerChainProxy(AccountEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public AccountEntityServerChainProxy SetCurrentUserId(ChainArgument<System.Guid> userId)
    {
        __chain__.SetCurrentUserId(userId);
        return this;
    }

    public AccountEntityServerChainProxy GetCurrentUserId()
    {
        __chain__.GetCurrentUserId();
        return this;
    }

    public AccountEntityServerChainProxy ClearAndConsumeOldRealmRewards()
    {
        __chain__.ClearAndConsumeOldRealmRewards();
        return this;
    }

    public AccountEntityServerChainProxy ConsumeRewards()
    {
        __chain__.ConsumeRewards();
        return this;
    }

    public AccountEntityServerChainProxy DeleteAccountCharacter(ChainArgument<System.Guid> characterId)
    {
        __chain__.DeleteAccountCharacter(characterId);
        return this;
    }

    public AccountEntityServerChainProxy CreateNewCharacter(ChainArgument<string> name, ChainArgument<System.Guid> accountId)
    {
        __chain__.CreateNewCharacter(name, accountId);
        return this;
    }

    public AccountEntityServerChainProxy SetGender(ChainArgument<ResourceSystem.Aspects.Misc.GenderDef> val)
    {
        __chain__.SetGender(val);
        return this;
    }

    public AccountEntityServerChainProxy TryConsumeUnconsumedExp(ChainArgument<int> val)
    {
        __chain__.TryConsumeUnconsumedExp(val);
        return this;
    }

    public AccountEntityServerChainProxy CalcAccLevel()
    {
        __chain__.CalcAccLevel();
        return this;
    }

    public AccountEntityServerChainProxy AddExperience(ChainArgument<int> deltaVal)
    {
        __chain__.AddExperience(deltaVal);
        return this;
    }

    public AccountEntityServerChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public AccountEntityServerChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public AccountEntityServerChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static AccountEntityServerChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IAccountEntityServer entity)
    {
        return new AccountEntityServerChainProxy(new AccountEntityChainProxy((SharedCode.Entities.IAccountEntity)entity.GetBaseDeltaObject()));
    }

    public static AccountEntityServerChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IAccountEntityServer entity, IChainedEntity fromChain)
    {
        return new AccountEntityServerChainProxy(new AccountEntityChainProxy((SharedCode.Entities.IAccountEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}