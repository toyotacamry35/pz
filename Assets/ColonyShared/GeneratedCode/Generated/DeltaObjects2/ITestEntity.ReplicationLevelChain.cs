// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using System;
using SharedCode.Entities.Service;
using SharedCode.EntitySystem.ChainCalls;
using SharedCode.Logging;
using SharedCode.OurSimpleIoC;
using SharedCode.Serializers;
using SharedCode.Utils;
using System.Linq;
using System.Collections.Generic;
using System.CodeDom.Compiler;
using GeneratedCode.DeltaObjects.Chain;

[GeneratedCode("CodeGen", "1.0")]
public class TestEntityAlwaysChainProxy : IChainedEntity
{
    private TestEntityChainProxy __chain__;
    public TestEntityAlwaysChainProxy(TestEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public TestEntityAlwaysChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public TestEntityAlwaysChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public TestEntityAlwaysChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static TestEntityAlwaysChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestEntityAlways entity)
    {
        return new TestEntityAlwaysChainProxy(new TestEntityChainProxy((Assets.ColonyShared.SharedCode.Entities.Test.ITestEntity)entity.GetBaseDeltaObject()));
    }

    public static TestEntityAlwaysChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestEntityAlways entity, IChainedEntity fromChain)
    {
        return new TestEntityAlwaysChainProxy(new TestEntityChainProxy((Assets.ColonyShared.SharedCode.Entities.Test.ITestEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class TestEntityClientBroadcastChainProxy : IChainedEntity
{
    private TestEntityChainProxy __chain__;
    public TestEntityClientBroadcastChainProxy(TestEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public TestEntityClientBroadcastChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public TestEntityClientBroadcastChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public TestEntityClientBroadcastChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static TestEntityClientBroadcastChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestEntityClientBroadcast entity)
    {
        return new TestEntityClientBroadcastChainProxy(new TestEntityChainProxy((Assets.ColonyShared.SharedCode.Entities.Test.ITestEntity)entity.GetBaseDeltaObject()));
    }

    public static TestEntityClientBroadcastChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestEntityClientBroadcast entity, IChainedEntity fromChain)
    {
        return new TestEntityClientBroadcastChainProxy(new TestEntityChainProxy((Assets.ColonyShared.SharedCode.Entities.Test.ITestEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class TestEntityClientFullApiChainProxy : IChainedEntity
{
    private TestEntityChainProxy __chain__;
    public TestEntityClientFullApiChainProxy(TestEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public TestEntityClientFullApiChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public TestEntityClientFullApiChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public TestEntityClientFullApiChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static TestEntityClientFullApiChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestEntityClientFullApi entity)
    {
        return new TestEntityClientFullApiChainProxy(new TestEntityChainProxy((Assets.ColonyShared.SharedCode.Entities.Test.ITestEntity)entity.GetBaseDeltaObject()));
    }

    public static TestEntityClientFullApiChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestEntityClientFullApi entity, IChainedEntity fromChain)
    {
        return new TestEntityClientFullApiChainProxy(new TestEntityChainProxy((Assets.ColonyShared.SharedCode.Entities.Test.ITestEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class TestEntityClientFullChainProxy : IChainedEntity
{
    private TestEntityChainProxy __chain__;
    public TestEntityClientFullChainProxy(TestEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public TestEntityClientFullChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public TestEntityClientFullChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public TestEntityClientFullChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static TestEntityClientFullChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestEntityClientFull entity)
    {
        return new TestEntityClientFullChainProxy(new TestEntityChainProxy((Assets.ColonyShared.SharedCode.Entities.Test.ITestEntity)entity.GetBaseDeltaObject()));
    }

    public static TestEntityClientFullChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestEntityClientFull entity, IChainedEntity fromChain)
    {
        return new TestEntityClientFullChainProxy(new TestEntityChainProxy((Assets.ColonyShared.SharedCode.Entities.Test.ITestEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class TestEntityServerApiChainProxy : IChainedEntity
{
    private TestEntityChainProxy __chain__;
    public TestEntityServerApiChainProxy(TestEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public TestEntityServerApiChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public TestEntityServerApiChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public TestEntityServerApiChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static TestEntityServerApiChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestEntityServerApi entity)
    {
        return new TestEntityServerApiChainProxy(new TestEntityChainProxy((Assets.ColonyShared.SharedCode.Entities.Test.ITestEntity)entity.GetBaseDeltaObject()));
    }

    public static TestEntityServerApiChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestEntityServerApi entity, IChainedEntity fromChain)
    {
        return new TestEntityServerApiChainProxy(new TestEntityChainProxy((Assets.ColonyShared.SharedCode.Entities.Test.ITestEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class TestEntityServerChainProxy : IChainedEntity
{
    private TestEntityChainProxy __chain__;
    public TestEntityServerChainProxy(TestEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public TestEntityServerChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public TestEntityServerChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public TestEntityServerChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static TestEntityServerChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestEntityServer entity)
    {
        return new TestEntityServerChainProxy(new TestEntityChainProxy((Assets.ColonyShared.SharedCode.Entities.Test.ITestEntity)entity.GetBaseDeltaObject()));
    }

    public static TestEntityServerChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestEntityServer entity, IChainedEntity fromChain)
    {
        return new TestEntityServerChainProxy(new TestEntityChainProxy((Assets.ColonyShared.SharedCode.Entities.Test.ITestEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class ChainCallTestEntityAlwaysChainProxy : IChainedEntity
{
    private ChainCallTestEntityChainProxy __chain__;
    public ChainCallTestEntityAlwaysChainProxy(ChainCallTestEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public ChainCallTestEntityAlwaysChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public ChainCallTestEntityAlwaysChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public ChainCallTestEntityAlwaysChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static ChainCallTestEntityAlwaysChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IChainCallTestEntityAlways entity)
    {
        return new ChainCallTestEntityAlwaysChainProxy(new ChainCallTestEntityChainProxy((Assets.ColonyShared.SharedCode.Entities.Test.IChainCallTestEntity)entity.GetBaseDeltaObject()));
    }

    public static ChainCallTestEntityAlwaysChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IChainCallTestEntityAlways entity, IChainedEntity fromChain)
    {
        return new ChainCallTestEntityAlwaysChainProxy(new ChainCallTestEntityChainProxy((Assets.ColonyShared.SharedCode.Entities.Test.IChainCallTestEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class ChainCallTestEntityClientBroadcastChainProxy : IChainedEntity
{
    private ChainCallTestEntityChainProxy __chain__;
    public ChainCallTestEntityClientBroadcastChainProxy(ChainCallTestEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public ChainCallTestEntityClientBroadcastChainProxy GetValue()
    {
        __chain__.GetValue();
        return this;
    }

    public ChainCallTestEntityClientBroadcastChainProxy SetValue(ChainArgument<int> value)
    {
        __chain__.SetValue(value);
        return this;
    }

    public ChainCallTestEntityClientBroadcastChainProxy AddToValue(ChainArgument<int> add, ChainArgument<bool> stop)
    {
        __chain__.AddToValue(add, stop);
        return this;
    }

    public ChainCallTestEntityClientBroadcastChainProxy MulValue(ChainArgument<int> mul, ChainArgument<bool> stop)
    {
        __chain__.MulValue(mul, stop);
        return this;
    }

    public ChainCallTestEntityClientBroadcastChainProxy CheckValueGreater(ChainArgument<int> value)
    {
        __chain__.CheckValueGreater(value);
        return this;
    }

    public ChainCallTestEntityClientBroadcastChainProxy SetValueAndWait(ChainArgument<int> value, ChainArgument<float> seconds)
    {
        __chain__.SetValueAndWait(value, seconds);
        return this;
    }

    public ChainCallTestEntityClientBroadcastChainProxy SetValueAndWaitAndCallAnotherPeriodic(ChainArgument<int> value, ChainArgument<float> seconds, ChainArgument<System.Guid> anotherTestEntity)
    {
        __chain__.SetValueAndWaitAndCallAnotherPeriodic(value, seconds, anotherTestEntity);
        return this;
    }

    public ChainCallTestEntityClientBroadcastChainProxy MigrationCircleRpcCall(ChainArgument<int> value, ChainArgument<float> seconds, ChainArgument<System.Guid> anotherTestEntity)
    {
        __chain__.MigrationCircleRpcCall(value, seconds, anotherTestEntity);
        return this;
    }

    public ChainCallTestEntityClientBroadcastChainProxy MigrationCircleRpcCallBack(ChainArgument<float> seconds, ChainArgument<System.Guid> anotherTestEntity)
    {
        __chain__.MigrationCircleRpcCallBack(seconds, anotherTestEntity);
        return this;
    }

    public ChainCallTestEntityClientBroadcastChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public ChainCallTestEntityClientBroadcastChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public ChainCallTestEntityClientBroadcastChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static ChainCallTestEntityClientBroadcastChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IChainCallTestEntityClientBroadcast entity)
    {
        return new ChainCallTestEntityClientBroadcastChainProxy(new ChainCallTestEntityChainProxy((Assets.ColonyShared.SharedCode.Entities.Test.IChainCallTestEntity)entity.GetBaseDeltaObject()));
    }

    public static ChainCallTestEntityClientBroadcastChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IChainCallTestEntityClientBroadcast entity, IChainedEntity fromChain)
    {
        return new ChainCallTestEntityClientBroadcastChainProxy(new ChainCallTestEntityChainProxy((Assets.ColonyShared.SharedCode.Entities.Test.IChainCallTestEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class ChainCallTestEntityClientFullApiChainProxy : IChainedEntity
{
    private ChainCallTestEntityChainProxy __chain__;
    public ChainCallTestEntityClientFullApiChainProxy(ChainCallTestEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public ChainCallTestEntityClientFullApiChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public ChainCallTestEntityClientFullApiChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public ChainCallTestEntityClientFullApiChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static ChainCallTestEntityClientFullApiChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IChainCallTestEntityClientFullApi entity)
    {
        return new ChainCallTestEntityClientFullApiChainProxy(new ChainCallTestEntityChainProxy((Assets.ColonyShared.SharedCode.Entities.Test.IChainCallTestEntity)entity.GetBaseDeltaObject()));
    }

    public static ChainCallTestEntityClientFullApiChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IChainCallTestEntityClientFullApi entity, IChainedEntity fromChain)
    {
        return new ChainCallTestEntityClientFullApiChainProxy(new ChainCallTestEntityChainProxy((Assets.ColonyShared.SharedCode.Entities.Test.IChainCallTestEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class ChainCallTestEntityClientFullChainProxy : IChainedEntity
{
    private ChainCallTestEntityChainProxy __chain__;
    public ChainCallTestEntityClientFullChainProxy(ChainCallTestEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public ChainCallTestEntityClientFullChainProxy GetValue()
    {
        __chain__.GetValue();
        return this;
    }

    public ChainCallTestEntityClientFullChainProxy SetValue(ChainArgument<int> value)
    {
        __chain__.SetValue(value);
        return this;
    }

    public ChainCallTestEntityClientFullChainProxy AddToValue(ChainArgument<int> add, ChainArgument<bool> stop)
    {
        __chain__.AddToValue(add, stop);
        return this;
    }

    public ChainCallTestEntityClientFullChainProxy MulValue(ChainArgument<int> mul, ChainArgument<bool> stop)
    {
        __chain__.MulValue(mul, stop);
        return this;
    }

    public ChainCallTestEntityClientFullChainProxy CheckValueGreater(ChainArgument<int> value)
    {
        __chain__.CheckValueGreater(value);
        return this;
    }

    public ChainCallTestEntityClientFullChainProxy SetValueAndWait(ChainArgument<int> value, ChainArgument<float> seconds)
    {
        __chain__.SetValueAndWait(value, seconds);
        return this;
    }

    public ChainCallTestEntityClientFullChainProxy SetValueAndWaitAndCallAnotherPeriodic(ChainArgument<int> value, ChainArgument<float> seconds, ChainArgument<System.Guid> anotherTestEntity)
    {
        __chain__.SetValueAndWaitAndCallAnotherPeriodic(value, seconds, anotherTestEntity);
        return this;
    }

    public ChainCallTestEntityClientFullChainProxy MigrationCircleRpcCall(ChainArgument<int> value, ChainArgument<float> seconds, ChainArgument<System.Guid> anotherTestEntity)
    {
        __chain__.MigrationCircleRpcCall(value, seconds, anotherTestEntity);
        return this;
    }

    public ChainCallTestEntityClientFullChainProxy MigrationCircleRpcCallBack(ChainArgument<float> seconds, ChainArgument<System.Guid> anotherTestEntity)
    {
        __chain__.MigrationCircleRpcCallBack(seconds, anotherTestEntity);
        return this;
    }

    public ChainCallTestEntityClientFullChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public ChainCallTestEntityClientFullChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public ChainCallTestEntityClientFullChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static ChainCallTestEntityClientFullChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IChainCallTestEntityClientFull entity)
    {
        return new ChainCallTestEntityClientFullChainProxy(new ChainCallTestEntityChainProxy((Assets.ColonyShared.SharedCode.Entities.Test.IChainCallTestEntity)entity.GetBaseDeltaObject()));
    }

    public static ChainCallTestEntityClientFullChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IChainCallTestEntityClientFull entity, IChainedEntity fromChain)
    {
        return new ChainCallTestEntityClientFullChainProxy(new ChainCallTestEntityChainProxy((Assets.ColonyShared.SharedCode.Entities.Test.IChainCallTestEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class ChainCallTestEntityServerApiChainProxy : IChainedEntity
{
    private ChainCallTestEntityChainProxy __chain__;
    public ChainCallTestEntityServerApiChainProxy(ChainCallTestEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public ChainCallTestEntityServerApiChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public ChainCallTestEntityServerApiChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public ChainCallTestEntityServerApiChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static ChainCallTestEntityServerApiChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IChainCallTestEntityServerApi entity)
    {
        return new ChainCallTestEntityServerApiChainProxy(new ChainCallTestEntityChainProxy((Assets.ColonyShared.SharedCode.Entities.Test.IChainCallTestEntity)entity.GetBaseDeltaObject()));
    }

    public static ChainCallTestEntityServerApiChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IChainCallTestEntityServerApi entity, IChainedEntity fromChain)
    {
        return new ChainCallTestEntityServerApiChainProxy(new ChainCallTestEntityChainProxy((Assets.ColonyShared.SharedCode.Entities.Test.IChainCallTestEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class ChainCallTestEntityServerChainProxy : IChainedEntity
{
    private ChainCallTestEntityChainProxy __chain__;
    public ChainCallTestEntityServerChainProxy(ChainCallTestEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public ChainCallTestEntityServerChainProxy GetValue()
    {
        __chain__.GetValue();
        return this;
    }

    public ChainCallTestEntityServerChainProxy SetValue(ChainArgument<int> value)
    {
        __chain__.SetValue(value);
        return this;
    }

    public ChainCallTestEntityServerChainProxy AddToValue(ChainArgument<int> add, ChainArgument<bool> stop)
    {
        __chain__.AddToValue(add, stop);
        return this;
    }

    public ChainCallTestEntityServerChainProxy MulValue(ChainArgument<int> mul, ChainArgument<bool> stop)
    {
        __chain__.MulValue(mul, stop);
        return this;
    }

    public ChainCallTestEntityServerChainProxy CheckValueGreater(ChainArgument<int> value)
    {
        __chain__.CheckValueGreater(value);
        return this;
    }

    public ChainCallTestEntityServerChainProxy SetValueAndWait(ChainArgument<int> value, ChainArgument<float> seconds)
    {
        __chain__.SetValueAndWait(value, seconds);
        return this;
    }

    public ChainCallTestEntityServerChainProxy SetValueAndWaitAndCallAnotherPeriodic(ChainArgument<int> value, ChainArgument<float> seconds, ChainArgument<System.Guid> anotherTestEntity)
    {
        __chain__.SetValueAndWaitAndCallAnotherPeriodic(value, seconds, anotherTestEntity);
        return this;
    }

    public ChainCallTestEntityServerChainProxy MigrationCircleRpcCall(ChainArgument<int> value, ChainArgument<float> seconds, ChainArgument<System.Guid> anotherTestEntity)
    {
        __chain__.MigrationCircleRpcCall(value, seconds, anotherTestEntity);
        return this;
    }

    public ChainCallTestEntityServerChainProxy MigrationCircleRpcCallBack(ChainArgument<float> seconds, ChainArgument<System.Guid> anotherTestEntity)
    {
        __chain__.MigrationCircleRpcCallBack(seconds, anotherTestEntity);
        return this;
    }

    public ChainCallTestEntityServerChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public ChainCallTestEntityServerChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public ChainCallTestEntityServerChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static ChainCallTestEntityServerChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IChainCallTestEntityServer entity)
    {
        return new ChainCallTestEntityServerChainProxy(new ChainCallTestEntityChainProxy((Assets.ColonyShared.SharedCode.Entities.Test.IChainCallTestEntity)entity.GetBaseDeltaObject()));
    }

    public static ChainCallTestEntityServerChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IChainCallTestEntityServer entity, IChainedEntity fromChain)
    {
        return new ChainCallTestEntityServerChainProxy(new ChainCallTestEntityChainProxy((Assets.ColonyShared.SharedCode.Entities.Test.IChainCallTestEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}