// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

namespace GeneratedCode.DeltaObjects
{
    [ProtoBuf.ProtoContract]
    [MongoDB.Bson.Serialization.Attributes.BsonDiscriminator("RepositoryCommunicationEntity")]
    public partial class RepositoryCommunicationEntity : SharedCode.EntitySystem.BaseEntity, SharedCode.Entities.Cloud.IRepositoryCommunicationEntity, IRepositoryCommunicationEntityImplementRemoteMethods
    {
        public override string CodeVersion => ThisAssembly.AssemblyInformationalVersion;
        public RepositoryCommunicationEntity()
        {
            if (!SharedCode.Serializers._SerializerContext.Pool.Current.Deserialization)
            {
                Config = default(SharedCode.Config.EntitiesRepositoryConfig);
                ConfigId = default(string);
                Num = default(int);
                InternalAddress = default(SharedCode.Entities.Cloud.EndpointAddress);
                ExternalAddress = default(SharedCode.Entities.Cloud.EndpointAddress);
                CloudRequirementsMet = default(bool);
                InitializationTasksCompleted = default(bool);
                ExternalCommunicationNodeOpen = default(bool);
                CloudNodeType = default(SharedCode.Cloud.CloudNodeType);
                ProcessId = default(int);
                PingDiagnostics = new GeneratedCode.DeltaObjects.PingDiagnostics();
            }

            constructor();
        }

        public RepositoryCommunicationEntity(System.Guid id): base(id)
        {
            if (!SharedCode.Serializers._SerializerContext.Pool.Current.Deserialization)
            {
                Config = default(SharedCode.Config.EntitiesRepositoryConfig);
                ConfigId = default(string);
                Num = default(int);
                InternalAddress = default(SharedCode.Entities.Cloud.EndpointAddress);
                ExternalAddress = default(SharedCode.Entities.Cloud.EndpointAddress);
                CloudRequirementsMet = default(bool);
                InitializationTasksCompleted = default(bool);
                ExternalCommunicationNodeOpen = default(bool);
                CloudNodeType = default(SharedCode.Cloud.CloudNodeType);
                ProcessId = default(int);
                PingDiagnostics = new GeneratedCode.DeltaObjects.PingDiagnostics();
            }

            constructor();
        }

        public override void GetAllLinkedEntities(long replicationMask, System.Collections.Generic.List<(long level, SharedCode.Refs.IEntityRef entityRef)> entities, long currentLevel, bool onlyDbEntities)
        {
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull)
                if (_PingDiagnostics != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_PingDiagnostics).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull, onlyDbEntities);
            base.GetAllLinkedEntities(replicationMask, entities, currentLevel, onlyDbEntities);
        }

        public override void FillReplicationSetRecursive(System.Collections.Generic.Dictionary<SharedCode.EntitySystem.ReplicationLevel, System.Collections.Generic.Dictionary<SharedCode.EntitySystem.IDeltaObject, SharedCode.EntitySystem.DeltaObjectReplicationInfo>> replicationSets, System.Collections.Generic.HashSet<SharedCode.EntitySystem.ReplicationLevel> traverseReplicationLevels, SharedCode.EntitySystem.ReplicationLevel currentLevel, bool withBsonIgnore)
        {
            base.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, currentLevel, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _PingDiagnostics, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientFull ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientFull, true, withBsonIgnore);
        }

        public override void LinkChangedDeltaObjects(System.Collections.Generic.Dictionary<ulong, SharedCode.Serializers.Protobuf.DeserializedObjectInfo> deserializedObjects, SharedCode.EntitySystem.IEntity parentEntity)
        {
            base.LinkChangedDeltaObjects(deserializedObjects, parentEntity);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _PingDiagnostics, 20, false, SharedCode.EntitySystem.ReplicationLevel.ClientFull);
        }

        public override void IncrementParentRefs(SharedCode.EntitySystem.IEntity parentEntity, bool trackChanged)
        {
            base.IncrementParentRefs(parentEntity, trackChanged);
            if (ParentEntityRefCount == 1)
            {
                ((SharedCode.EntitySystem.IDeltaObjectExt)_PingDiagnostics)?.IncrementParentRefs(parentEntity, trackChanged);
            }
        }

        public override void ReplicationLevelActualize(SharedCode.EntitySystem.ReplicationLevel? actualParentLevel, SharedCode.EntitySystem.ReplicationLevel? oldParentLevel)
        {
            base.ReplicationLevelActualize(actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _PingDiagnostics, SharedCode.EntitySystem.ReplicationLevel.ClientFull, actualParentLevel, oldParentLevel);
        }

        public override void DecrementParentRefs()
        {
            base.DecrementParentRefs();
            if (!HasParentRef())
            {
                ((SharedCode.EntitySystem.IDeltaObjectExt)_PingDiagnostics)?.DecrementParentRefs();
            }
        }

        protected override void Subscribe(string propertyName, SharedCode.EntitySystem.PropertyChangedDelegate callback)
        {
            base.Subscribe(propertyName, callback);
            switch (propertyName)
            {
                case "Config":
                    Config__Changed += callback;
                    break;
                case "ConfigId":
                    ConfigId__Changed += callback;
                    break;
                case "Num":
                    Num__Changed += callback;
                    break;
                case "InternalAddress":
                    InternalAddress__Changed += callback;
                    break;
                case "ExternalAddress":
                    ExternalAddress__Changed += callback;
                    break;
                case "CloudRequirementsMet":
                    CloudRequirementsMet__Changed += callback;
                    break;
                case "InitializationTasksCompleted":
                    InitializationTasksCompleted__Changed += callback;
                    break;
                case "ExternalCommunicationNodeOpen":
                    ExternalCommunicationNodeOpen__Changed += callback;
                    break;
                case "CloudNodeType":
                    CloudNodeType__Changed += callback;
                    break;
                case "ProcessId":
                    ProcessId__Changed += callback;
                    break;
                case "PingDiagnostics":
                    PingDiagnostics__Changed += callback;
                    break;
                default:
                    throw new System.ArgumentException($"Field {propertyName} does not exist in {GetType()}", nameof(propertyName));
            }
        }

        protected override void Unsubscribe(string propertyName, SharedCode.EntitySystem.PropertyChangedDelegate callback)
        {
            base.Unsubscribe(propertyName, callback);
            switch (propertyName)
            {
                case "Config":
                    Config__Changed -= callback;
                    break;
                case "ConfigId":
                    ConfigId__Changed -= callback;
                    break;
                case "Num":
                    Num__Changed -= callback;
                    break;
                case "InternalAddress":
                    InternalAddress__Changed -= callback;
                    break;
                case "ExternalAddress":
                    ExternalAddress__Changed -= callback;
                    break;
                case "CloudRequirementsMet":
                    CloudRequirementsMet__Changed -= callback;
                    break;
                case "InitializationTasksCompleted":
                    InitializationTasksCompleted__Changed -= callback;
                    break;
                case "ExternalCommunicationNodeOpen":
                    ExternalCommunicationNodeOpen__Changed -= callback;
                    break;
                case "CloudNodeType":
                    CloudNodeType__Changed -= callback;
                    break;
                case "ProcessId":
                    ProcessId__Changed -= callback;
                    break;
                case "PingDiagnostics":
                    PingDiagnostics__Changed -= callback;
                    break;
                default:
                    throw new System.ArgumentException($"Field {propertyName} does not exist in {GetType()}", nameof(propertyName));
            }
        }

        protected override void Unsubscribe(string propertyName)
        {
            base.Unsubscribe(propertyName);
            switch (propertyName)
            {
                case "Config":
                    Config__Changed = null;
                    break;
                case "ConfigId":
                    ConfigId__Changed = null;
                    break;
                case "Num":
                    Num__Changed = null;
                    break;
                case "InternalAddress":
                    InternalAddress__Changed = null;
                    break;
                case "ExternalAddress":
                    ExternalAddress__Changed = null;
                    break;
                case "CloudRequirementsMet":
                    CloudRequirementsMet__Changed = null;
                    break;
                case "InitializationTasksCompleted":
                    InitializationTasksCompleted__Changed = null;
                    break;
                case "ExternalCommunicationNodeOpen":
                    ExternalCommunicationNodeOpen__Changed = null;
                    break;
                case "CloudNodeType":
                    CloudNodeType__Changed = null;
                    break;
                case "ProcessId":
                    ProcessId__Changed = null;
                    break;
                case "PingDiagnostics":
                    PingDiagnostics__Changed = null;
                    break;
                default:
                    throw new System.ArgumentException($"Field {propertyName} does not exist in {GetType()}", nameof(propertyName));
            }
        }

        protected override void Unsubscribe()
        {
            base.Unsubscribe();
            Config__Changed = null;
            ConfigId__Changed = null;
            Num__Changed = null;
            InternalAddress__Changed = null;
            ExternalAddress__Changed = null;
            CloudRequirementsMet__Changed = null;
            InitializationTasksCompleted__Changed = null;
            ExternalCommunicationNodeOpen__Changed = null;
            CloudNodeType__Changed = null;
            ProcessId__Changed = null;
            PingDiagnostics__Changed = null;
        }

        protected override void FireEvents(System.Collections.Generic.List<System.Func<System.Threading.Tasks.Task>> container)
        {
            base.FireEvents(container);
            if (NeedFireEvent(10) && Config__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 10;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Config, nameof(Config), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Config__Changed);
            }

            if (NeedFireEvent(11) && ConfigId__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 11;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_ConfigId, nameof(ConfigId), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, ConfigId__Changed);
            }

            if (NeedFireEvent(12) && Num__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 12;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Num, nameof(Num), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Num__Changed);
            }

            if (NeedFireEvent(13) && InternalAddress__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 13;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_InternalAddress, nameof(InternalAddress), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, InternalAddress__Changed);
            }

            if (NeedFireEvent(14) && ExternalAddress__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 14;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_ExternalAddress, nameof(ExternalAddress), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, ExternalAddress__Changed);
            }

            if (NeedFireEvent(15) && CloudRequirementsMet__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 15;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_CloudRequirementsMet, nameof(CloudRequirementsMet), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, CloudRequirementsMet__Changed);
            }

            if (NeedFireEvent(16) && InitializationTasksCompleted__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 16;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_InitializationTasksCompleted, nameof(InitializationTasksCompleted), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, InitializationTasksCompleted__Changed);
            }

            if (NeedFireEvent(17) && ExternalCommunicationNodeOpen__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 17;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_ExternalCommunicationNodeOpen, nameof(ExternalCommunicationNodeOpen), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, ExternalCommunicationNodeOpen__Changed);
            }

            if (NeedFireEvent(18) && CloudNodeType__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 18;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_CloudNodeType, nameof(CloudNodeType), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, CloudNodeType__Changed);
            }

            if (NeedFireEvent(19) && ProcessId__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 19;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_ProcessId, nameof(ProcessId), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, ProcessId__Changed);
            }

            if (NeedFireEvent(20) && PingDiagnostics__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 20;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_PingDiagnostics, nameof(PingDiagnostics), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, PingDiagnostics__Changed);
            }
        }

        public override void Downgrade(long mask)
        {
            base.Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Master & mask) > 0)
                Config = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Server & mask) > 0)
                ConfigId = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Server & mask) > 0)
                Num = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Server & mask) > 0)
                ExternalAddress = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Server & mask) > 0)
                CloudRequirementsMet = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Server & mask) > 0)
                InitializationTasksCompleted = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Server & mask) > 0)
                ExternalCommunicationNodeOpen = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Server & mask) > 0)
                ProcessId = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                PingDiagnostics = default;
            if (_PingDiagnostics != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_PingDiagnostics).Downgrade(mask);
        }
    }
}