// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using System;
using SharedCode.Entities.Service;
using SharedCode.EntitySystem.ChainCalls;
using SharedCode.Logging;
using SharedCode.OurSimpleIoC;
using SharedCode.Serializers;
using SharedCode.Utils;
using System.Linq;
using System.Collections.Generic;
using System.CodeDom.Compiler;
using GeneratedCode.DeltaObjects.Chain;

[GeneratedCode("CodeGen", "1.0")]
public class AccountTypeServiceEntityAlwaysChainProxy : IChainedEntity
{
    private AccountTypeServiceEntityChainProxy __chain__;
    public AccountTypeServiceEntityAlwaysChainProxy(AccountTypeServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public AccountTypeServiceEntityAlwaysChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public AccountTypeServiceEntityAlwaysChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public AccountTypeServiceEntityAlwaysChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static AccountTypeServiceEntityAlwaysChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IAccountTypeServiceEntityAlways entity)
    {
        return new AccountTypeServiceEntityAlwaysChainProxy(new AccountTypeServiceEntityChainProxy((SharedCode.Entities.Service.IAccountTypeServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static AccountTypeServiceEntityAlwaysChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IAccountTypeServiceEntityAlways entity, IChainedEntity fromChain)
    {
        return new AccountTypeServiceEntityAlwaysChainProxy(new AccountTypeServiceEntityChainProxy((SharedCode.Entities.Service.IAccountTypeServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class AccountTypeServiceEntityClientBroadcastChainProxy : IChainedEntity
{
    private AccountTypeServiceEntityChainProxy __chain__;
    public AccountTypeServiceEntityClientBroadcastChainProxy(AccountTypeServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public AccountTypeServiceEntityClientBroadcastChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public AccountTypeServiceEntityClientBroadcastChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public AccountTypeServiceEntityClientBroadcastChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static AccountTypeServiceEntityClientBroadcastChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IAccountTypeServiceEntityClientBroadcast entity)
    {
        return new AccountTypeServiceEntityClientBroadcastChainProxy(new AccountTypeServiceEntityChainProxy((SharedCode.Entities.Service.IAccountTypeServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static AccountTypeServiceEntityClientBroadcastChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IAccountTypeServiceEntityClientBroadcast entity, IChainedEntity fromChain)
    {
        return new AccountTypeServiceEntityClientBroadcastChainProxy(new AccountTypeServiceEntityChainProxy((SharedCode.Entities.Service.IAccountTypeServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class AccountTypeServiceEntityClientFullApiChainProxy : IChainedEntity
{
    private AccountTypeServiceEntityChainProxy __chain__;
    public AccountTypeServiceEntityClientFullApiChainProxy(AccountTypeServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public AccountTypeServiceEntityClientFullApiChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public AccountTypeServiceEntityClientFullApiChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public AccountTypeServiceEntityClientFullApiChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static AccountTypeServiceEntityClientFullApiChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IAccountTypeServiceEntityClientFullApi entity)
    {
        return new AccountTypeServiceEntityClientFullApiChainProxy(new AccountTypeServiceEntityChainProxy((SharedCode.Entities.Service.IAccountTypeServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static AccountTypeServiceEntityClientFullApiChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IAccountTypeServiceEntityClientFullApi entity, IChainedEntity fromChain)
    {
        return new AccountTypeServiceEntityClientFullApiChainProxy(new AccountTypeServiceEntityChainProxy((SharedCode.Entities.Service.IAccountTypeServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class AccountTypeServiceEntityClientFullChainProxy : IChainedEntity
{
    private AccountTypeServiceEntityChainProxy __chain__;
    public AccountTypeServiceEntityClientFullChainProxy(AccountTypeServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public AccountTypeServiceEntityClientFullChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public AccountTypeServiceEntityClientFullChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public AccountTypeServiceEntityClientFullChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static AccountTypeServiceEntityClientFullChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IAccountTypeServiceEntityClientFull entity)
    {
        return new AccountTypeServiceEntityClientFullChainProxy(new AccountTypeServiceEntityChainProxy((SharedCode.Entities.Service.IAccountTypeServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static AccountTypeServiceEntityClientFullChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IAccountTypeServiceEntityClientFull entity, IChainedEntity fromChain)
    {
        return new AccountTypeServiceEntityClientFullChainProxy(new AccountTypeServiceEntityChainProxy((SharedCode.Entities.Service.IAccountTypeServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class AccountTypeServiceEntityServerApiChainProxy : IChainedEntity
{
    private AccountTypeServiceEntityChainProxy __chain__;
    public AccountTypeServiceEntityServerApiChainProxy(AccountTypeServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public AccountTypeServiceEntityServerApiChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public AccountTypeServiceEntityServerApiChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public AccountTypeServiceEntityServerApiChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static AccountTypeServiceEntityServerApiChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IAccountTypeServiceEntityServerApi entity)
    {
        return new AccountTypeServiceEntityServerApiChainProxy(new AccountTypeServiceEntityChainProxy((SharedCode.Entities.Service.IAccountTypeServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static AccountTypeServiceEntityServerApiChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IAccountTypeServiceEntityServerApi entity, IChainedEntity fromChain)
    {
        return new AccountTypeServiceEntityServerApiChainProxy(new AccountTypeServiceEntityChainProxy((SharedCode.Entities.Service.IAccountTypeServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class AccountTypeServiceEntityServerChainProxy : IChainedEntity
{
    private AccountTypeServiceEntityChainProxy __chain__;
    public AccountTypeServiceEntityServerChainProxy(AccountTypeServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public AccountTypeServiceEntityServerChainProxy GetAccountType(ChainArgument<System.Guid> userId)
    {
        __chain__.GetAccountType(userId);
        return this;
    }

    public AccountTypeServiceEntityServerChainProxy SetAccountType(ChainArgument<System.Guid> userId, ChainArgument<long> accountType)
    {
        __chain__.SetAccountType(userId, accountType);
        return this;
    }

    public AccountTypeServiceEntityServerChainProxy RemoveAccountType(ChainArgument<System.Guid> userId)
    {
        __chain__.RemoveAccountType(userId);
        return this;
    }

    public AccountTypeServiceEntityServerChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public AccountTypeServiceEntityServerChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public AccountTypeServiceEntityServerChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static AccountTypeServiceEntityServerChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IAccountTypeServiceEntityServer entity)
    {
        return new AccountTypeServiceEntityServerChainProxy(new AccountTypeServiceEntityChainProxy((SharedCode.Entities.Service.IAccountTypeServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static AccountTypeServiceEntityServerChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IAccountTypeServiceEntityServer entity, IChainedEntity fromChain)
    {
        return new AccountTypeServiceEntityServerChainProxy(new AccountTypeServiceEntityChainProxy((SharedCode.Entities.Service.IAccountTypeServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}