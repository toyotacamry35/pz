// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

namespace GeneratedCode.DeltaObjects
{
    public interface IWorldCharacterImplementRemoteMethods
    {
        System.Threading.Tasks.Task InvokeNewChatMessageEventImpl(string name, string message);
        System.Threading.Tasks.Task SendChatMessageImpl(string message);
        System.Threading.Tasks.Task<bool> RespawnImpl(bool onBaken, bool anyCommonBaken, System.Guid commonBakenId);
        System.Threading.Tasks.ValueTask<bool> HasBakenImpl();
        System.Threading.Tasks.ValueTask<bool> IsBakenActivatedImpl(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> bakenRef);
        System.Threading.Tasks.Task<bool> ActivateCommonBakenImpl(System.Guid commonBakenGuid);
        System.Threading.Tasks.Task<bool> InvokeItemDroppedImpl(SharedCode.Aspects.Item.Templates.BaseItemResource item, int count);
        System.Threading.Tasks.Task<Assets.ColonyShared.SharedCode.Aspects.Item.ContainerItemOperation> AddItemsImpl(System.Collections.Generic.List<SharedCode.Entities.ItemResourcePack> itemResourcesToAdd, SharedCode.EntitySystem.PropertyAddress destination);
        System.Threading.Tasks.Task<Assets.ColonyShared.SharedCode.Aspects.Item.ContainerItemOperation> MoveItemImpl(SharedCode.EntitySystem.PropertyAddress source, int sourceSlotId, SharedCode.EntitySystem.PropertyAddress destination, int destinationSlotId, int count, System.Guid clientSrcEntityId);
        System.Threading.Tasks.Task<Assets.ColonyShared.SharedCode.Aspects.Item.ContainerItemOperation> MoveAllItemsImpl(SharedCode.EntitySystem.PropertyAddress source, SharedCode.EntitySystem.PropertyAddress destination);
        System.Threading.Tasks.Task<Assets.ColonyShared.SharedCode.Aspects.Item.ContainerItemOperation> RemoveItemImpl(SharedCode.EntitySystem.PropertyAddress source, int sourceSlotId, int count, System.Guid clientEntityId);
        System.Threading.Tasks.Task<Assets.ColonyShared.SharedCode.Aspects.Item.ContainerItemOperationResult> SavePerkImpl(SharedCode.EntitySystem.PropertyAddress source, int sourceSlotId, System.Guid clientSrcEntityId);
        System.Threading.Tasks.Task<Assets.ColonyShared.SharedCode.Aspects.Item.ContainerItemOperationResult> DisassemblyPerkImpl(SharedCode.EntitySystem.PropertyAddress source, int sourceSlotId, System.Guid clientSrcEntityId);
        System.Threading.Tasks.Task<Assets.ColonyShared.SharedCode.Aspects.Item.ContainerItemOperationResult> BreakImpl(SharedCode.EntitySystem.PropertyAddress source, int sourceSlotId, System.Guid clientSrcEntityId);
        System.Threading.Tasks.Task<bool> AddPerkSlotImpl(SharedCode.EntitySystem.PropertyAddress source, int slotId, SharedCode.Aspects.Item.Templates.ItemTypeResource perkSlotType);
        System.Threading.Tasks.Task<bool> CanAddPerkSlotImpl(SharedCode.Aspects.Item.Templates.ItemTypeResource perkSlotType);
        System.Threading.Tasks.Task AddUsedSlotImpl(Assets.Src.ResourcesSystem.Base.ResourceIDFull dollSlotRes);
        System.Threading.Tasks.Task RemoveUsedSlotImpl(Assets.Src.ResourcesSystem.Base.ResourceIDFull dollSlotRes);
        System.Threading.Tasks.Task<bool> DropCorpseImpl();
        System.Threading.Tasks.Task<SharedCode.Entities.Building.OperationResult> CreateBuildElementImpl(SharedCode.DeltaObjects.Building.BuildType type, System.Guid placeId, SharedCode.Aspects.Building.BuildRecipeDef buildRecipeDef, SharedCode.Aspects.Building.CreateBuildElementData data);
        System.Threading.Tasks.Task<SharedCode.Entities.Building.OperationResultEx> OperateBuildElementImpl(SharedCode.DeltaObjects.Building.BuildType type, System.Guid placeId, System.Guid elementId, SharedCode.Entities.Building.OperationData data);
        System.Threading.Tasks.Task<SharedCode.Entities.Building.OperationResult> SetBuildCheatImpl(SharedCode.Entities.Building.OperationData data);
        System.Threading.Tasks.Task<SharedCode.Entities.Building.OperationResultEx> GetBuildCheatImpl(SharedCode.Entities.Building.OperationData data);
        System.Threading.Tasks.Task AddPointMarkerImpl(System.Guid pointMarkerGuid, Assets.ColonyShared.SharedCode.Aspects.WorldObjects.PointMarker pointMarker);
        System.Threading.Tasks.Task RemovePointMarkerImpl(System.Guid pointMarkerGuid);
        System.Threading.Tasks.Task AddPointOfInterestImpl(Assets.ColonyShared.SharedCode.Aspects.WorldObjects.PointOfInterestDef poi);
        System.Threading.Tasks.Task RemovePointOfInterestImpl(Assets.ColonyShared.SharedCode.Aspects.WorldObjects.PointOfInterestDef poi);
        System.Threading.Tasks.Task<bool> NotifyThatClientIsGoneImpl();
        System.Threading.Tasks.Task<bool> NotifyThatClientIsBackImpl();
        System.Threading.Tasks.Task<bool> AFKStateMachineChainCallImpl();
        System.Threading.Tasks.Task OnBeforeResurrectEventImpl(System.Guid id, int typeId);
        System.Threading.Tasks.Task UnstuckTeleportImpl(float minTimeout);
        System.Threading.Tasks.Task UnstuckTeleportDoImpl();
        System.Threading.Tasks.Task<string> TestCheatRpcImpl(string argument);
        System.Threading.Tasks.Task SuicideImpl();
        System.Threading.Tasks.Task SuicideCheatImpl();
        System.Threading.Tasks.ValueTask<int> ResyncAccountExperienceImpl();
        System.Threading.Tasks.Task<bool> NameSetImpl(string value);
        System.Threading.Tasks.Task<bool> PrefabSetImpl(string value);
        System.Threading.Tasks.Task<Assets.ColonyShared.SharedCode.Aspects.Item.ContainerItemOperationResult> ChangeCurrenciesImpl(System.Collections.Generic.List<SharedCode.Entities.CurrencyResourcePack> currencies);
        System.Threading.Tasks.Task<uint> GetCurrencyValueImpl(SharedCode.Aspects.Science.CurrencyResource currency);
        System.Threading.Tasks.Task ChangeStatisticImpl(Assets.ColonyShared.SharedCode.Aspects.Statictic.StatisticType statistic, Assets.ColonyShared.SharedCode.Aspects.Statictic.StatisticType target, float value);
        System.Threading.Tasks.Task SetStatImpl(Assets.Src.Aspects.Impl.Stats.StatResource res, float setValue);
        System.Threading.Tasks.Task<bool> AllowedSpawnPointSetImpl(SharedCode.Entities.GameObjectEntities.SpawnPointTypeDef value);
        System.Threading.Tasks.ValueTask<Assets.ColonyShared.SharedCode.Aspects.Damage.DamageResult> ReceiveDamageInternalImpl(Assets.ColonyShared.SharedCode.Aspects.Damage.Damage incomingDamage, System.Guid attackerId, int attackerTypeId);
        System.Threading.Tasks.ValueTask<bool> ChangeHealthInternalImpl(float health);
        System.Threading.Tasks.ValueTask SetGenderImpl(ResourceSystem.Aspects.Misc.GenderDef gender);
        System.Threading.Tasks.Task GatherResourcesImpl(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> giver, System.Collections.Generic.List<SharedCode.Entities.ItemResourcePack> items);
        System.Threading.Tasks.ValueTask<Assets.ColonyShared.SharedCode.Arithmetic.Calcers.CalcerDef<float>> GetIncomingDamageMultiplierImpl();
    }
}