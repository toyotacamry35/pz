// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using System;
using SharedCode.Network;
using System.Threading.Tasks;
using GeneratedCode.EntitySystem;
using SharedCode.EntitySystem;
using System.Collections.Generic;

namespace GeneratedCode.DeltaObjects
{
    public partial class ItemsStatsAccumulator
    {
        internal static class SendFuncs
        {
            public static ValueTask<bool> SetHasActiveWeaponAndDamageType(bool has, Assets.ColonyShared.SharedCode.Aspects.Damage.Templates.DamageTypeDef dType, Assets.ColonyShared.SharedCode.Aspects.Damage.Templates.WeaponSizeDef size, IDeltaObject __entity__, INetworkProxy networkProxy, IEntitiesRepository __repository__, Guid migrationId)
            {
                int offset;
                var serializer = ((IEntitiesRepositoryExtension)__repository__).Serializer;
                Guid __guid__;
                var __buffer__ = EntitySystem.RpcHelper.BufferPool.Take();
                try
                {
                    __buffer__ = EntitySystem.RpcHelper.FillRequestHeader(serializer, __buffer__, out offset, out __guid__, 0, ref migrationId);
                    __buffer__ = EntitySystem.RpcHelper.SerializeObjectId(serializer, __buffer__, ref offset, __entity__);
                    __buffer__ = serializer.Serialize(__buffer__, ref offset, (bool)has);
                    __buffer__ = serializer.Serialize(__buffer__, ref offset, (Assets.ColonyShared.SharedCode.Aspects.Damage.Templates.DamageTypeDef)dType);
                    __buffer__ = serializer.Serialize(__buffer__, ref offset, (Assets.ColonyShared.SharedCode.Aspects.Damage.Templates.WeaponSizeDef)size);
                    return EntitySystem.RpcHelper.SendRequest<bool>(__buffer__, offset, typeof(Assets.ColonyShared.SharedCode.Entities.IItemsStatsAccumulator), 0, SharedCode.Network.MessageSendOptions.ReliableOrdered, __guid__, networkProxy, SharedCode.EntitySystem.ServerCoreRuntimeParameters.RpcTimeoutSeconds, false);
                }
                finally
                {
                    EntitySystem.RpcHelper.BufferPool.Return(__buffer__);
                }
            }
        }
    }
}