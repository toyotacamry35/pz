// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

namespace GeneratedCode.DeltaObjects
{
    public partial class QuestEngine
    {
        protected override void RandomFill(int __count__, System.Random __random__, bool __withReadOnly__)
        {
            __count__--;
            if (__count__ <= 0)
                return;
            base.RandomFill(__count__, __random__, __withReadOnly__);
            var random = new System.Random(System.Guid.NewGuid().ToString().GetHashCode());
            {
                _Quests.Clear();
                var Questsitem0__rnd = GeneratedCode.EntitySystem.RandomFillHelper.CrateInstance<GeneratedCode.DeltaObjects.QuestObject>();
                ((ResourcesSystem.Base.IHasRandomFill)Questsitem0__rnd)?.Fill(__count__, __random__, __withReadOnly__);
                Assets.Src.Aspects.Impl.Factions.Template.QuestDef __key0__ = ((ResourcesSystem.Loader.IGameResourcesRandomExtension)ResourcesSystem.Loader.GameResourcesHolder.Instance).LoadRandomResourceByType<Assets.Src.Aspects.Impl.Factions.Template.QuestDef>(__random__);
                if (__key0__ != null)
                    Quests[__key0__] = Questsitem0__rnd;
                var Questsitem1__rnd = GeneratedCode.EntitySystem.RandomFillHelper.CrateInstance<GeneratedCode.DeltaObjects.QuestObject>();
                ((ResourcesSystem.Base.IHasRandomFill)Questsitem1__rnd)?.Fill(__count__, __random__, __withReadOnly__);
                Assets.Src.Aspects.Impl.Factions.Template.QuestDef __key1__ = ((ResourcesSystem.Loader.IGameResourcesRandomExtension)ResourcesSystem.Loader.GameResourcesHolder.Instance).LoadRandomResourceByType<Assets.Src.Aspects.Impl.Factions.Template.QuestDef>(__random__);
                if (__key1__ != null)
                    Quests[__key1__] = Questsitem1__rnd;
                var Questsitem2__rnd = GeneratedCode.EntitySystem.RandomFillHelper.CrateInstance<GeneratedCode.DeltaObjects.QuestObject>();
                ((ResourcesSystem.Base.IHasRandomFill)Questsitem2__rnd)?.Fill(__count__, __random__, __withReadOnly__);
                Assets.Src.Aspects.Impl.Factions.Template.QuestDef __key2__ = ((ResourcesSystem.Loader.IGameResourcesRandomExtension)ResourcesSystem.Loader.GameResourcesHolder.Instance).LoadRandomResourceByType<Assets.Src.Aspects.Impl.Factions.Template.QuestDef>(__random__);
                if (__key2__ != null)
                    Quests[__key2__] = Questsitem2__rnd;
            }
        }
    }
}

namespace GeneratedCode.DeltaObjects
{
    public partial class QuestObject
    {
        protected override void RandomFill(int __count__, System.Random __random__, bool __withReadOnly__)
        {
            __count__--;
            if (__count__ <= 0)
                return;
            base.RandomFill(__count__, __random__, __withReadOnly__);
            var random = new System.Random(System.Guid.NewGuid().ToString().GetHashCode());
            {
                var QuestDef__rnd = ((ResourcesSystem.Loader.IGameResourcesRandomExtension)ResourcesSystem.Loader.GameResourcesHolder.Instance).LoadRandomResourceByType<Assets.Src.Aspects.Impl.Factions.Template.QuestDef>(__random__);
                QuestDef = QuestDef__rnd;
            }

            {
                var allValuesQuestStatus = System.Enum.GetValues(typeof(SharedCode.Entities.Engine.QuestStatus));
                var valueQuestStatus = (SharedCode.Entities.Engine.QuestStatus)allValuesQuestStatus.GetValue(__random__.Next() % allValuesQuestStatus.Length);
                var Status__rnd = valueQuestStatus;
                Status = Status__rnd;
            }

            {
                var PhaseIndex__rnd = (int)__random__.Next(100);
                PhaseIndex = PhaseIndex__rnd;
            }

            {
                var IsVisible__rnd = __random__.Next() % 2 == 1;
                IsVisible = IsVisible__rnd;
            }

            {
                ((ResourcesSystem.Base.IHasRandomFill)PhaseSuccCounter)?.Fill(__count__, __random__, __withReadOnly__);
            }

            {
                ((ResourcesSystem.Base.IHasRandomFill)PhaseFailCounter)?.Fill(__count__, __random__, __withReadOnly__);
            }

            {
                var HavePhaseSuccCounter__rnd = __random__.Next() % 2 == 1;
                HavePhaseSuccCounter = HavePhaseSuccCounter__rnd;
            }

            {
                var HavePhaseFailCounter__rnd = __random__.Next() % 2 == 1;
                HavePhaseFailCounter = HavePhaseFailCounter__rnd;
            }
        }
    }
}