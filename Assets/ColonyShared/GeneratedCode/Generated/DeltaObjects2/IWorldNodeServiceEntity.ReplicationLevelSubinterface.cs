// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

namespace GeneratedCode.DeltaObjects.ReplicationInterfaces
{
    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.Always, 238321855, typeof(SharedCode.Entities.Service.IWorldNodeServiceEntity))]
    public interface IWorldNodeServiceEntityAlways : SharedCode.EntitySystem.IEntity, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, 2133363195, typeof(SharedCode.Entities.Service.IWorldNodeServiceEntity))]
    public interface IWorldNodeServiceEntityClientBroadcast : SharedCode.EntitySystem.IEntity, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.ClientFullApi, -466686796, typeof(SharedCode.Entities.Service.IWorldNodeServiceEntity))]
    public interface IWorldNodeServiceEntityClientFullApi : SharedCode.EntitySystem.IEntity, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.ClientFull, 1257032069, typeof(SharedCode.Entities.Service.IWorldNodeServiceEntity))]
    public interface IWorldNodeServiceEntityClientFull : SharedCode.EntitySystem.IEntity, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.ServerApi, -840246963, typeof(SharedCode.Entities.Service.IWorldNodeServiceEntity))]
    public interface IWorldNodeServiceEntityServerApi : SharedCode.EntitySystem.IEntity, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.Server, 760918129, typeof(SharedCode.Entities.Service.IWorldNodeServiceEntity))]
    public interface IWorldNodeServiceEntityServer : SharedCode.EntitySystem.IEntity, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
        SharedCode.Entities.Cloud.EndpointAddress ExternalAddress
        {
            get;
        }

        GeneratedCode.Custom.Config.MapDef Map
        {
            get;
        }

        System.Guid MapInstanceId
        {
            get;
        }

        System.Guid MapChunkId
        {
            get;
        }

        SharedCode.Entities.Service.WorldNodeServiceState State
        {
            get;
        }

        bool ClientNode
        {
            get;
        }

        System.Threading.Tasks.Task<bool> IsReady();
        System.Threading.Tasks.Task<bool> HostUnityMapChunk(GeneratedCode.Custom.Config.MapDef mapChunk);
        System.Threading.Tasks.Task<bool> HostUnityMapChunk(GeneratedCode.Custom.Config.MapDef mapChunk, System.Guid mapChunkId, System.Guid mapInstanceId, System.Guid mapInstanceRepositoryId);
        System.Threading.Tasks.Task<bool> HostedUnityMapChunk(GeneratedCode.Custom.Config.MapDef mapChunk, System.Guid mapChunkId, System.Guid mapInstanceId);
        System.Threading.Tasks.ValueTask<bool> CanBuildHere(SharedCode.Entities.GameObjectEntities.IEntityObjectDef entityObjectDef, SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> ent, SharedCode.Utils.Vector3 position, SharedCode.Utils.Vector3 scale, SharedCode.Utils.Quaternion rotation);
        System.Threading.Tasks.ValueTask<SharedCode.Utils.Vector3> GetDropPosition(SharedCode.Utils.Vector3 playerPosition, SharedCode.Utils.Quaternion playerRotation);
    }
}