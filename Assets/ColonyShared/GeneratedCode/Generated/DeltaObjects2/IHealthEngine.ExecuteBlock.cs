// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

namespace GeneratedCode.DeltaObjects
{
    public partial class HealthEngine
    {
        internal static class ExecuteMethods
        {
            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(0, "IHealthEngine_GetHealthCurrent__Message")]
            internal static async System.Threading.Tasks.Task GetHealthCurrent_0(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                var __result__ = await ((SharedCode.Entities.Engine.IHealthEngine)__deltaObj__).GetHealthCurrent();
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(1, "IHealthEngine_GetMaxHealth__Message")]
            internal static async System.Threading.Tasks.Task GetMaxHealth_1(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                var __result__ = await ((SharedCode.Entities.Engine.IHealthEngine)__deltaObj__).GetMaxHealth();
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(2, "IHealthEngine_GetMinHealth__Message")]
            internal static async System.Threading.Tasks.Task GetMinHealth_2(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                var __result__ = await ((SharedCode.Entities.Engine.IHealthEngine)__deltaObj__).GetMinHealth();
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(3, "IHealthEngine_GetMaxHealthAbsolute__Message")]
            internal static async System.Threading.Tasks.Task GetMaxHealthAbsolute_3(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                var __result__ = await ((SharedCode.Entities.Engine.IHealthEngine)__deltaObj__).GetMaxHealthAbsolute();
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(4, "IHealthEngine_ChangeHealth_Single_Message")]
            internal static async System.Threading.Tasks.Task ChangeHealth_4(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                float deltaValue;
                (deltaValue, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<float>(__data__, __offset__, 0, chainContext, argumentRefs);
                await ((SharedCode.Entities.Engine.IHealthEngine)__deltaObj__).ChangeHealth(deltaValue);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(5, "IHealthEngine_ParseHealth__Message")]
            internal static async System.Threading.Tasks.Task ParseHealth_5(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                await ((SharedCode.Entities.Engine.IHealthEngine)__deltaObj__).ParseHealth();
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(6, "IHealthEngine_InvokeZeroHealthEvent__Message")]
            internal static async System.Threading.Tasks.Task InvokeZeroHealthEvent_6(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                var __result__ = await ((SharedCode.Entities.Engine.IHealthEngine)__deltaObj__).InvokeZeroHealthEvent();
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(7, "IHealthEngine_ReceiveDamage_Damage_OuterRef_Message")]
            internal static async System.Threading.Tasks.Task ReceiveDamage_7(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                Assets.ColonyShared.SharedCode.Aspects.Damage.Damage damage;
                (damage, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<Assets.ColonyShared.SharedCode.Aspects.Damage.Damage>(__data__, __offset__, 0, chainContext, argumentRefs);
                SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> aggressor;
                (aggressor, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>>(__data__, __offset__, 1, chainContext, argumentRefs);
                var __result__ = await ((SharedCode.Entities.Engine.IHealthEngine)__deltaObj__).ReceiveDamage(damage, aggressor);
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(8, "IHealthEngine_OnResurrect_Guid_Int32_PositionRotation_Message")]
            internal static async System.Threading.Tasks.Task OnResurrect_8(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                System.Guid arg1;
                (arg1, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<System.Guid>(__data__, __offset__, 0, chainContext, argumentRefs);
                int arg2;
                (arg2, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 1, chainContext, argumentRefs);
                SharedCode.Entities.GameObjectEntities.PositionRotation dummy;
                (dummy, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<SharedCode.Entities.GameObjectEntities.PositionRotation>(__data__, __offset__, 2, chainContext, argumentRefs);
                await ((SharedCode.Entities.Engine.IHealthEngine)__deltaObj__).OnResurrect(arg1, arg2, dummy);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(9, "IHealthEngine_StopDeathTimer__Message")]
            internal static async System.Threading.Tasks.Task StopDeathTimer_9(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                await ((SharedCode.Entities.Engine.IHealthEngine)__deltaObj__).StopDeathTimer();
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(10, "IHealthEngine_StartDeathTimer_Single_Message")]
            internal static async System.Threading.Tasks.Task StartDeathTimer_10(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                float timeToDeath;
                (timeToDeath, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<float>(__data__, __offset__, 0, chainContext, argumentRefs);
                await ((SharedCode.Entities.Engine.IHealthEngine)__deltaObj__).StartDeathTimer(timeToDeath);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(11, "IHealthEngine_DeathTimerElapsed__Message")]
            internal static async System.Threading.Tasks.Task DeathTimerElapsed_11(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                await ((SharedCode.Entities.Engine.IHealthEngine)__deltaObj__).DeathTimerElapsed();
            }
        }
    }
}