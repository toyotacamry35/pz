// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using GeneratedCode.DeltaObjects.ReplicationInterfaces;
using SharedCode.Logging;
using GeneratedCode.Repositories;
using SharedCode.EntitySystem;
using GeneratedCode.EntitySystem;
using SharedCode.EntitySystem.Delta;

namespace GeneratedCode.DeltaObjects
{
    public class TimeStatAlways : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITimeStatAlways
    {
        public TimeStatAlways(Src.Aspects.Impl.Stats.ITimeStat deltaObject): base(deltaObject)
        {
        }

        Src.Aspects.Impl.Stats.ITimeStat __deltaObject__
        {
            get
            {
                return (Src.Aspects.Impl.Stats.ITimeStat)__deltaObjectBase__;
            }
        }

        public override int TypeId => 95524536;
    }

    public class TimeStatClientBroadcast : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITimeStatClientBroadcast
    {
        public TimeStatClientBroadcast(Src.Aspects.Impl.Stats.ITimeStat deltaObject): base(deltaObject)
        {
        }

        Src.Aspects.Impl.Stats.ITimeStat __deltaObject__
        {
            get
            {
                return (Src.Aspects.Impl.Stats.ITimeStat)__deltaObjectBase__;
            }
        }

        public Src.Aspects.Impl.Stats.Proxy.TimeStatState State => __deltaObject__.State;
        public float LimitMinCache => __deltaObject__.LimitMinCache;
        public float LimitMaxCache => __deltaObject__.LimitMaxCache;
        public Assets.Src.Aspects.Impl.Stats.StatType StatType => __deltaObject__.StatType;
        public System.Threading.Tasks.ValueTask<float> GetValue()
        {
            return __deltaObject__.GetValue();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = State;
                    break;
                case 11:
                    currProperty = LimitMinCache;
                    break;
                case 12:
                    currProperty = LimitMaxCache;
                    break;
                case 13:
                    currProperty = StatType;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 136131221;
    }

    public class TimeStatClientFullApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITimeStatClientFullApi
    {
        public TimeStatClientFullApi(Src.Aspects.Impl.Stats.ITimeStat deltaObject): base(deltaObject)
        {
        }

        Src.Aspects.Impl.Stats.ITimeStat __deltaObject__
        {
            get
            {
                return (Src.Aspects.Impl.Stats.ITimeStat)__deltaObjectBase__;
            }
        }

        public override int TypeId => 1535156393;
    }

    public class TimeStatClientFull : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITimeStatClientFull
    {
        public TimeStatClientFull(Src.Aspects.Impl.Stats.ITimeStat deltaObject): base(deltaObject)
        {
        }

        Src.Aspects.Impl.Stats.ITimeStat __deltaObject__
        {
            get
            {
                return (Src.Aspects.Impl.Stats.ITimeStat)__deltaObjectBase__;
            }
        }

        public Src.Aspects.Impl.Stats.Proxy.TimeStatState State => __deltaObject__.State;
        public float LimitMinCache => __deltaObject__.LimitMinCache;
        public float LimitMaxCache => __deltaObject__.LimitMaxCache;
        public Assets.Src.Aspects.Impl.Stats.StatType StatType => __deltaObject__.StatType;
        public System.Threading.Tasks.ValueTask<float> GetValue()
        {
            return __deltaObject__.GetValue();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = State;
                    break;
                case 11:
                    currProperty = LimitMinCache;
                    break;
                case 12:
                    currProperty = LimitMaxCache;
                    break;
                case 13:
                    currProperty = StatType;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -2063548885;
    }

    public class TimeStatServerApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITimeStatServerApi
    {
        public TimeStatServerApi(Src.Aspects.Impl.Stats.ITimeStat deltaObject): base(deltaObject)
        {
        }

        Src.Aspects.Impl.Stats.ITimeStat __deltaObject__
        {
            get
            {
                return (Src.Aspects.Impl.Stats.ITimeStat)__deltaObjectBase__;
            }
        }

        public override int TypeId => 1808763907;
    }

    public class TimeStatServer : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITimeStatServer
    {
        public TimeStatServer(Src.Aspects.Impl.Stats.ITimeStat deltaObject): base(deltaObject)
        {
        }

        Src.Aspects.Impl.Stats.ITimeStat __deltaObject__
        {
            get
            {
                return (Src.Aspects.Impl.Stats.ITimeStat)__deltaObjectBase__;
            }
        }

        public Src.Aspects.Impl.Stats.Proxy.TimeStatState State => __deltaObject__.State;
        public float LimitMinCache => __deltaObject__.LimitMinCache;
        public float LimitMaxCache => __deltaObject__.LimitMaxCache;
        public Assets.Src.Aspects.Impl.Stats.StatType StatType => __deltaObject__.StatType;
        public System.Threading.Tasks.ValueTask<bool> ChangeValue(float delta)
        {
            return __deltaObject__.ChangeValue(delta);
        }

        public System.Threading.Tasks.ValueTask<float> GetValue()
        {
            return __deltaObject__.GetValue();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = State;
                    break;
                case 11:
                    currProperty = LimitMinCache;
                    break;
                case 12:
                    currProperty = LimitMaxCache;
                    break;
                case 13:
                    currProperty = StatType;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 245351340;
    }
}