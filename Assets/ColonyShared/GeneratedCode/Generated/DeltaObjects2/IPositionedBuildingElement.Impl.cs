// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

namespace GeneratedCode.DeltaObjects
{
    [ProtoBuf.ProtoContract]
    [MongoDB.Bson.Serialization.Attributes.BsonDiscriminator("PositionedBuildingElement")]
    public partial class PositionedBuildingElement : SharedCode.EntitySystem.BaseDeltaObject, SharedCode.DeltaObjects.Building.IPositionedBuildingElement
    {
        public PositionedBuildingElement()
        {
            if (!SharedCode.Serializers._SerializerContext.Pool.Current.Deserialization)
            {
                Block = default(SharedCode.Utils.Vector3Int);
                Type = default(SharedCode.DeltaObjects.Building.BuildingElementType);
                Face = default(SharedCode.DeltaObjects.Building.BuildingElementFace);
                Side = default(SharedCode.DeltaObjects.Building.BuildingElementSide);
                State = default(SharedCode.DeltaObjects.Building.BuildState);
                Owner = default(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>);
                RecipeDef = default(SharedCode.Aspects.Building.BuildRecipeDef);
                Position = default(SharedCode.Utils.Vector3);
                Rotation = default(SharedCode.Utils.Quaternion);
                Depth = default(int);
                BuildToken = new SharedCode.EntitySystem.ChainCalls.ChainCancellationToken();
                BuildTimestamp = default(long);
                BuildTime = default(float);
                Health = default(float);
                Interaction = default(int);
                Visual = default(int);
                Id = default(System.Guid);
            }

            constructor();
        }

        protected override void Subscribe(string propertyName, SharedCode.EntitySystem.PropertyChangedDelegate callback)
        {
            base.Subscribe(propertyName, callback);
            switch (propertyName)
            {
                case "Block":
                    Block__Changed += callback;
                    break;
                case "Type":
                    Type__Changed += callback;
                    break;
                case "Face":
                    Face__Changed += callback;
                    break;
                case "Side":
                    Side__Changed += callback;
                    break;
                case "State":
                    State__Changed += callback;
                    break;
                case "Owner":
                    Owner__Changed += callback;
                    break;
                case "RecipeDef":
                    RecipeDef__Changed += callback;
                    break;
                case "Position":
                    Position__Changed += callback;
                    break;
                case "Rotation":
                    Rotation__Changed += callback;
                    break;
                case "Depth":
                    Depth__Changed += callback;
                    break;
                case "BuildToken":
                    BuildToken__Changed += callback;
                    break;
                case "BuildTimestamp":
                    BuildTimestamp__Changed += callback;
                    break;
                case "BuildTime":
                    BuildTime__Changed += callback;
                    break;
                case "Health":
                    Health__Changed += callback;
                    break;
                case "Interaction":
                    Interaction__Changed += callback;
                    break;
                case "Visual":
                    Visual__Changed += callback;
                    break;
                case "Id":
                    Id__Changed += callback;
                    break;
                default:
                    throw new System.ArgumentException($"Field {propertyName} does not exist in {GetType()}", nameof(propertyName));
            }
        }

        protected override void Unsubscribe(string propertyName, SharedCode.EntitySystem.PropertyChangedDelegate callback)
        {
            base.Unsubscribe(propertyName, callback);
            switch (propertyName)
            {
                case "Block":
                    Block__Changed -= callback;
                    break;
                case "Type":
                    Type__Changed -= callback;
                    break;
                case "Face":
                    Face__Changed -= callback;
                    break;
                case "Side":
                    Side__Changed -= callback;
                    break;
                case "State":
                    State__Changed -= callback;
                    break;
                case "Owner":
                    Owner__Changed -= callback;
                    break;
                case "RecipeDef":
                    RecipeDef__Changed -= callback;
                    break;
                case "Position":
                    Position__Changed -= callback;
                    break;
                case "Rotation":
                    Rotation__Changed -= callback;
                    break;
                case "Depth":
                    Depth__Changed -= callback;
                    break;
                case "BuildToken":
                    BuildToken__Changed -= callback;
                    break;
                case "BuildTimestamp":
                    BuildTimestamp__Changed -= callback;
                    break;
                case "BuildTime":
                    BuildTime__Changed -= callback;
                    break;
                case "Health":
                    Health__Changed -= callback;
                    break;
                case "Interaction":
                    Interaction__Changed -= callback;
                    break;
                case "Visual":
                    Visual__Changed -= callback;
                    break;
                case "Id":
                    Id__Changed -= callback;
                    break;
                default:
                    throw new System.ArgumentException($"Field {propertyName} does not exist in {GetType()}", nameof(propertyName));
            }
        }

        protected override void Unsubscribe(string propertyName)
        {
            base.Unsubscribe(propertyName);
            switch (propertyName)
            {
                case "Block":
                    Block__Changed = null;
                    break;
                case "Type":
                    Type__Changed = null;
                    break;
                case "Face":
                    Face__Changed = null;
                    break;
                case "Side":
                    Side__Changed = null;
                    break;
                case "State":
                    State__Changed = null;
                    break;
                case "Owner":
                    Owner__Changed = null;
                    break;
                case "RecipeDef":
                    RecipeDef__Changed = null;
                    break;
                case "Position":
                    Position__Changed = null;
                    break;
                case "Rotation":
                    Rotation__Changed = null;
                    break;
                case "Depth":
                    Depth__Changed = null;
                    break;
                case "BuildToken":
                    BuildToken__Changed = null;
                    break;
                case "BuildTimestamp":
                    BuildTimestamp__Changed = null;
                    break;
                case "BuildTime":
                    BuildTime__Changed = null;
                    break;
                case "Health":
                    Health__Changed = null;
                    break;
                case "Interaction":
                    Interaction__Changed = null;
                    break;
                case "Visual":
                    Visual__Changed = null;
                    break;
                case "Id":
                    Id__Changed = null;
                    break;
                default:
                    throw new System.ArgumentException($"Field {propertyName} does not exist in {GetType()}", nameof(propertyName));
            }
        }

        protected override void Unsubscribe()
        {
            base.Unsubscribe();
            Block__Changed = null;
            Type__Changed = null;
            Face__Changed = null;
            Side__Changed = null;
            State__Changed = null;
            Owner__Changed = null;
            RecipeDef__Changed = null;
            Position__Changed = null;
            Rotation__Changed = null;
            Depth__Changed = null;
            BuildToken__Changed = null;
            BuildTimestamp__Changed = null;
            BuildTime__Changed = null;
            Health__Changed = null;
            Interaction__Changed = null;
            Visual__Changed = null;
            Id__Changed = null;
        }

        protected override void FireEvents(System.Collections.Generic.List<System.Func<System.Threading.Tasks.Task>> container)
        {
            base.FireEvents(container);
            if (NeedFireEvent(10) && Block__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 10;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Block, nameof(Block), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Block__Changed);
            }

            if (NeedFireEvent(11) && Type__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 11;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Type, nameof(Type), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Type__Changed);
            }

            if (NeedFireEvent(12) && Face__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 12;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Face, nameof(Face), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Face__Changed);
            }

            if (NeedFireEvent(13) && Side__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 13;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Side, nameof(Side), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Side__Changed);
            }

            if (NeedFireEvent(14) && State__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 14;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_State, nameof(State), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, State__Changed);
            }

            if (NeedFireEvent(15) && Owner__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 15;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Owner, nameof(Owner), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Owner__Changed);
            }

            if (NeedFireEvent(16) && RecipeDef__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 16;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_RecipeDef, nameof(RecipeDef), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, RecipeDef__Changed);
            }

            if (NeedFireEvent(17) && Position__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 17;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Position, nameof(Position), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Position__Changed);
            }

            if (NeedFireEvent(18) && Rotation__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 18;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Rotation, nameof(Rotation), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Rotation__Changed);
            }

            if (NeedFireEvent(19) && Depth__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 19;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Depth, nameof(Depth), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Depth__Changed);
            }

            if (NeedFireEvent(20) && BuildToken__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 20;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_BuildToken, nameof(BuildToken), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, BuildToken__Changed);
            }

            if (NeedFireEvent(21) && BuildTimestamp__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 21;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_BuildTimestamp, nameof(BuildTimestamp), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, BuildTimestamp__Changed);
            }

            if (NeedFireEvent(22) && BuildTime__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 22;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_BuildTime, nameof(BuildTime), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, BuildTime__Changed);
            }

            if (NeedFireEvent(23) && Health__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 23;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Health, nameof(Health), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Health__Changed);
            }

            if (NeedFireEvent(24) && Interaction__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 24;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Interaction, nameof(Interaction), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Interaction__Changed);
            }

            if (NeedFireEvent(25) && Visual__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 25;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Visual, nameof(Visual), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Visual__Changed);
            }

            if (NeedFireEvent(26) && Id__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 26;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Id, nameof(Id), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Id__Changed);
            }
        }

        public override void Downgrade(long mask)
        {
            base.Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                Block = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                Type = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                Face = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                Side = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                State = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                Owner = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                RecipeDef = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                Position = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                Rotation = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                Depth = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Server & mask) > 0)
                BuildToken = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                BuildTimestamp = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                BuildTime = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                Health = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                Interaction = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                Visual = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                Id = default;
        }
    }
}