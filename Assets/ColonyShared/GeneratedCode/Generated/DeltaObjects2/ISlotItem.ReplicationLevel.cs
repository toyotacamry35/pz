// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using GeneratedCode.DeltaObjects.ReplicationInterfaces;
using SharedCode.Logging;
using GeneratedCode.Repositories;
using SharedCode.EntitySystem;
using GeneratedCode.EntitySystem;
using SharedCode.EntitySystem.Delta;

namespace GeneratedCode.DeltaObjects
{
    public class SlotItemAlways : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISlotItemAlways
    {
        public SlotItemAlways(SharedCode.DeltaObjects.ISlotItem deltaObject): base(deltaObject)
        {
        }

        SharedCode.DeltaObjects.ISlotItem __deltaObject__
        {
            get
            {
                return (SharedCode.DeltaObjects.ISlotItem)__deltaObjectBase__;
            }
        }

        public override int TypeId => 1035483868;
    }

    public class SlotItemClientBroadcast : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISlotItemClientBroadcast
    {
        public SlotItemClientBroadcast(SharedCode.DeltaObjects.ISlotItem deltaObject): base(deltaObject)
        {
        }

        SharedCode.DeltaObjects.ISlotItem __deltaObject__
        {
            get
            {
                return (SharedCode.DeltaObjects.ISlotItem)__deltaObjectBase__;
            }
        }

        public int Stack => __deltaObject__.Stack;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IItemClientBroadcast Item => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IItemClientBroadcast)__deltaObject__.Item?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Stack;
                    break;
                case 11:
                    currProperty = Item;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -244654467;
    }

    public class SlotItemClientFullApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISlotItemClientFullApi
    {
        public SlotItemClientFullApi(SharedCode.DeltaObjects.ISlotItem deltaObject): base(deltaObject)
        {
        }

        SharedCode.DeltaObjects.ISlotItem __deltaObject__
        {
            get
            {
                return (SharedCode.DeltaObjects.ISlotItem)__deltaObjectBase__;
            }
        }

        public override int TypeId => -263876457;
    }

    public class SlotItemClientFull : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISlotItemClientFull
    {
        public SlotItemClientFull(SharedCode.DeltaObjects.ISlotItem deltaObject): base(deltaObject)
        {
        }

        SharedCode.DeltaObjects.ISlotItem __deltaObject__
        {
            get
            {
                return (SharedCode.DeltaObjects.ISlotItem)__deltaObjectBase__;
            }
        }

        public int Stack => __deltaObject__.Stack;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IItemClientFull Item => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IItemClientFull)__deltaObject__.Item?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientFull);
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Stack;
                    break;
                case 11:
                    currProperty = Item;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -851254685;
    }

    public class SlotItemServerApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISlotItemServerApi
    {
        public SlotItemServerApi(SharedCode.DeltaObjects.ISlotItem deltaObject): base(deltaObject)
        {
        }

        SharedCode.DeltaObjects.ISlotItem __deltaObject__
        {
            get
            {
                return (SharedCode.DeltaObjects.ISlotItem)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1256431043;
    }

    public class SlotItemServer : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISlotItemServer
    {
        public SlotItemServer(SharedCode.DeltaObjects.ISlotItem deltaObject): base(deltaObject)
        {
        }

        SharedCode.DeltaObjects.ISlotItem __deltaObject__
        {
            get
            {
                return (SharedCode.DeltaObjects.ISlotItem)__deltaObjectBase__;
            }
        }

        public int Stack => __deltaObject__.Stack;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IItemServer Item => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IItemServer)__deltaObject__.Item?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Stack;
                    break;
                case 11:
                    currProperty = Item;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 1078247724;
    }
}