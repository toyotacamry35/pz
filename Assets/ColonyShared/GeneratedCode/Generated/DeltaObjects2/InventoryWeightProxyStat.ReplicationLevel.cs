// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using GeneratedCode.DeltaObjects.ReplicationInterfaces;
using SharedCode.Logging;
using GeneratedCode.Repositories;
using SharedCode.EntitySystem;
using GeneratedCode.EntitySystem;
using SharedCode.EntitySystem.Delta;

namespace GeneratedCode.DeltaObjects
{
    public class InventoryWeightProxyStatAlways : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IInventoryWeightProxyStatAlways
    {
        public InventoryWeightProxyStatAlways(GeneratedCode.DeltaObjects.IInventoryWeightProxyStat deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.DeltaObjects.IInventoryWeightProxyStat __deltaObject__
        {
            get
            {
                return (GeneratedCode.DeltaObjects.IInventoryWeightProxyStat)__deltaObjectBase__;
            }
        }

        public override int TypeId => 55468434;
    }

    public class InventoryWeightProxyStatClientBroadcast : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IInventoryWeightProxyStatClientBroadcast
    {
        public InventoryWeightProxyStatClientBroadcast(GeneratedCode.DeltaObjects.IInventoryWeightProxyStat deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.DeltaObjects.IInventoryWeightProxyStat __deltaObject__
        {
            get
            {
                return (GeneratedCode.DeltaObjects.IInventoryWeightProxyStat)__deltaObjectBase__;
            }
        }

        public float LimitMinCache => __deltaObject__.LimitMinCache;
        public float LimitMaxCache => __deltaObject__.LimitMaxCache;
        public Assets.Src.Aspects.Impl.Stats.StatType StatType => __deltaObject__.StatType;
        public System.Threading.Tasks.ValueTask<float> GetValue()
        {
            return __deltaObject__.GetValue();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 11:
                    currProperty = LimitMinCache;
                    break;
                case 12:
                    currProperty = LimitMaxCache;
                    break;
                case 13:
                    currProperty = StatType;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 1404423732;
    }

    public class InventoryWeightProxyStatClientFullApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IInventoryWeightProxyStatClientFullApi
    {
        public InventoryWeightProxyStatClientFullApi(GeneratedCode.DeltaObjects.IInventoryWeightProxyStat deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.DeltaObjects.IInventoryWeightProxyStat __deltaObject__
        {
            get
            {
                return (GeneratedCode.DeltaObjects.IInventoryWeightProxyStat)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1936367757;
    }

    public class InventoryWeightProxyStatClientFull : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IInventoryWeightProxyStatClientFull
    {
        public InventoryWeightProxyStatClientFull(GeneratedCode.DeltaObjects.IInventoryWeightProxyStat deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.DeltaObjects.IInventoryWeightProxyStat __deltaObject__
        {
            get
            {
                return (GeneratedCode.DeltaObjects.IInventoryWeightProxyStat)__deltaObjectBase__;
            }
        }

        public float ValueCache => __deltaObject__.ValueCache;
        public float LimitMinCache => __deltaObject__.LimitMinCache;
        public float LimitMaxCache => __deltaObject__.LimitMaxCache;
        public Assets.Src.Aspects.Impl.Stats.StatType StatType => __deltaObject__.StatType;
        public System.Threading.Tasks.ValueTask<float> GetValue()
        {
            return __deltaObject__.GetValue();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = ValueCache;
                    break;
                case 11:
                    currProperty = LimitMinCache;
                    break;
                case 12:
                    currProperty = LimitMaxCache;
                    break;
                case 13:
                    currProperty = StatType;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 975041201;
    }

    public class InventoryWeightProxyStatServerApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IInventoryWeightProxyStatServerApi
    {
        public InventoryWeightProxyStatServerApi(GeneratedCode.DeltaObjects.IInventoryWeightProxyStat deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.DeltaObjects.IInventoryWeightProxyStat __deltaObject__
        {
            get
            {
                return (GeneratedCode.DeltaObjects.IInventoryWeightProxyStat)__deltaObjectBase__;
            }
        }

        public override int TypeId => 372725132;
    }

    public class InventoryWeightProxyStatServer : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IInventoryWeightProxyStatServer
    {
        public InventoryWeightProxyStatServer(GeneratedCode.DeltaObjects.IInventoryWeightProxyStat deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.DeltaObjects.IInventoryWeightProxyStat __deltaObject__
        {
            get
            {
                return (GeneratedCode.DeltaObjects.IInventoryWeightProxyStat)__deltaObjectBase__;
            }
        }

        public float ValueCache => __deltaObject__.ValueCache;
        public float LimitMinCache => __deltaObject__.LimitMinCache;
        public float LimitMaxCache => __deltaObject__.LimitMaxCache;
        public Assets.Src.Aspects.Impl.Stats.StatType StatType => __deltaObject__.StatType;
        public System.Threading.Tasks.Task SetCacheValue(float value)
        {
            return __deltaObject__.SetCacheValue(value);
        }

        public System.Threading.Tasks.ValueTask<float> GetValue()
        {
            return __deltaObject__.GetValue();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = ValueCache;
                    break;
                case 11:
                    currProperty = LimitMinCache;
                    break;
                case 12:
                    currProperty = LimitMaxCache;
                    break;
                case 13:
                    currProperty = StatType;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 1363232192;
    }
}