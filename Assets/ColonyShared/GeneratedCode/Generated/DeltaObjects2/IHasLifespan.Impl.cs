// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

namespace GeneratedCode.DeltaObjects
{
    [ProtoBuf.ProtoContract]
    [MongoDB.Bson.Serialization.Attributes.BsonDiscriminator("Lifespan")]
    public partial class Lifespan : SharedCode.EntitySystem.BaseDeltaObject, Assets.ColonyShared.SharedCode.Entities.ILifespan, ILifespanImplementRemoteMethods
    {
        public Lifespan()
        {
            if (!SharedCode.Serializers._SerializerContext.Pool.Current.Deserialization)
            {
                CountdownCancellationToken = new SharedCode.EntitySystem.ChainCalls.ChainCancellationToken();
                DoOnExpired = default(Assets.ColonyShared.SharedCode.Entities.OnLifespanExpired);
                LifespanSec = default(float);
                IsLifespanExpired = default(bool);
                LifespanCycleNumber = default(int);
                BirthTime = default(long);
            }

            constructor();
        }

        protected override void Subscribe(string propertyName, SharedCode.EntitySystem.PropertyChangedDelegate callback)
        {
            base.Subscribe(propertyName, callback);
            switch (propertyName)
            {
                case "CountdownCancellationToken":
                    CountdownCancellationToken__Changed += callback;
                    break;
                case "DoOnExpired":
                    DoOnExpired__Changed += callback;
                    break;
                case "LifespanSec":
                    LifespanSec__Changed += callback;
                    break;
                case "IsLifespanExpired":
                    IsLifespanExpired__Changed += callback;
                    break;
                case "LifespanCycleNumber":
                    LifespanCycleNumber__Changed += callback;
                    break;
                case "BirthTime":
                    BirthTime__Changed += callback;
                    break;
                default:
                    throw new System.ArgumentException($"Field {propertyName} does not exist in {GetType()}", nameof(propertyName));
            }
        }

        protected override void Unsubscribe(string propertyName, SharedCode.EntitySystem.PropertyChangedDelegate callback)
        {
            base.Unsubscribe(propertyName, callback);
            switch (propertyName)
            {
                case "CountdownCancellationToken":
                    CountdownCancellationToken__Changed -= callback;
                    break;
                case "DoOnExpired":
                    DoOnExpired__Changed -= callback;
                    break;
                case "LifespanSec":
                    LifespanSec__Changed -= callback;
                    break;
                case "IsLifespanExpired":
                    IsLifespanExpired__Changed -= callback;
                    break;
                case "LifespanCycleNumber":
                    LifespanCycleNumber__Changed -= callback;
                    break;
                case "BirthTime":
                    BirthTime__Changed -= callback;
                    break;
                default:
                    throw new System.ArgumentException($"Field {propertyName} does not exist in {GetType()}", nameof(propertyName));
            }
        }

        protected override void Unsubscribe(string propertyName)
        {
            base.Unsubscribe(propertyName);
            switch (propertyName)
            {
                case "CountdownCancellationToken":
                    CountdownCancellationToken__Changed = null;
                    break;
                case "DoOnExpired":
                    DoOnExpired__Changed = null;
                    break;
                case "LifespanSec":
                    LifespanSec__Changed = null;
                    break;
                case "IsLifespanExpired":
                    IsLifespanExpired__Changed = null;
                    break;
                case "LifespanCycleNumber":
                    LifespanCycleNumber__Changed = null;
                    break;
                case "BirthTime":
                    BirthTime__Changed = null;
                    break;
                default:
                    throw new System.ArgumentException($"Field {propertyName} does not exist in {GetType()}", nameof(propertyName));
            }
        }

        protected override void Unsubscribe()
        {
            base.Unsubscribe();
            CountdownCancellationToken__Changed = null;
            DoOnExpired__Changed = null;
            LifespanSec__Changed = null;
            IsLifespanExpired__Changed = null;
            LifespanCycleNumber__Changed = null;
            BirthTime__Changed = null;
        }

        protected override void FireEvents(System.Collections.Generic.List<System.Func<System.Threading.Tasks.Task>> container)
        {
            base.FireEvents(container);
            if (NeedFireEvent(10) && CountdownCancellationToken__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 10;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_CountdownCancellationToken, nameof(CountdownCancellationToken), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, CountdownCancellationToken__Changed);
            }

            if (NeedFireEvent(11) && DoOnExpired__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 11;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_DoOnExpired, nameof(DoOnExpired), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, DoOnExpired__Changed);
            }

            if (NeedFireEvent(12) && LifespanSec__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 12;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_LifespanSec, nameof(LifespanSec), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, LifespanSec__Changed);
            }

            if (NeedFireEvent(13) && IsLifespanExpired__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 13;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_IsLifespanExpired, nameof(IsLifespanExpired), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, IsLifespanExpired__Changed);
            }

            if (NeedFireEvent(14) && LifespanCycleNumber__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 14;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_LifespanCycleNumber, nameof(LifespanCycleNumber), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, LifespanCycleNumber__Changed);
            }

            if (NeedFireEvent(15) && BirthTime__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 15;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_BirthTime, nameof(BirthTime), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, BirthTime__Changed);
            }
        }

        public override void Downgrade(long mask)
        {
            base.Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Master & mask) > 0)
                CountdownCancellationToken = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Server & mask) > 0)
                DoOnExpired = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast & mask) > 0)
                LifespanSec = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast & mask) > 0)
                IsLifespanExpired = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast & mask) > 0)
                LifespanCycleNumber = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast & mask) > 0)
                BirthTime = default;
        }
    }
}