// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using GeneratedCode.DeltaObjects.ReplicationInterfaces;
using SharedCode.Logging;
using GeneratedCode.Repositories;
using SharedCode.EntitySystem;
using GeneratedCode.EntitySystem;
using SharedCode.EntitySystem.Delta;

namespace GeneratedCode.DeltaObjects
{
    public class SceneEntityAlways : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISceneEntityAlways
    {
        public SceneEntityAlways(GeneratedCode.MapSystem.ISceneEntity deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.MapSystem.ISceneEntity __deltaObject__
        {
            get
            {
                return (GeneratedCode.MapSystem.ISceneEntity)__deltaObjectBase__;
            }
        }

        public long EndTime => __deltaObject__.EndTime;
        public long StartTime => __deltaObject__.StartTime;
        public SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> EventOwner => __deltaObject__.EventOwner;
        public System.Collections.Generic.List<SharedCode.Entities.GameObjectEntities.SceneChunkDef> SceneChunks => __deltaObject__.SceneChunks;
        public bool Loaded => __deltaObject__.Loaded;
        public SharedCode.Entities.GameObjectEntities.IEntityObjectDef Def => __deltaObject__.Def;
        public GeneratedCode.MapSystem.MapOwner MapOwner => __deltaObject__.MapOwner;
        public System.Guid StaticIdFromExport => __deltaObject__.StaticIdFromExport;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedAlways WorldSpaced => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedAlways)__deltaObject__.WorldSpaced?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Always);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncAlways MovementSync => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncAlways)__deltaObject__.MovementSync?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Always);
        public System.Threading.Tasks.Task<bool> Spawn()
        {
            return __deltaObject__.Spawn();
        }

        public System.Threading.Tasks.Task<bool> Despawn()
        {
            return __deltaObject__.Despawn();
        }

        public System.Threading.Tasks.Task<bool> SetLoadableObj(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> obj, System.Guid fromStatic, SharedCode.Utils.Vector3 wsPos)
        {
            return __deltaObject__.SetLoadableObj(obj, fromStatic, wsPos);
        }

        public System.Threading.Tasks.Task<bool> RemoveObject(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> obj)
        {
            return __deltaObject__.RemoveObject(obj);
        }

        public System.Threading.Tasks.Task<bool> LoadEntity(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> obj)
        {
            return __deltaObject__.LoadEntity(obj);
        }

        public System.Threading.Tasks.Task<bool> FinishLoading()
        {
            return __deltaObject__.FinishLoading();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = EndTime;
                    break;
                case 11:
                    currProperty = StartTime;
                    break;
                case 12:
                    currProperty = EventOwner;
                    break;
                case 13:
                    currProperty = SceneChunks;
                    break;
                case 16:
                    currProperty = Loaded;
                    break;
                case 17:
                    currProperty = Def;
                    break;
                case 18:
                    currProperty = MapOwner;
                    break;
                case 19:
                    currProperty = StaticIdFromExport;
                    break;
                case 20:
                    currProperty = WorldSpaced;
                    break;
                case 21:
                    currProperty = MovementSync;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -135964319;
    }

    public class SceneEntityClientBroadcast : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISceneEntityClientBroadcast
    {
        public SceneEntityClientBroadcast(GeneratedCode.MapSystem.ISceneEntity deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.MapSystem.ISceneEntity __deltaObject__
        {
            get
            {
                return (GeneratedCode.MapSystem.ISceneEntity)__deltaObjectBase__;
            }
        }

        public long EndTime => __deltaObject__.EndTime;
        public long StartTime => __deltaObject__.StartTime;
        public SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> EventOwner => __deltaObject__.EventOwner;
        public System.Collections.Generic.List<SharedCode.Entities.GameObjectEntities.SceneChunkDef> SceneChunks => __deltaObject__.SceneChunks;
        public bool Loaded => __deltaObject__.Loaded;
        public SharedCode.Entities.GameObjectEntities.IEntityObjectDef Def => __deltaObject__.Def;
        public GeneratedCode.MapSystem.MapOwner MapOwner => __deltaObject__.MapOwner;
        public System.Guid StaticIdFromExport => __deltaObject__.StaticIdFromExport;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedClientBroadcast WorldSpaced => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedClientBroadcast)__deltaObject__.WorldSpaced?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncClientBroadcast MovementSync => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncClientBroadcast)__deltaObject__.MovementSync?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
        public System.Threading.Tasks.Task<bool> Spawn()
        {
            return __deltaObject__.Spawn();
        }

        public System.Threading.Tasks.Task<bool> Despawn()
        {
            return __deltaObject__.Despawn();
        }

        public System.Threading.Tasks.Task<bool> SetLoadableObj(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> obj, System.Guid fromStatic, SharedCode.Utils.Vector3 wsPos)
        {
            return __deltaObject__.SetLoadableObj(obj, fromStatic, wsPos);
        }

        public System.Threading.Tasks.Task<bool> RemoveObject(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> obj)
        {
            return __deltaObject__.RemoveObject(obj);
        }

        public System.Threading.Tasks.Task<bool> LoadEntity(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> obj)
        {
            return __deltaObject__.LoadEntity(obj);
        }

        public System.Threading.Tasks.Task<bool> FinishLoading()
        {
            return __deltaObject__.FinishLoading();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = EndTime;
                    break;
                case 11:
                    currProperty = StartTime;
                    break;
                case 12:
                    currProperty = EventOwner;
                    break;
                case 13:
                    currProperty = SceneChunks;
                    break;
                case 16:
                    currProperty = Loaded;
                    break;
                case 17:
                    currProperty = Def;
                    break;
                case 18:
                    currProperty = MapOwner;
                    break;
                case 19:
                    currProperty = StaticIdFromExport;
                    break;
                case 20:
                    currProperty = WorldSpaced;
                    break;
                case 21:
                    currProperty = MovementSync;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 1656698220;
    }

    public class SceneEntityClientFullApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISceneEntityClientFullApi
    {
        public SceneEntityClientFullApi(GeneratedCode.MapSystem.ISceneEntity deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.MapSystem.ISceneEntity __deltaObject__
        {
            get
            {
                return (GeneratedCode.MapSystem.ISceneEntity)__deltaObjectBase__;
            }
        }

        public override int TypeId => 2047231838;
    }

    public class SceneEntityClientFull : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISceneEntityClientFull
    {
        public SceneEntityClientFull(GeneratedCode.MapSystem.ISceneEntity deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.MapSystem.ISceneEntity __deltaObject__
        {
            get
            {
                return (GeneratedCode.MapSystem.ISceneEntity)__deltaObjectBase__;
            }
        }

        public long EndTime => __deltaObject__.EndTime;
        public long StartTime => __deltaObject__.StartTime;
        public SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> EventOwner => __deltaObject__.EventOwner;
        public System.Collections.Generic.List<SharedCode.Entities.GameObjectEntities.SceneChunkDef> SceneChunks => __deltaObject__.SceneChunks;
        public bool Loaded => __deltaObject__.Loaded;
        public SharedCode.Entities.GameObjectEntities.IEntityObjectDef Def => __deltaObject__.Def;
        public GeneratedCode.MapSystem.MapOwner MapOwner => __deltaObject__.MapOwner;
        public System.Guid StaticIdFromExport => __deltaObject__.StaticIdFromExport;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedClientFull WorldSpaced => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedClientFull)__deltaObject__.WorldSpaced?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientFull);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncClientFull MovementSync => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncClientFull)__deltaObject__.MovementSync?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientFull);
        public System.Threading.Tasks.Task<bool> Spawn()
        {
            return __deltaObject__.Spawn();
        }

        public System.Threading.Tasks.Task<bool> Despawn()
        {
            return __deltaObject__.Despawn();
        }

        public System.Threading.Tasks.Task<bool> SetLoadableObj(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> obj, System.Guid fromStatic, SharedCode.Utils.Vector3 wsPos)
        {
            return __deltaObject__.SetLoadableObj(obj, fromStatic, wsPos);
        }

        public System.Threading.Tasks.Task<bool> RemoveObject(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> obj)
        {
            return __deltaObject__.RemoveObject(obj);
        }

        public System.Threading.Tasks.Task<bool> LoadEntity(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> obj)
        {
            return __deltaObject__.LoadEntity(obj);
        }

        public System.Threading.Tasks.Task<bool> FinishLoading()
        {
            return __deltaObject__.FinishLoading();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = EndTime;
                    break;
                case 11:
                    currProperty = StartTime;
                    break;
                case 12:
                    currProperty = EventOwner;
                    break;
                case 13:
                    currProperty = SceneChunks;
                    break;
                case 16:
                    currProperty = Loaded;
                    break;
                case 17:
                    currProperty = Def;
                    break;
                case 18:
                    currProperty = MapOwner;
                    break;
                case 19:
                    currProperty = StaticIdFromExport;
                    break;
                case 20:
                    currProperty = WorldSpaced;
                    break;
                case 21:
                    currProperty = MovementSync;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -443918065;
    }

    public class SceneEntityServerApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISceneEntityServerApi
    {
        public SceneEntityServerApi(GeneratedCode.MapSystem.ISceneEntity deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.MapSystem.ISceneEntity __deltaObject__
        {
            get
            {
                return (GeneratedCode.MapSystem.ISceneEntity)__deltaObjectBase__;
            }
        }

        public override int TypeId => 1933808116;
    }

    public class SceneEntityServer : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISceneEntityServer
    {
        public SceneEntityServer(GeneratedCode.MapSystem.ISceneEntity deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.MapSystem.ISceneEntity __deltaObject__
        {
            get
            {
                return (GeneratedCode.MapSystem.ISceneEntity)__deltaObjectBase__;
            }
        }

        public long EndTime => __deltaObject__.EndTime;
        public long StartTime => __deltaObject__.StartTime;
        public SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> EventOwner => __deltaObject__.EventOwner;
        public System.Collections.Generic.List<SharedCode.Entities.GameObjectEntities.SceneChunkDef> SceneChunks => __deltaObject__.SceneChunks;
        public System.Collections.Generic.Dictionary<System.Guid, ResourceSystem.Utils.OuterRef> StaticToDynamicData => __deltaObject__.StaticToDynamicData;
        public bool Loaded => __deltaObject__.Loaded;
        public SharedCode.Entities.GameObjectEntities.IEntityObjectDef Def => __deltaObject__.Def;
        public GeneratedCode.MapSystem.MapOwner MapOwner => __deltaObject__.MapOwner;
        public System.Guid StaticIdFromExport => __deltaObject__.StaticIdFromExport;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedServer WorldSpaced => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedServer)__deltaObject__.WorldSpaced?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncServer MovementSync => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncServer)__deltaObject__.MovementSync?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public System.Threading.Tasks.Task<bool> Spawn()
        {
            return __deltaObject__.Spawn();
        }

        public System.Threading.Tasks.Task<bool> Despawn()
        {
            return __deltaObject__.Despawn();
        }

        public System.Threading.Tasks.Task<bool> SetLoadableObj(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> obj, System.Guid fromStatic, SharedCode.Utils.Vector3 wsPos)
        {
            return __deltaObject__.SetLoadableObj(obj, fromStatic, wsPos);
        }

        public System.Threading.Tasks.Task<bool> RemoveObject(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> obj)
        {
            return __deltaObject__.RemoveObject(obj);
        }

        public System.Threading.Tasks.Task<bool> LoadEntity(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> obj)
        {
            return __deltaObject__.LoadEntity(obj);
        }

        public System.Threading.Tasks.Task<bool> FinishLoading()
        {
            return __deltaObject__.FinishLoading();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = EndTime;
                    break;
                case 11:
                    currProperty = StartTime;
                    break;
                case 12:
                    currProperty = EventOwner;
                    break;
                case 13:
                    currProperty = SceneChunks;
                    break;
                case 15:
                    currProperty = StaticToDynamicData;
                    break;
                case 16:
                    currProperty = Loaded;
                    break;
                case 17:
                    currProperty = Def;
                    break;
                case 18:
                    currProperty = MapOwner;
                    break;
                case 19:
                    currProperty = StaticIdFromExport;
                    break;
                case 20:
                    currProperty = WorldSpaced;
                    break;
                case 21:
                    currProperty = MovementSync;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -1147729372;
    }
}

namespace GeneratedCode.DeltaObjects
{
    public class EventPointAlways : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IEventPointAlways
    {
        public EventPointAlways(GeneratedCode.MapSystem.IEventPoint deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.MapSystem.IEventPoint __deltaObject__
        {
            get
            {
                return (GeneratedCode.MapSystem.IEventPoint)__deltaObjectBase__;
            }
        }

        public SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> RunningEvent => __deltaObject__.RunningEvent;
        public SharedCode.Entities.GameObjectEntities.IEntityObjectDef Def => __deltaObject__.Def;
        public GeneratedCode.MapSystem.MapOwner MapOwner => __deltaObject__.MapOwner;
        public System.Guid StaticIdFromExport => __deltaObject__.StaticIdFromExport;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedAlways WorldSpaced => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedAlways)__deltaObject__.WorldSpaced?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Always);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncAlways MovementSync => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncAlways)__deltaObject__.MovementSync?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Always);
        public System.Threading.Tasks.Task<SharedCode.Entities.GameObjectEntities.IEntityObjectDef> LoadEvent()
        {
            return __deltaObject__.LoadEvent();
        }

        public System.Threading.Tasks.Task<bool> AssignEvent(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> newEvent, SharedCode.Entities.GameObjectEntities.EventInstanceDef eventDef, Scripting.ScriptingContext ctx)
        {
            return __deltaObject__.AssignEvent(newEvent, eventDef, ctx);
        }

        public System.Threading.Tasks.Task<bool> RemoveEvent()
        {
            return __deltaObject__.RemoveEvent();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = RunningEvent;
                    break;
                case 11:
                    currProperty = Def;
                    break;
                case 12:
                    currProperty = MapOwner;
                    break;
                case 13:
                    currProperty = StaticIdFromExport;
                    break;
                case 14:
                    currProperty = WorldSpaced;
                    break;
                case 15:
                    currProperty = MovementSync;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 1034081628;
    }

    public class EventPointClientBroadcast : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IEventPointClientBroadcast
    {
        public EventPointClientBroadcast(GeneratedCode.MapSystem.IEventPoint deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.MapSystem.IEventPoint __deltaObject__
        {
            get
            {
                return (GeneratedCode.MapSystem.IEventPoint)__deltaObjectBase__;
            }
        }

        public SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> RunningEvent => __deltaObject__.RunningEvent;
        public SharedCode.Entities.GameObjectEntities.IEntityObjectDef Def => __deltaObject__.Def;
        public GeneratedCode.MapSystem.MapOwner MapOwner => __deltaObject__.MapOwner;
        public System.Guid StaticIdFromExport => __deltaObject__.StaticIdFromExport;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedClientBroadcast WorldSpaced => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedClientBroadcast)__deltaObject__.WorldSpaced?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncClientBroadcast MovementSync => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncClientBroadcast)__deltaObject__.MovementSync?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksEngineClientBroadcast LinksEngine => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksEngineClientBroadcast)__deltaObject__.LinksEngine?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
        public System.Threading.Tasks.Task<SharedCode.Entities.GameObjectEntities.IEntityObjectDef> LoadEvent()
        {
            return __deltaObject__.LoadEvent();
        }

        public System.Threading.Tasks.Task<bool> AssignEvent(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> newEvent, SharedCode.Entities.GameObjectEntities.EventInstanceDef eventDef, Scripting.ScriptingContext ctx)
        {
            return __deltaObject__.AssignEvent(newEvent, eventDef, ctx);
        }

        public System.Threading.Tasks.Task<bool> RemoveEvent()
        {
            return __deltaObject__.RemoveEvent();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = RunningEvent;
                    break;
                case 11:
                    currProperty = Def;
                    break;
                case 12:
                    currProperty = MapOwner;
                    break;
                case 13:
                    currProperty = StaticIdFromExport;
                    break;
                case 14:
                    currProperty = WorldSpaced;
                    break;
                case 15:
                    currProperty = MovementSync;
                    break;
                case 16:
                    currProperty = LinksEngine;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 1443626309;
    }

    public class EventPointClientFullApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IEventPointClientFullApi
    {
        public EventPointClientFullApi(GeneratedCode.MapSystem.IEventPoint deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.MapSystem.IEventPoint __deltaObject__
        {
            get
            {
                return (GeneratedCode.MapSystem.IEventPoint)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1525328404;
    }

    public class EventPointClientFull : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IEventPointClientFull
    {
        public EventPointClientFull(GeneratedCode.MapSystem.IEventPoint deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.MapSystem.IEventPoint __deltaObject__
        {
            get
            {
                return (GeneratedCode.MapSystem.IEventPoint)__deltaObjectBase__;
            }
        }

        public SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> RunningEvent => __deltaObject__.RunningEvent;
        public SharedCode.Entities.GameObjectEntities.IEntityObjectDef Def => __deltaObject__.Def;
        public GeneratedCode.MapSystem.MapOwner MapOwner => __deltaObject__.MapOwner;
        public System.Guid StaticIdFromExport => __deltaObject__.StaticIdFromExport;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedClientFull WorldSpaced => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedClientFull)__deltaObject__.WorldSpaced?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientFull);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncClientFull MovementSync => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncClientFull)__deltaObject__.MovementSync?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientFull);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksEngineClientFull LinksEngine => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksEngineClientFull)__deltaObject__.LinksEngine?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientFull);
        public System.Threading.Tasks.Task<SharedCode.Entities.GameObjectEntities.IEntityObjectDef> LoadEvent()
        {
            return __deltaObject__.LoadEvent();
        }

        public System.Threading.Tasks.Task<bool> AssignEvent(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> newEvent, SharedCode.Entities.GameObjectEntities.EventInstanceDef eventDef, Scripting.ScriptingContext ctx)
        {
            return __deltaObject__.AssignEvent(newEvent, eventDef, ctx);
        }

        public System.Threading.Tasks.Task<bool> RemoveEvent()
        {
            return __deltaObject__.RemoveEvent();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = RunningEvent;
                    break;
                case 11:
                    currProperty = Def;
                    break;
                case 12:
                    currProperty = MapOwner;
                    break;
                case 13:
                    currProperty = StaticIdFromExport;
                    break;
                case 14:
                    currProperty = WorldSpaced;
                    break;
                case 15:
                    currProperty = MovementSync;
                    break;
                case 16:
                    currProperty = LinksEngine;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 2052017909;
    }

    public class EventPointServerApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IEventPointServerApi
    {
        public EventPointServerApi(GeneratedCode.MapSystem.IEventPoint deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.MapSystem.IEventPoint __deltaObject__
        {
            get
            {
                return (GeneratedCode.MapSystem.IEventPoint)__deltaObjectBase__;
            }
        }

        public override int TypeId => -552921510;
    }

    public class EventPointServer : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IEventPointServer
    {
        public EventPointServer(GeneratedCode.MapSystem.IEventPoint deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.MapSystem.IEventPoint __deltaObject__
        {
            get
            {
                return (GeneratedCode.MapSystem.IEventPoint)__deltaObjectBase__;
            }
        }

        public SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> RunningEvent => __deltaObject__.RunningEvent;
        public SharedCode.Entities.GameObjectEntities.IEntityObjectDef Def => __deltaObject__.Def;
        public GeneratedCode.MapSystem.MapOwner MapOwner => __deltaObject__.MapOwner;
        public System.Guid StaticIdFromExport => __deltaObject__.StaticIdFromExport;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedServer WorldSpaced => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedServer)__deltaObject__.WorldSpaced?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncServer MovementSync => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncServer)__deltaObject__.MovementSync?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksEngineServer LinksEngine => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksEngineServer)__deltaObject__.LinksEngine?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public System.Threading.Tasks.Task<SharedCode.Entities.GameObjectEntities.IEntityObjectDef> LoadEvent()
        {
            return __deltaObject__.LoadEvent();
        }

        public System.Threading.Tasks.Task<bool> AssignEvent(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> newEvent, SharedCode.Entities.GameObjectEntities.EventInstanceDef eventDef, Scripting.ScriptingContext ctx)
        {
            return __deltaObject__.AssignEvent(newEvent, eventDef, ctx);
        }

        public System.Threading.Tasks.Task<bool> RemoveEvent()
        {
            return __deltaObject__.RemoveEvent();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = RunningEvent;
                    break;
                case 11:
                    currProperty = Def;
                    break;
                case 12:
                    currProperty = MapOwner;
                    break;
                case 13:
                    currProperty = StaticIdFromExport;
                    break;
                case 14:
                    currProperty = WorldSpaced;
                    break;
                case 15:
                    currProperty = MovementSync;
                    break;
                case 16:
                    currProperty = LinksEngine;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -39934490;
    }
}

namespace GeneratedCode.DeltaObjects
{
    public class StorytellerAlways : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IStorytellerAlways
    {
        public StorytellerAlways(GeneratedCode.MapSystem.IStoryteller deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.MapSystem.IStoryteller __deltaObject__
        {
            get
            {
                return (GeneratedCode.MapSystem.IStoryteller)__deltaObjectBase__;
            }
        }

        public SharedCode.Entities.GameObjectEntities.IEntityObjectDef Def => __deltaObject__.Def;
        public GeneratedCode.MapSystem.MapOwner MapOwner => __deltaObject__.MapOwner;
        public System.Guid StaticIdFromExport => __deltaObject__.StaticIdFromExport;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedAlways WorldSpaced => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedAlways)__deltaObject__.WorldSpaced?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Always);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IBuffsAlways Buffs => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IBuffsAlways)__deltaObject__.Buffs?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Always);
        public System.Threading.Tasks.Task<bool> Tick()
        {
            return __deltaObject__.Tick();
        }

        public System.Threading.Tasks.Task<bool> RegisterFromStaticScene()
        {
            return __deltaObject__.RegisterFromStaticScene();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Def;
                    break;
                case 11:
                    currProperty = MapOwner;
                    break;
                case 12:
                    currProperty = StaticIdFromExport;
                    break;
                case 13:
                    currProperty = WorldSpaced;
                    break;
                case 14:
                    currProperty = Buffs;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -980825288;
    }

    public class StorytellerClientBroadcast : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IStorytellerClientBroadcast
    {
        public StorytellerClientBroadcast(GeneratedCode.MapSystem.IStoryteller deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.MapSystem.IStoryteller __deltaObject__
        {
            get
            {
                return (GeneratedCode.MapSystem.IStoryteller)__deltaObjectBase__;
            }
        }

        public SharedCode.Entities.GameObjectEntities.IEntityObjectDef Def => __deltaObject__.Def;
        public GeneratedCode.MapSystem.MapOwner MapOwner => __deltaObject__.MapOwner;
        public System.Guid StaticIdFromExport => __deltaObject__.StaticIdFromExport;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedClientBroadcast WorldSpaced => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedClientBroadcast)__deltaObject__.WorldSpaced?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IBuffsClientBroadcast Buffs => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IBuffsClientBroadcast)__deltaObject__.Buffs?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksEngineClientBroadcast LinksEngine => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksEngineClientBroadcast)__deltaObject__.LinksEngine?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IStatsEngineClientBroadcast Stats => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IStatsEngineClientBroadcast)__deltaObject__.Stats?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
        public System.Threading.Tasks.Task<bool> Tick()
        {
            return __deltaObject__.Tick();
        }

        public System.Threading.Tasks.Task<bool> RegisterFromStaticScene()
        {
            return __deltaObject__.RegisterFromStaticScene();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Def;
                    break;
                case 11:
                    currProperty = MapOwner;
                    break;
                case 12:
                    currProperty = StaticIdFromExport;
                    break;
                case 13:
                    currProperty = WorldSpaced;
                    break;
                case 14:
                    currProperty = Buffs;
                    break;
                case 15:
                    currProperty = LinksEngine;
                    break;
                case 16:
                    currProperty = Stats;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -263140359;
    }

    public class StorytellerClientFullApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IStorytellerClientFullApi
    {
        public StorytellerClientFullApi(GeneratedCode.MapSystem.IStoryteller deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.MapSystem.IStoryteller __deltaObject__
        {
            get
            {
                return (GeneratedCode.MapSystem.IStoryteller)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1872450203;
    }

    public class StorytellerClientFull : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IStorytellerClientFull
    {
        public StorytellerClientFull(GeneratedCode.MapSystem.IStoryteller deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.MapSystem.IStoryteller __deltaObject__
        {
            get
            {
                return (GeneratedCode.MapSystem.IStoryteller)__deltaObjectBase__;
            }
        }

        public SharedCode.Entities.GameObjectEntities.IEntityObjectDef Def => __deltaObject__.Def;
        public GeneratedCode.MapSystem.MapOwner MapOwner => __deltaObject__.MapOwner;
        public System.Guid StaticIdFromExport => __deltaObject__.StaticIdFromExport;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedClientFull WorldSpaced => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedClientFull)__deltaObject__.WorldSpaced?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientFull);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IBuffsClientFull Buffs => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IBuffsClientFull)__deltaObject__.Buffs?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientFull);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksEngineClientFull LinksEngine => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksEngineClientFull)__deltaObject__.LinksEngine?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientFull);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IStatsEngineClientFull Stats => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IStatsEngineClientFull)__deltaObject__.Stats?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientFull);
        public System.Threading.Tasks.Task<bool> Tick()
        {
            return __deltaObject__.Tick();
        }

        public System.Threading.Tasks.Task<bool> RegisterFromStaticScene()
        {
            return __deltaObject__.RegisterFromStaticScene();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Def;
                    break;
                case 11:
                    currProperty = MapOwner;
                    break;
                case 12:
                    currProperty = StaticIdFromExport;
                    break;
                case 13:
                    currProperty = WorldSpaced;
                    break;
                case 14:
                    currProperty = Buffs;
                    break;
                case 15:
                    currProperty = LinksEngine;
                    break;
                case 16:
                    currProperty = Stats;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -2068035495;
    }

    public class StorytellerServerApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IStorytellerServerApi
    {
        public StorytellerServerApi(GeneratedCode.MapSystem.IStoryteller deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.MapSystem.IStoryteller __deltaObject__
        {
            get
            {
                return (GeneratedCode.MapSystem.IStoryteller)__deltaObjectBase__;
            }
        }

        public override int TypeId => 152307354;
    }

    public class StorytellerServer : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IStorytellerServer
    {
        public StorytellerServer(GeneratedCode.MapSystem.IStoryteller deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.MapSystem.IStoryteller __deltaObject__
        {
            get
            {
                return (GeneratedCode.MapSystem.IStoryteller)__deltaObjectBase__;
            }
        }

        public SharedCode.Entities.GameObjectEntities.IEntityObjectDef Def => __deltaObject__.Def;
        public GeneratedCode.MapSystem.MapOwner MapOwner => __deltaObject__.MapOwner;
        public System.Guid StaticIdFromExport => __deltaObject__.StaticIdFromExport;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedServer WorldSpaced => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedServer)__deltaObject__.WorldSpaced?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IBuffsServer Buffs => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IBuffsServer)__deltaObject__.Buffs?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksEngineServer LinksEngine => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksEngineServer)__deltaObject__.LinksEngine?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IStatsEngineServer Stats => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IStatsEngineServer)__deltaObject__.Stats?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public System.Threading.Tasks.Task<bool> Tick()
        {
            return __deltaObject__.Tick();
        }

        public System.Threading.Tasks.Task<bool> RegisterFromStaticScene()
        {
            return __deltaObject__.RegisterFromStaticScene();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Def;
                    break;
                case 11:
                    currProperty = MapOwner;
                    break;
                case 12:
                    currProperty = StaticIdFromExport;
                    break;
                case 13:
                    currProperty = WorldSpaced;
                    break;
                case 14:
                    currProperty = Buffs;
                    break;
                case 15:
                    currProperty = LinksEngine;
                    break;
                case 16:
                    currProperty = Stats;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -454427082;
    }
}

namespace GeneratedCode.DeltaObjects
{
    public class EventInstanceAlways : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IEventInstanceAlways
    {
        public EventInstanceAlways(GeneratedCode.MapSystem.IEventInstance deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.MapSystem.IEventInstance __deltaObject__
        {
            get
            {
                return (GeneratedCode.MapSystem.IEventInstance)__deltaObjectBase__;
            }
        }

        public SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> SceneEntity => __deltaObject__.SceneEntity;
        public bool Finished => __deltaObject__.Finished;
        public SharedCode.Wizardry.SpellId MainBuff => __deltaObject__.MainBuff;
        public SharedCode.Entities.GameObjectEntities.EventPhaseDef CurrentPhase => __deltaObject__.CurrentPhase;
        public SharedCode.Entities.GameObjectEntities.IEntityObjectDef Def => __deltaObject__.Def;
        public GeneratedCode.MapSystem.MapOwner MapOwner => __deltaObject__.MapOwner;
        public System.Guid StaticIdFromExport => __deltaObject__.StaticIdFromExport;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedAlways WorldSpaced => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedAlways)__deltaObject__.WorldSpaced?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Always);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IBuffsAlways Buffs => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IBuffsAlways)__deltaObject__.Buffs?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Always);
        public Scripting.ScriptingContext ProvidedContext => __deltaObject__.ProvidedContext;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncAlways MovementSync => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncAlways)__deltaObject__.MovementSync?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Always);
        public System.Threading.Tasks.Task<bool> Stop()
        {
            return __deltaObject__.Stop();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = SceneEntity;
                    break;
                case 11:
                    currProperty = Finished;
                    break;
                case 12:
                    currProperty = MainBuff;
                    break;
                case 13:
                    currProperty = CurrentPhase;
                    break;
                case 14:
                    currProperty = Def;
                    break;
                case 15:
                    currProperty = MapOwner;
                    break;
                case 16:
                    currProperty = StaticIdFromExport;
                    break;
                case 17:
                    currProperty = WorldSpaced;
                    break;
                case 18:
                    currProperty = Buffs;
                    break;
                case 21:
                    currProperty = ProvidedContext;
                    break;
                case 22:
                    currProperty = MovementSync;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -1524157871;
    }

    public class EventInstanceClientBroadcast : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IEventInstanceClientBroadcast
    {
        public EventInstanceClientBroadcast(GeneratedCode.MapSystem.IEventInstance deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.MapSystem.IEventInstance __deltaObject__
        {
            get
            {
                return (GeneratedCode.MapSystem.IEventInstance)__deltaObjectBase__;
            }
        }

        public SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> SceneEntity => __deltaObject__.SceneEntity;
        public bool Finished => __deltaObject__.Finished;
        public SharedCode.Wizardry.SpellId MainBuff => __deltaObject__.MainBuff;
        public SharedCode.Entities.GameObjectEntities.EventPhaseDef CurrentPhase => __deltaObject__.CurrentPhase;
        public SharedCode.Entities.GameObjectEntities.IEntityObjectDef Def => __deltaObject__.Def;
        public GeneratedCode.MapSystem.MapOwner MapOwner => __deltaObject__.MapOwner;
        public System.Guid StaticIdFromExport => __deltaObject__.StaticIdFromExport;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedClientBroadcast WorldSpaced => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedClientBroadcast)__deltaObject__.WorldSpaced?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IBuffsClientBroadcast Buffs => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IBuffsClientBroadcast)__deltaObject__.Buffs?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksEngineClientBroadcast LinksEngine => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksEngineClientBroadcast)__deltaObject__.LinksEngine?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IStatsEngineClientBroadcast Stats => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IStatsEngineClientBroadcast)__deltaObject__.Stats?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
        public Scripting.ScriptingContext ProvidedContext => __deltaObject__.ProvidedContext;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncClientBroadcast MovementSync => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncClientBroadcast)__deltaObject__.MovementSync?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
        public System.Threading.Tasks.Task<bool> Stop()
        {
            return __deltaObject__.Stop();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = SceneEntity;
                    break;
                case 11:
                    currProperty = Finished;
                    break;
                case 12:
                    currProperty = MainBuff;
                    break;
                case 13:
                    currProperty = CurrentPhase;
                    break;
                case 14:
                    currProperty = Def;
                    break;
                case 15:
                    currProperty = MapOwner;
                    break;
                case 16:
                    currProperty = StaticIdFromExport;
                    break;
                case 17:
                    currProperty = WorldSpaced;
                    break;
                case 18:
                    currProperty = Buffs;
                    break;
                case 19:
                    currProperty = LinksEngine;
                    break;
                case 20:
                    currProperty = Stats;
                    break;
                case 21:
                    currProperty = ProvidedContext;
                    break;
                case 22:
                    currProperty = MovementSync;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 1480572753;
    }

    public class EventInstanceClientFullApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IEventInstanceClientFullApi
    {
        public EventInstanceClientFullApi(GeneratedCode.MapSystem.IEventInstance deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.MapSystem.IEventInstance __deltaObject__
        {
            get
            {
                return (GeneratedCode.MapSystem.IEventInstance)__deltaObjectBase__;
            }
        }

        public override int TypeId => -550119314;
    }

    public class EventInstanceClientFull : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IEventInstanceClientFull
    {
        public EventInstanceClientFull(GeneratedCode.MapSystem.IEventInstance deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.MapSystem.IEventInstance __deltaObject__
        {
            get
            {
                return (GeneratedCode.MapSystem.IEventInstance)__deltaObjectBase__;
            }
        }

        public SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> SceneEntity => __deltaObject__.SceneEntity;
        public bool Finished => __deltaObject__.Finished;
        public SharedCode.Wizardry.SpellId MainBuff => __deltaObject__.MainBuff;
        public SharedCode.Entities.GameObjectEntities.EventPhaseDef CurrentPhase => __deltaObject__.CurrentPhase;
        public SharedCode.Entities.GameObjectEntities.IEntityObjectDef Def => __deltaObject__.Def;
        public GeneratedCode.MapSystem.MapOwner MapOwner => __deltaObject__.MapOwner;
        public System.Guid StaticIdFromExport => __deltaObject__.StaticIdFromExport;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedClientFull WorldSpaced => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedClientFull)__deltaObject__.WorldSpaced?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientFull);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IBuffsClientFull Buffs => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IBuffsClientFull)__deltaObject__.Buffs?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientFull);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksEngineClientFull LinksEngine => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksEngineClientFull)__deltaObject__.LinksEngine?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientFull);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IStatsEngineClientFull Stats => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IStatsEngineClientFull)__deltaObject__.Stats?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientFull);
        public Scripting.ScriptingContext ProvidedContext => __deltaObject__.ProvidedContext;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncClientFull MovementSync => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncClientFull)__deltaObject__.MovementSync?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientFull);
        public System.Threading.Tasks.Task<bool> Stop()
        {
            return __deltaObject__.Stop();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = SceneEntity;
                    break;
                case 11:
                    currProperty = Finished;
                    break;
                case 12:
                    currProperty = MainBuff;
                    break;
                case 13:
                    currProperty = CurrentPhase;
                    break;
                case 14:
                    currProperty = Def;
                    break;
                case 15:
                    currProperty = MapOwner;
                    break;
                case 16:
                    currProperty = StaticIdFromExport;
                    break;
                case 17:
                    currProperty = WorldSpaced;
                    break;
                case 18:
                    currProperty = Buffs;
                    break;
                case 19:
                    currProperty = LinksEngine;
                    break;
                case 20:
                    currProperty = Stats;
                    break;
                case 21:
                    currProperty = ProvidedContext;
                    break;
                case 22:
                    currProperty = MovementSync;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 2091925089;
    }

    public class EventInstanceServerApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IEventInstanceServerApi
    {
        public EventInstanceServerApi(GeneratedCode.MapSystem.IEventInstance deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.MapSystem.IEventInstance __deltaObject__
        {
            get
            {
                return (GeneratedCode.MapSystem.IEventInstance)__deltaObjectBase__;
            }
        }

        public override int TypeId => 126455660;
    }

    public class EventInstanceServer : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IEventInstanceServer
    {
        public EventInstanceServer(GeneratedCode.MapSystem.IEventInstance deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.MapSystem.IEventInstance __deltaObject__
        {
            get
            {
                return (GeneratedCode.MapSystem.IEventInstance)__deltaObjectBase__;
            }
        }

        public SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> SceneEntity => __deltaObject__.SceneEntity;
        public bool Finished => __deltaObject__.Finished;
        public SharedCode.Wizardry.SpellId MainBuff => __deltaObject__.MainBuff;
        public SharedCode.Entities.GameObjectEntities.EventPhaseDef CurrentPhase => __deltaObject__.CurrentPhase;
        public SharedCode.Entities.GameObjectEntities.IEntityObjectDef Def => __deltaObject__.Def;
        public GeneratedCode.MapSystem.MapOwner MapOwner => __deltaObject__.MapOwner;
        public System.Guid StaticIdFromExport => __deltaObject__.StaticIdFromExport;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedServer WorldSpaced => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedServer)__deltaObject__.WorldSpaced?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IBuffsServer Buffs => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IBuffsServer)__deltaObject__.Buffs?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksEngineServer LinksEngine => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksEngineServer)__deltaObject__.LinksEngine?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IStatsEngineServer Stats => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IStatsEngineServer)__deltaObject__.Stats?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public Scripting.ScriptingContext ProvidedContext => __deltaObject__.ProvidedContext;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncServer MovementSync => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncServer)__deltaObject__.MovementSync?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public System.Threading.Tasks.Task<bool> Stop()
        {
            return __deltaObject__.Stop();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = SceneEntity;
                    break;
                case 11:
                    currProperty = Finished;
                    break;
                case 12:
                    currProperty = MainBuff;
                    break;
                case 13:
                    currProperty = CurrentPhase;
                    break;
                case 14:
                    currProperty = Def;
                    break;
                case 15:
                    currProperty = MapOwner;
                    break;
                case 16:
                    currProperty = StaticIdFromExport;
                    break;
                case 17:
                    currProperty = WorldSpaced;
                    break;
                case 18:
                    currProperty = Buffs;
                    break;
                case 19:
                    currProperty = LinksEngine;
                    break;
                case 20:
                    currProperty = Stats;
                    break;
                case 21:
                    currProperty = ProvidedContext;
                    break;
                case 22:
                    currProperty = MovementSync;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 1628713567;
    }
}