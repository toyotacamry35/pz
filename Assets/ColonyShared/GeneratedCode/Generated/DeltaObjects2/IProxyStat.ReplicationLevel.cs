// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using GeneratedCode.DeltaObjects.ReplicationInterfaces;
using SharedCode.Logging;
using GeneratedCode.Repositories;
using SharedCode.EntitySystem;
using GeneratedCode.EntitySystem;
using SharedCode.EntitySystem.Delta;

namespace GeneratedCode.DeltaObjects
{
    public class ProxyStatAlways : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IProxyStatAlways
    {
        public ProxyStatAlways(Src.Aspects.Impl.Stats.IProxyStat deltaObject): base(deltaObject)
        {
        }

        Src.Aspects.Impl.Stats.IProxyStat __deltaObject__
        {
            get
            {
                return (Src.Aspects.Impl.Stats.IProxyStat)__deltaObjectBase__;
            }
        }

        public override int TypeId => 743451678;
    }

    public class ProxyStatClientBroadcast : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IProxyStatClientBroadcast
    {
        public ProxyStatClientBroadcast(Src.Aspects.Impl.Stats.IProxyStat deltaObject): base(deltaObject)
        {
        }

        Src.Aspects.Impl.Stats.IProxyStat __deltaObject__
        {
            get
            {
                return (Src.Aspects.Impl.Stats.IProxyStat)__deltaObjectBase__;
            }
        }

        public float LimitMinCache => __deltaObject__.LimitMinCache;
        public float LimitMaxCache => __deltaObject__.LimitMaxCache;
        public Assets.Src.Aspects.Impl.Stats.StatType StatType => __deltaObject__.StatType;
        public System.Threading.Tasks.ValueTask<float> GetValue()
        {
            return __deltaObject__.GetValue();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 11:
                    currProperty = LimitMinCache;
                    break;
                case 12:
                    currProperty = LimitMaxCache;
                    break;
                case 13:
                    currProperty = StatType;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 883540741;
    }

    public class ProxyStatClientFullApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IProxyStatClientFullApi
    {
        public ProxyStatClientFullApi(Src.Aspects.Impl.Stats.IProxyStat deltaObject): base(deltaObject)
        {
        }

        Src.Aspects.Impl.Stats.IProxyStat __deltaObject__
        {
            get
            {
                return (Src.Aspects.Impl.Stats.IProxyStat)__deltaObjectBase__;
            }
        }

        public override int TypeId => 831626096;
    }

    public class ProxyStatClientFull : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IProxyStatClientFull
    {
        public ProxyStatClientFull(Src.Aspects.Impl.Stats.IProxyStat deltaObject): base(deltaObject)
        {
        }

        Src.Aspects.Impl.Stats.IProxyStat __deltaObject__
        {
            get
            {
                return (Src.Aspects.Impl.Stats.IProxyStat)__deltaObjectBase__;
            }
        }

        public float ValueCache => __deltaObject__.ValueCache;
        public float LimitMinCache => __deltaObject__.LimitMinCache;
        public float LimitMaxCache => __deltaObject__.LimitMaxCache;
        public Assets.Src.Aspects.Impl.Stats.StatType StatType => __deltaObject__.StatType;
        public System.Threading.Tasks.ValueTask<float> GetValue()
        {
            return __deltaObject__.GetValue();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = ValueCache;
                    break;
                case 11:
                    currProperty = LimitMinCache;
                    break;
                case 12:
                    currProperty = LimitMaxCache;
                    break;
                case 13:
                    currProperty = StatType;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -322305823;
    }

    public class ProxyStatServerApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IProxyStatServerApi
    {
        public ProxyStatServerApi(Src.Aspects.Impl.Stats.IProxyStat deltaObject): base(deltaObject)
        {
        }

        Src.Aspects.Impl.Stats.IProxyStat __deltaObject__
        {
            get
            {
                return (Src.Aspects.Impl.Stats.IProxyStat)__deltaObjectBase__;
            }
        }

        public override int TypeId => 480086007;
    }

    public class ProxyStatServer : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IProxyStatServer
    {
        public ProxyStatServer(Src.Aspects.Impl.Stats.IProxyStat deltaObject): base(deltaObject)
        {
        }

        Src.Aspects.Impl.Stats.IProxyStat __deltaObject__
        {
            get
            {
                return (Src.Aspects.Impl.Stats.IProxyStat)__deltaObjectBase__;
            }
        }

        public float ValueCache => __deltaObject__.ValueCache;
        public float LimitMinCache => __deltaObject__.LimitMinCache;
        public float LimitMaxCache => __deltaObject__.LimitMaxCache;
        public Assets.Src.Aspects.Impl.Stats.StatType StatType => __deltaObject__.StatType;
        public System.Threading.Tasks.ValueTask<float> GetValue()
        {
            return __deltaObject__.GetValue();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = ValueCache;
                    break;
                case 11:
                    currProperty = LimitMinCache;
                    break;
                case 12:
                    currProperty = LimitMaxCache;
                    break;
                case 13:
                    currProperty = StatType;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -441651038;
    }
}