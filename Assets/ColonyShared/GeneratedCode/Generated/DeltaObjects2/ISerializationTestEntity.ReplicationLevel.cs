// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using GeneratedCode.DeltaObjects.ReplicationInterfaces;
using SharedCode.Logging;
using GeneratedCode.Repositories;
using SharedCode.EntitySystem;
using GeneratedCode.EntitySystem;
using SharedCode.EntitySystem.Delta;

namespace GeneratedCode.DeltaObjects
{
    public class SerializationTestEntityAlways : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISerializationTestEntityAlways
    {
        public SerializationTestEntityAlways(Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity)__deltaObjectBase__;
            }
        }

        public override int TypeId => 1853563756;
    }

    public class SerializationTestEntityClientBroadcast : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISerializationTestEntityClientBroadcast
    {
        public SerializationTestEntityClientBroadcast(Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity)__deltaObjectBase__;
            }
        }

        public override int TypeId => 1087768705;
    }

    public class SerializationTestEntityClientFullApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISerializationTestEntityClientFullApi
    {
        public SerializationTestEntityClientFullApi(Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity)__deltaObjectBase__;
            }
        }

        public override int TypeId => 402187114;
    }

    public class SerializationTestEntityClientFull : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISerializationTestEntityClientFull
    {
        public SerializationTestEntityClientFull(Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity)__deltaObjectBase__;
            }
        }

        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2ClientFull TestPropertyClientFull => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2ClientFull)__deltaObject__.TestPropertyClientFull?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientFull);
        public SharedCode.Refs.EntityRef<Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity2> LinkedEntityClientFull => __deltaObject__.LinkedEntityClientFull;
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 12:
                    currProperty = TestPropertyClientFull;
                    break;
                case 20:
                    currProperty = LinkedEntityClientFull;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 1849899882;
    }

    public class SerializationTestEntityServerApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISerializationTestEntityServerApi
    {
        public SerializationTestEntityServerApi(Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1947143671;
    }

    public class SerializationTestEntityServer : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISerializationTestEntityServer
    {
        public SerializationTestEntityServer(Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity)__deltaObjectBase__;
            }
        }

        public int Value => __deltaObject__.Value;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2Server TestProperty => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2Server)__deltaObject__.TestProperty?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2Server TestPropertyClientFull => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2Server)__deltaObject__.TestPropertyClientFull?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2Server TestProperty2 => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2Server)__deltaObject__.TestProperty2?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject3Server TestProperty3 => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject3Server)__deltaObject__.TestProperty3?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        IDeltaListWrapper<GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2Server> __List1__Wrapper__;
        public IDeltaListWrapper<GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2Server> List1
        {
            get
            {
                if (__List1__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__List1__Wrapper__).GetBaseDeltaObject() != __deltaObject__.List1)
                    __List1__Wrapper__ = __deltaObject__.List1 == null ? null : new DeltaListWrapper<Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject2, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2Server>(__deltaObject__.List1);
                return __List1__Wrapper__;
            }
        }

        IDeltaDictionaryWrapper<int, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2Server> __Dictionary1__Wrapper__;
        public IDeltaDictionaryWrapper<int, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2Server> Dictionary1
        {
            get
            {
                if (__Dictionary1__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__Dictionary1__Wrapper__).GetBaseDeltaObject() != __deltaObject__.Dictionary1)
                    __Dictionary1__Wrapper__ = __deltaObject__.Dictionary1 == null ? null : new DeltaDictionaryWrapper<int, Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject2, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2Server>(__deltaObject__.Dictionary1);
                return __Dictionary1__Wrapper__;
            }
        }

        public IDeltaList<int> SimpleList1 => __deltaObject__.SimpleList1;
        public IDeltaDictionary<int, int> SimpleDictionary1
        {
            get
            {
                return __deltaObject__.SimpleDictionary1;
            }
        }

        public SharedCode.Refs.EntityRef<Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity2> LinkedEntityServer => __deltaObject__.LinkedEntityServer;
        public SharedCode.Refs.EntityRef<Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity2> LinkedEntityClientFull => __deltaObject__.LinkedEntityClientFull;
        public System.Threading.Tasks.Task SetValue(int value)
        {
            return __deltaObject__.SetValue(value);
        }

        public System.Threading.Tasks.Task FillTestProperty(System.Guid id)
        {
            return __deltaObject__.FillTestProperty(id);
        }

        public System.Threading.Tasks.Task RemoveTestProperty()
        {
            return __deltaObject__.RemoveTestProperty();
        }

        public System.Threading.Tasks.Task FillTestProperty2()
        {
            return __deltaObject__.FillTestProperty2();
        }

        public System.Threading.Tasks.Task SetTestProperty2WithNewDletaObject()
        {
            return __deltaObject__.SetTestProperty2WithNewDletaObject();
        }

        public System.Threading.Tasks.Task FillTestProperty2FromTestProperty()
        {
            return __deltaObject__.FillTestProperty2FromTestProperty();
        }

        public System.Threading.Tasks.Task RemoveTestProperty2()
        {
            return __deltaObject__.RemoveTestProperty2();
        }

        public System.Threading.Tasks.Task AddToList(GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2Server element)
        {
            return __deltaObject__.AddToList(element.To<Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject2>());
        }

        public System.Threading.Tasks.Task AddToDictionary(int key, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2Server element)
        {
            return __deltaObject__.AddToDictionary(key, element.To<Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject2>());
        }

        public System.Threading.Tasks.Task SetList(SharedCode.EntitySystem.Delta.IDeltaListWrapper<GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2Server> list)
        {
            return __deltaObject__.SetList(list.To<SharedCode.EntitySystem.Delta.IDeltaList<Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject2>>());
        }

        public System.Threading.Tasks.Task RemoveFromList(GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2Server element)
        {
            return __deltaObject__.RemoveFromList(element.To<Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject2>());
        }

        public System.Threading.Tasks.Task RemoveFromDictionary(int key)
        {
            return __deltaObject__.RemoveFromDictionary(key);
        }

        public System.Threading.Tasks.Task<int> SetOnDestroy(int newValue)
        {
            return __deltaObject__.SetOnDestroy(newValue);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Value;
                    break;
                case 11:
                    currProperty = TestProperty;
                    break;
                case 12:
                    currProperty = TestPropertyClientFull;
                    break;
                case 13:
                    currProperty = TestProperty2;
                    break;
                case 14:
                    currProperty = TestProperty3;
                    break;
                case 15:
                    currProperty = List1;
                    break;
                case 16:
                    currProperty = Dictionary1;
                    break;
                case 17:
                    currProperty = SimpleList1;
                    break;
                case 18:
                    currProperty = SimpleDictionary1;
                    break;
                case 19:
                    currProperty = LinkedEntityServer;
                    break;
                case 20:
                    currProperty = LinkedEntityClientFull;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 787058018;
    }
}

namespace GeneratedCode.DeltaObjects
{
    public class SerializationTestEntity2Always : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISerializationTestEntity2Always
    {
        public SerializationTestEntity2Always(Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity2 deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity2 __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity2)__deltaObjectBase__;
            }
        }

        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IOwnerInformationAlways OwnerInformation => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IOwnerInformationAlways)__deltaObject__.OwnerInformation?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Always);
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 14:
                    currProperty = OwnerInformation;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -1076835708;
    }

    public class SerializationTestEntity2ClientBroadcast : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISerializationTestEntity2ClientBroadcast
    {
        public SerializationTestEntity2ClientBroadcast(Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity2 deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity2 __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity2)__deltaObjectBase__;
            }
        }

        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IOwnerInformationClientBroadcast OwnerInformation => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IOwnerInformationClientBroadcast)__deltaObject__.OwnerInformation?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 14:
                    currProperty = OwnerInformation;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -1342707843;
    }

    public class SerializationTestEntity2ClientFullApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISerializationTestEntity2ClientFullApi
    {
        public SerializationTestEntity2ClientFullApi(Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity2 deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity2 __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity2)__deltaObjectBase__;
            }
        }

        public override int TypeId => -778205717;
    }

    public class SerializationTestEntity2ClientFull : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISerializationTestEntity2ClientFull
    {
        public SerializationTestEntity2ClientFull(Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity2 deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity2 __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity2)__deltaObjectBase__;
            }
        }

        public SharedCode.Refs.EntityRef<Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity3> LinkedEntityClientFull => __deltaObject__.LinkedEntityClientFull;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IOwnerInformationClientFull OwnerInformation => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IOwnerInformationClientFull)__deltaObject__.OwnerInformation?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientFull);
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 13:
                    currProperty = LinkedEntityClientFull;
                    break;
                case 14:
                    currProperty = OwnerInformation;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -1707239155;
    }

    public class SerializationTestEntity2ServerApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISerializationTestEntity2ServerApi
    {
        public SerializationTestEntity2ServerApi(Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity2 deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity2 __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity2)__deltaObjectBase__;
            }
        }

        public override int TypeId => 649925384;
    }

    public class SerializationTestEntity2Server : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISerializationTestEntity2Server
    {
        public SerializationTestEntity2Server(Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity2 deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity2 __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity2)__deltaObjectBase__;
            }
        }

        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2Server TestProperty => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2Server)__deltaObject__.TestProperty?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public int Value => __deltaObject__.Value;
        public SharedCode.Refs.EntityRef<Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity3> LinkedEntityServer => __deltaObject__.LinkedEntityServer;
        public SharedCode.Refs.EntityRef<Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity3> LinkedEntityClientFull => __deltaObject__.LinkedEntityClientFull;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IOwnerInformationServer OwnerInformation => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IOwnerInformationServer)__deltaObject__.OwnerInformation?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public System.Threading.Tasks.Task SetValue(int value)
        {
            return __deltaObject__.SetValue(value);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = TestProperty;
                    break;
                case 11:
                    currProperty = Value;
                    break;
                case 12:
                    currProperty = LinkedEntityServer;
                    break;
                case 13:
                    currProperty = LinkedEntityClientFull;
                    break;
                case 14:
                    currProperty = OwnerInformation;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 322416099;
    }
}

namespace GeneratedCode.DeltaObjects
{
    public class SerializationTestEntity3Always : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISerializationTestEntity3Always
    {
        public SerializationTestEntity3Always(Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity3 deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity3 __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity3)__deltaObjectBase__;
            }
        }

        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IOwnerInformationAlways OwnerInformation => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IOwnerInformationAlways)__deltaObject__.OwnerInformation?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Always);
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 11:
                    currProperty = OwnerInformation;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 524470545;
    }

    public class SerializationTestEntity3ClientBroadcast : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISerializationTestEntity3ClientBroadcast
    {
        public SerializationTestEntity3ClientBroadcast(Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity3 deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity3 __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity3)__deltaObjectBase__;
            }
        }

        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IOwnerInformationClientBroadcast OwnerInformation => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IOwnerInformationClientBroadcast)__deltaObject__.OwnerInformation?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 11:
                    currProperty = OwnerInformation;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -1905314857;
    }

    public class SerializationTestEntity3ClientFullApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISerializationTestEntity3ClientFullApi
    {
        public SerializationTestEntity3ClientFullApi(Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity3 deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity3 __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity3)__deltaObjectBase__;
            }
        }

        public override int TypeId => 725958194;
    }

    public class SerializationTestEntity3ClientFull : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISerializationTestEntity3ClientFull
    {
        public SerializationTestEntity3ClientFull(Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity3 deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity3 __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity3)__deltaObjectBase__;
            }
        }

        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IOwnerInformationClientFull OwnerInformation => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IOwnerInformationClientFull)__deltaObject__.OwnerInformation?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientFull);
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 11:
                    currProperty = OwnerInformation;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -728601242;
    }

    public class SerializationTestEntity3ServerApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISerializationTestEntity3ServerApi
    {
        public SerializationTestEntity3ServerApi(Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity3 deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity3 __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity3)__deltaObjectBase__;
            }
        }

        public override int TypeId => -645684477;
    }

    public class SerializationTestEntity3Server : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISerializationTestEntity3Server
    {
        public SerializationTestEntity3Server(Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity3 deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity3 __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity3)__deltaObjectBase__;
            }
        }

        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2Server TestProperty => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2Server)__deltaObject__.TestProperty?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IOwnerInformationServer OwnerInformation => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IOwnerInformationServer)__deltaObject__.OwnerInformation?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = TestProperty;
                    break;
                case 11:
                    currProperty = OwnerInformation;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -444203123;
    }
}

namespace GeneratedCode.DeltaObjects
{
    public class TestDeltaObject2Always : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2Always
    {
        public TestDeltaObject2Always(Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject2 deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject2 __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject2)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1872220279;
    }

    public class TestDeltaObject2ClientBroadcast : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2ClientBroadcast
    {
        public TestDeltaObject2ClientBroadcast(Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject2 deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject2 __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject2)__deltaObjectBase__;
            }
        }

        public int ClientBroadcastValue => __deltaObject__.ClientBroadcastValue;
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 19:
                    currProperty = ClientBroadcastValue;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 237691832;
    }

    public class TestDeltaObject2ClientFullApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2ClientFullApi
    {
        public TestDeltaObject2ClientFullApi(Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject2 deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject2 __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject2)__deltaObjectBase__;
            }
        }

        public override int TypeId => 1746304671;
    }

    public class TestDeltaObject2ClientFull : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2ClientFull
    {
        public TestDeltaObject2ClientFull(Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject2 deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject2 __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject2)__deltaObjectBase__;
            }
        }

        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject3ClientFull TestClientFull => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject3ClientFull)__deltaObject__.TestClientFull?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientFull);
        public SharedCode.Refs.EntityRef<Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity2> EntityTestClientFull => __deltaObject__.EntityTestClientFull;
        public int ClientBroadcastValue => __deltaObject__.ClientBroadcastValue;
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 11:
                    currProperty = TestClientFull;
                    break;
                case 14:
                    currProperty = EntityTestClientFull;
                    break;
                case 19:
                    currProperty = ClientBroadcastValue;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 1214332153;
    }

    public class TestDeltaObject2ServerApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2ServerApi
    {
        public TestDeltaObject2ServerApi(Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject2 deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject2 __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject2)__deltaObjectBase__;
            }
        }

        public override int TypeId => -916623425;
    }

    public class TestDeltaObject2Server : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2Server
    {
        public TestDeltaObject2Server(Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject2 deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject2 __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject2)__deltaObjectBase__;
            }
        }

        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject3Server Test => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject3Server)__deltaObject__.Test?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject3Server TestClientFull => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject3Server)__deltaObject__.TestClientFull?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject3Server Test2 => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject3Server)__deltaObject__.Test2?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public SharedCode.Refs.EntityRef<Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity2> EntityTestServer => __deltaObject__.EntityTestServer;
        public SharedCode.Refs.EntityRef<Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity2> EntityTestClientFull => __deltaObject__.EntityTestClientFull;
        public IDeltaDictionary<int, SharedCode.Refs.EntityRef<Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity2>> EntityDictionaryTest
        {
            get
            {
                return __deltaObject__.EntityDictionaryTest;
            }
        }

        public IDeltaList<SharedCode.Refs.EntityRef<Assets.ColonyShared.SharedCode.Entities.Test.ISerializationTestEntity2>> EntityListTest => __deltaObject__.EntityListTest;
        IDeltaListWrapper<GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject3Server> __List1__Wrapper__;
        public IDeltaListWrapper<GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject3Server> List1
        {
            get
            {
                if (__List1__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__List1__Wrapper__).GetBaseDeltaObject() != __deltaObject__.List1)
                    __List1__Wrapper__ = __deltaObject__.List1 == null ? null : new DeltaListWrapper<Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject3, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject3Server>(__deltaObject__.List1);
                return __List1__Wrapper__;
            }
        }

        IDeltaDictionaryWrapper<int, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject3Server> __Dictionary1__Wrapper__;
        public IDeltaDictionaryWrapper<int, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject3Server> Dictionary1
        {
            get
            {
                if (__Dictionary1__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__Dictionary1__Wrapper__).GetBaseDeltaObject() != __deltaObject__.Dictionary1)
                    __Dictionary1__Wrapper__ = __deltaObject__.Dictionary1 == null ? null : new DeltaDictionaryWrapper<int, Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject3, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject3Server>(__deltaObject__.Dictionary1);
                return __Dictionary1__Wrapper__;
            }
        }

        public int ClientBroadcastValue => __deltaObject__.ClientBroadcastValue;
        public System.Threading.Tasks.Task AddToList(GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject3Server element)
        {
            return __deltaObject__.AddToList(element.To<Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject3>());
        }

        public System.Threading.Tasks.Task AddToList()
        {
            return __deltaObject__.AddToList();
        }

        public System.Threading.Tasks.Task RemoveFromList(GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject3Server element)
        {
            return __deltaObject__.RemoveFromList(element.To<Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject3>());
        }

        public System.Threading.Tasks.Task AddToDictionary(int key, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject3Server element)
        {
            return __deltaObject__.AddToDictionary(key, element.To<Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject3>());
        }

        public System.Threading.Tasks.Task AddToDictionary(int key)
        {
            return __deltaObject__.AddToDictionary(key);
        }

        public System.Threading.Tasks.Task RemoveFromDictionary(int key)
        {
            return __deltaObject__.RemoveFromDictionary(key);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Test;
                    break;
                case 11:
                    currProperty = TestClientFull;
                    break;
                case 12:
                    currProperty = Test2;
                    break;
                case 13:
                    currProperty = EntityTestServer;
                    break;
                case 14:
                    currProperty = EntityTestClientFull;
                    break;
                case 15:
                    currProperty = EntityDictionaryTest;
                    break;
                case 16:
                    currProperty = EntityListTest;
                    break;
                case 17:
                    currProperty = List1;
                    break;
                case 18:
                    currProperty = Dictionary1;
                    break;
                case 19:
                    currProperty = ClientBroadcastValue;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 735519311;
    }
}

namespace GeneratedCode.DeltaObjects
{
    public class TestDeltaObject3Always : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject3Always
    {
        public TestDeltaObject3Always(Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject3 deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject3 __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject3)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1027372953;
    }

    public class TestDeltaObject3ClientBroadcast : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject3ClientBroadcast
    {
        public TestDeltaObject3ClientBroadcast(Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject3 deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject3 __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject3)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1502816759;
    }

    public class TestDeltaObject3ClientFullApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject3ClientFullApi
    {
        public TestDeltaObject3ClientFullApi(Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject3 deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject3 __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject3)__deltaObjectBase__;
            }
        }

        public override int TypeId => 921794983;
    }

    public class TestDeltaObject3ClientFull : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject3ClientFull
    {
        public TestDeltaObject3ClientFull(Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject3 deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject3 __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject3)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1610387735;
    }

    public class TestDeltaObject3ServerApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject3ServerApi
    {
        public TestDeltaObject3ServerApi(Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject3 deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject3 __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject3)__deltaObjectBase__;
            }
        }

        public override int TypeId => -2133428309;
    }

    public class TestDeltaObject3Server : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject3Server
    {
        public TestDeltaObject3Server(Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject3 deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject3 __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ITestDeltaObject3)__deltaObjectBase__;
            }
        }

        public int Test => __deltaObject__.Test;
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Test;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 1638137918;
    }
}

namespace GeneratedCode.DeltaObjects
{
    public class SaveToDbEntityTestAlways : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISaveToDbEntityTestAlways
    {
        public SaveToDbEntityTestAlways(Assets.ColonyShared.SharedCode.Entities.Test.ISaveToDbEntityTest deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ISaveToDbEntityTest __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ISaveToDbEntityTest)__deltaObjectBase__;
            }
        }

        public override int TypeId => 1967312365;
    }

    public class SaveToDbEntityTestClientBroadcast : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISaveToDbEntityTestClientBroadcast
    {
        public SaveToDbEntityTestClientBroadcast(Assets.ColonyShared.SharedCode.Entities.Test.ISaveToDbEntityTest deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ISaveToDbEntityTest __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ISaveToDbEntityTest)__deltaObjectBase__;
            }
        }

        public override int TypeId => 937656831;
    }

    public class SaveToDbEntityTestClientFullApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISaveToDbEntityTestClientFullApi
    {
        public SaveToDbEntityTestClientFullApi(Assets.ColonyShared.SharedCode.Entities.Test.ISaveToDbEntityTest deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ISaveToDbEntityTest __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ISaveToDbEntityTest)__deltaObjectBase__;
            }
        }

        public override int TypeId => -2068436728;
    }

    public class SaveToDbEntityTestClientFull : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISaveToDbEntityTestClientFull
    {
        public SaveToDbEntityTestClientFull(Assets.ColonyShared.SharedCode.Entities.Test.ISaveToDbEntityTest deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ISaveToDbEntityTest __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ISaveToDbEntityTest)__deltaObjectBase__;
            }
        }

        public override int TypeId => 1997657094;
    }

    public class SaveToDbEntityTestServerApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISaveToDbEntityTestServerApi
    {
        public SaveToDbEntityTestServerApi(Assets.ColonyShared.SharedCode.Entities.Test.ISaveToDbEntityTest deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ISaveToDbEntityTest __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ISaveToDbEntityTest)__deltaObjectBase__;
            }
        }

        public override int TypeId => 1220592835;
    }

    public class SaveToDbEntityTestServer : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ISaveToDbEntityTestServer
    {
        public SaveToDbEntityTestServer(Assets.ColonyShared.SharedCode.Entities.Test.ISaveToDbEntityTest deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Test.ISaveToDbEntityTest __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Test.ISaveToDbEntityTest)__deltaObjectBase__;
            }
        }

        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2Server TestProperty => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObject2Server)__deltaObject__.TestProperty?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public System.Threading.Tasks.Task SetTestPropertyValue(int value)
        {
            return __deltaObject__.SetTestPropertyValue(value);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = TestProperty;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 1117882585;
    }
}