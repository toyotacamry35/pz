// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using GeneratedCode.DeltaObjects.ReplicationInterfaces;
using SharedCode.Logging;
using GeneratedCode.Repositories;
using SharedCode.EntitySystem;
using GeneratedCode.EntitySystem;
using SharedCode.EntitySystem.Delta;

namespace GeneratedCode.DeltaObjects
{
    public class PoiEntityAlways : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPoiEntityAlways
    {
        public PoiEntityAlways(SharedCode.AI.IPoiEntity deltaObject): base(deltaObject)
        {
        }

        SharedCode.AI.IPoiEntity __deltaObject__
        {
            get
            {
                return (SharedCode.AI.IPoiEntity)__deltaObjectBase__;
            }
        }

        public SharedCode.Entities.GameObjectEntities.IEntityObjectDef Def => __deltaObject__.Def;
        public GeneratedCode.MapSystem.MapOwner MapOwner => __deltaObject__.MapOwner;
        public System.Guid StaticIdFromExport => __deltaObject__.StaticIdFromExport;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncAlways MovementSync => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncAlways)__deltaObject__.MovementSync?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Always);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedAlways WorldSpaced => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedAlways)__deltaObject__.WorldSpaced?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Always);
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Def;
                    break;
                case 11:
                    currProperty = MapOwner;
                    break;
                case 12:
                    currProperty = StaticIdFromExport;
                    break;
                case 13:
                    currProperty = MovementSync;
                    break;
                case 15:
                    currProperty = WorldSpaced;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 953639884;
    }

    public class PoiEntityClientBroadcast : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPoiEntityClientBroadcast
    {
        public PoiEntityClientBroadcast(SharedCode.AI.IPoiEntity deltaObject): base(deltaObject)
        {
        }

        SharedCode.AI.IPoiEntity __deltaObject__
        {
            get
            {
                return (SharedCode.AI.IPoiEntity)__deltaObjectBase__;
            }
        }

        public SharedCode.Entities.GameObjectEntities.IEntityObjectDef Def => __deltaObject__.Def;
        public GeneratedCode.MapSystem.MapOwner MapOwner => __deltaObject__.MapOwner;
        public System.Guid StaticIdFromExport => __deltaObject__.StaticIdFromExport;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncClientBroadcast MovementSync => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncClientBroadcast)__deltaObject__.MovementSync?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedClientBroadcast WorldSpaced => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedClientBroadcast)__deltaObject__.WorldSpaced?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Def;
                    break;
                case 11:
                    currProperty = MapOwner;
                    break;
                case 12:
                    currProperty = StaticIdFromExport;
                    break;
                case 13:
                    currProperty = MovementSync;
                    break;
                case 15:
                    currProperty = WorldSpaced;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -297142948;
    }

    public class PoiEntityClientFullApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPoiEntityClientFullApi
    {
        public PoiEntityClientFullApi(SharedCode.AI.IPoiEntity deltaObject): base(deltaObject)
        {
        }

        SharedCode.AI.IPoiEntity __deltaObject__
        {
            get
            {
                return (SharedCode.AI.IPoiEntity)__deltaObjectBase__;
            }
        }

        public override int TypeId => 1675337050;
    }

    public class PoiEntityClientFull : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPoiEntityClientFull
    {
        public PoiEntityClientFull(SharedCode.AI.IPoiEntity deltaObject): base(deltaObject)
        {
        }

        SharedCode.AI.IPoiEntity __deltaObject__
        {
            get
            {
                return (SharedCode.AI.IPoiEntity)__deltaObjectBase__;
            }
        }

        public SharedCode.Entities.GameObjectEntities.IEntityObjectDef Def => __deltaObject__.Def;
        public GeneratedCode.MapSystem.MapOwner MapOwner => __deltaObject__.MapOwner;
        public System.Guid StaticIdFromExport => __deltaObject__.StaticIdFromExport;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncClientFull MovementSync => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncClientFull)__deltaObject__.MovementSync?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientFull);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedClientFull WorldSpaced => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedClientFull)__deltaObject__.WorldSpaced?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientFull);
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Def;
                    break;
                case 11:
                    currProperty = MapOwner;
                    break;
                case 12:
                    currProperty = StaticIdFromExport;
                    break;
                case 13:
                    currProperty = MovementSync;
                    break;
                case 15:
                    currProperty = WorldSpaced;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -759081839;
    }

    public class PoiEntityServerApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPoiEntityServerApi
    {
        public PoiEntityServerApi(SharedCode.AI.IPoiEntity deltaObject): base(deltaObject)
        {
        }

        SharedCode.AI.IPoiEntity __deltaObject__
        {
            get
            {
                return (SharedCode.AI.IPoiEntity)__deltaObjectBase__;
            }
        }

        public override int TypeId => -435712801;
    }

    public class PoiEntityServer : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPoiEntityServer
    {
        public PoiEntityServer(SharedCode.AI.IPoiEntity deltaObject): base(deltaObject)
        {
        }

        SharedCode.AI.IPoiEntity __deltaObject__
        {
            get
            {
                return (SharedCode.AI.IPoiEntity)__deltaObjectBase__;
            }
        }

        public SharedCode.Entities.GameObjectEntities.IEntityObjectDef Def => __deltaObject__.Def;
        public GeneratedCode.MapSystem.MapOwner MapOwner => __deltaObject__.MapOwner;
        public System.Guid StaticIdFromExport => __deltaObject__.StaticIdFromExport;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncServer MovementSync => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncServer)__deltaObject__.MovementSync?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedServer WorldSpaced => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedServer)__deltaObject__.WorldSpaced?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Def;
                    break;
                case 11:
                    currProperty = MapOwner;
                    break;
                case 12:
                    currProperty = StaticIdFromExport;
                    break;
                case 13:
                    currProperty = MovementSync;
                    break;
                case 15:
                    currProperty = WorldSpaced;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -1035117117;
    }
}