// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using System;
using SharedCode.Entities.Service;
using SharedCode.EntitySystem.ChainCalls;
using SharedCode.Logging;
using SharedCode.OurSimpleIoC;
using SharedCode.Serializers;
using SharedCode.Utils;
using System.Linq;
using System.Collections.Generic;
using System.CodeDom.Compiler;
using GeneratedCode.DeltaObjects.Chain;

[GeneratedCode("CodeGen", "1.0")]
public class BakenCoordinatorServiceEntityAlwaysChainProxy : IChainedEntity
{
    private BakenCoordinatorServiceEntityChainProxy __chain__;
    public BakenCoordinatorServiceEntityAlwaysChainProxy(BakenCoordinatorServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public BakenCoordinatorServiceEntityAlwaysChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public BakenCoordinatorServiceEntityAlwaysChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public BakenCoordinatorServiceEntityAlwaysChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static BakenCoordinatorServiceEntityAlwaysChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IBakenCoordinatorServiceEntityAlways entity)
    {
        return new BakenCoordinatorServiceEntityAlwaysChainProxy(new BakenCoordinatorServiceEntityChainProxy((SharedCode.Entities.Service.IBakenCoordinatorServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static BakenCoordinatorServiceEntityAlwaysChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IBakenCoordinatorServiceEntityAlways entity, IChainedEntity fromChain)
    {
        return new BakenCoordinatorServiceEntityAlwaysChainProxy(new BakenCoordinatorServiceEntityChainProxy((SharedCode.Entities.Service.IBakenCoordinatorServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class BakenCoordinatorServiceEntityClientBroadcastChainProxy : IChainedEntity
{
    private BakenCoordinatorServiceEntityChainProxy __chain__;
    public BakenCoordinatorServiceEntityClientBroadcastChainProxy(BakenCoordinatorServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public BakenCoordinatorServiceEntityClientBroadcastChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public BakenCoordinatorServiceEntityClientBroadcastChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public BakenCoordinatorServiceEntityClientBroadcastChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static BakenCoordinatorServiceEntityClientBroadcastChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IBakenCoordinatorServiceEntityClientBroadcast entity)
    {
        return new BakenCoordinatorServiceEntityClientBroadcastChainProxy(new BakenCoordinatorServiceEntityChainProxy((SharedCode.Entities.Service.IBakenCoordinatorServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static BakenCoordinatorServiceEntityClientBroadcastChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IBakenCoordinatorServiceEntityClientBroadcast entity, IChainedEntity fromChain)
    {
        return new BakenCoordinatorServiceEntityClientBroadcastChainProxy(new BakenCoordinatorServiceEntityChainProxy((SharedCode.Entities.Service.IBakenCoordinatorServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class BakenCoordinatorServiceEntityClientFullApiChainProxy : IChainedEntity
{
    private BakenCoordinatorServiceEntityChainProxy __chain__;
    public BakenCoordinatorServiceEntityClientFullApiChainProxy(BakenCoordinatorServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public BakenCoordinatorServiceEntityClientFullApiChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public BakenCoordinatorServiceEntityClientFullApiChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public BakenCoordinatorServiceEntityClientFullApiChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static BakenCoordinatorServiceEntityClientFullApiChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IBakenCoordinatorServiceEntityClientFullApi entity)
    {
        return new BakenCoordinatorServiceEntityClientFullApiChainProxy(new BakenCoordinatorServiceEntityChainProxy((SharedCode.Entities.Service.IBakenCoordinatorServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static BakenCoordinatorServiceEntityClientFullApiChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IBakenCoordinatorServiceEntityClientFullApi entity, IChainedEntity fromChain)
    {
        return new BakenCoordinatorServiceEntityClientFullApiChainProxy(new BakenCoordinatorServiceEntityChainProxy((SharedCode.Entities.Service.IBakenCoordinatorServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class BakenCoordinatorServiceEntityClientFullChainProxy : IChainedEntity
{
    private BakenCoordinatorServiceEntityChainProxy __chain__;
    public BakenCoordinatorServiceEntityClientFullChainProxy(BakenCoordinatorServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public BakenCoordinatorServiceEntityClientFullChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public BakenCoordinatorServiceEntityClientFullChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public BakenCoordinatorServiceEntityClientFullChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static BakenCoordinatorServiceEntityClientFullChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IBakenCoordinatorServiceEntityClientFull entity)
    {
        return new BakenCoordinatorServiceEntityClientFullChainProxy(new BakenCoordinatorServiceEntityChainProxy((SharedCode.Entities.Service.IBakenCoordinatorServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static BakenCoordinatorServiceEntityClientFullChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IBakenCoordinatorServiceEntityClientFull entity, IChainedEntity fromChain)
    {
        return new BakenCoordinatorServiceEntityClientFullChainProxy(new BakenCoordinatorServiceEntityChainProxy((SharedCode.Entities.Service.IBakenCoordinatorServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class BakenCoordinatorServiceEntityServerApiChainProxy : IChainedEntity
{
    private BakenCoordinatorServiceEntityChainProxy __chain__;
    public BakenCoordinatorServiceEntityServerApiChainProxy(BakenCoordinatorServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public BakenCoordinatorServiceEntityServerApiChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public BakenCoordinatorServiceEntityServerApiChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public BakenCoordinatorServiceEntityServerApiChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static BakenCoordinatorServiceEntityServerApiChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IBakenCoordinatorServiceEntityServerApi entity)
    {
        return new BakenCoordinatorServiceEntityServerApiChainProxy(new BakenCoordinatorServiceEntityChainProxy((SharedCode.Entities.Service.IBakenCoordinatorServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static BakenCoordinatorServiceEntityServerApiChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IBakenCoordinatorServiceEntityServerApi entity, IChainedEntity fromChain)
    {
        return new BakenCoordinatorServiceEntityServerApiChainProxy(new BakenCoordinatorServiceEntityChainProxy((SharedCode.Entities.Service.IBakenCoordinatorServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class BakenCoordinatorServiceEntityServerChainProxy : IChainedEntity
{
    private BakenCoordinatorServiceEntityChainProxy __chain__;
    public BakenCoordinatorServiceEntityServerChainProxy(BakenCoordinatorServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public BakenCoordinatorServiceEntityServerChainProxy OnUserConnected(ChainArgument<System.Guid> charId, ChainArgument<System.Guid> repoId)
    {
        __chain__.OnUserConnected(charId, repoId);
        return this;
    }

    public BakenCoordinatorServiceEntityServerChainProxy RegisterBaken(ChainArgument<System.Guid> characterId, ChainArgument<System.Guid> masterRepoId, ChainArgument<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>> bakenRef)
    {
        __chain__.RegisterBaken(characterId, masterRepoId, bakenRef);
        return this;
    }

    public BakenCoordinatorServiceEntityServerChainProxy UnregisterBaken(ChainArgument<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>> bakenRef)
    {
        __chain__.UnregisterBaken(bakenRef);
        return this;
    }

    public BakenCoordinatorServiceEntityServerChainProxy BakenIsDestroyed(ChainArgument<System.Guid> characterId, ChainArgument<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>> bakenRef)
    {
        __chain__.BakenIsDestroyed(characterId, bakenRef);
        return this;
    }

    public BakenCoordinatorServiceEntityServerChainProxy SetCharacterLoaded(ChainArgument<System.Guid> characterId, ChainArgument<bool> loaded)
    {
        __chain__.SetCharacterLoaded(characterId, loaded);
        return this;
    }

    public BakenCoordinatorServiceEntityServerChainProxy ActivateBaken(ChainArgument<System.Guid> characterId, ChainArgument<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>> bakenRef)
    {
        __chain__.ActivateBaken(characterId, bakenRef);
        return this;
    }

    public BakenCoordinatorServiceEntityServerChainProxy GetActiveBaken(ChainArgument<System.Guid> characterId)
    {
        __chain__.GetActiveBaken(characterId);
        return this;
    }

    public BakenCoordinatorServiceEntityServerChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public BakenCoordinatorServiceEntityServerChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public BakenCoordinatorServiceEntityServerChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static BakenCoordinatorServiceEntityServerChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IBakenCoordinatorServiceEntityServer entity)
    {
        return new BakenCoordinatorServiceEntityServerChainProxy(new BakenCoordinatorServiceEntityChainProxy((SharedCode.Entities.Service.IBakenCoordinatorServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static BakenCoordinatorServiceEntityServerChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IBakenCoordinatorServiceEntityServer entity, IChainedEntity fromChain)
    {
        return new BakenCoordinatorServiceEntityServerChainProxy(new BakenCoordinatorServiceEntityChainProxy((SharedCode.Entities.Service.IBakenCoordinatorServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}