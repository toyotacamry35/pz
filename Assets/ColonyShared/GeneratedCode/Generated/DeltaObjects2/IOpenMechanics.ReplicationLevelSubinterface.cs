// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

namespace GeneratedCode.DeltaObjects.ReplicationInterfaces
{
    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.Always, 14876558, typeof(SharedCode.Entities.IOpenMechanics))]
    public interface IOpenMechanicsAlways : SharedCode.EntitySystem.IDeltaObject, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, -786016358, typeof(SharedCode.Entities.IOpenMechanics))]
    public interface IOpenMechanicsClientBroadcast : SharedCode.EntitySystem.IDeltaObject, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
        bool IsOpen
        {
            get;
        }

        System.Threading.Tasks.Task<ResourceSystem.Utils.OuterRef> TryOpen(ResourceSystem.Utils.OuterRef outerRef);
        System.Threading.Tasks.Task<bool> TryClose(ResourceSystem.Utils.OuterRef outerRef);
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.ClientFullApi, 1907774767, typeof(SharedCode.Entities.IOpenMechanics))]
    public interface IOpenMechanicsClientFullApi : SharedCode.EntitySystem.IDeltaObject, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.ClientFull, 1255049799, typeof(SharedCode.Entities.IOpenMechanics))]
    public interface IOpenMechanicsClientFull : SharedCode.EntitySystem.IDeltaObject, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
        bool IsOpen
        {
            get;
        }

        System.Threading.Tasks.Task<ResourceSystem.Utils.OuterRef> TryOpen(ResourceSystem.Utils.OuterRef outerRef);
        System.Threading.Tasks.Task<bool> TryClose(ResourceSystem.Utils.OuterRef outerRef);
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.ServerApi, -1619476383, typeof(SharedCode.Entities.IOpenMechanics))]
    public interface IOpenMechanicsServerApi : SharedCode.EntitySystem.IDeltaObject, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.Server, 1241422898, typeof(SharedCode.Entities.IOpenMechanics))]
    public interface IOpenMechanicsServer : SharedCode.EntitySystem.IDeltaObject, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
        bool IsOpen
        {
            get;
        }

        System.Threading.Tasks.Task<ResourceSystem.Utils.OuterRef> TryOpen(ResourceSystem.Utils.OuterRef outerRef);
        System.Threading.Tasks.Task<bool> TryClose(ResourceSystem.Utils.OuterRef outerRef);
    }
}