// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

namespace GeneratedCode.DeltaObjects
{
    [ProtoBuf.ProtoContract]
    [MongoDB.Bson.Serialization.Attributes.BsonDiscriminator("MutationMechanics")]
    public partial class MutationMechanics : SharedCode.EntitySystem.BaseDeltaObject, SharedCode.Entities.IMutationMechanics, IMutationMechanicsImplementRemoteMethods
    {
        public MutationMechanics()
        {
            if (!SharedCode.Serializers._SerializerContext.Pool.Current.Deserialization)
            {
                FactionsDef = default(Assets.Src.Aspects.Impl.Factions.Template.MutatingFactionsDef);
                Faction = default(Assets.Src.Aspects.Impl.Factions.Template.MutatingFactionDef);
                NewFaction = default(Assets.Src.Aspects.Impl.Factions.Template.MutatingFactionDef);
                Stage = default(Assets.Src.Aspects.Impl.Factions.Template.MutationStageDef);
                NewStage = default(Assets.Src.Aspects.Impl.Factions.Template.MutationStageDef);
                Mutation = default(float);
                AllowedTimeMutationChange = default(long);
            }

            constructor();
        }

        protected override void Subscribe(string propertyName, SharedCode.EntitySystem.PropertyChangedDelegate callback)
        {
            base.Subscribe(propertyName, callback);
            switch (propertyName)
            {
                case "FactionsDef":
                    FactionsDef__Changed += callback;
                    break;
                case "Faction":
                    Faction__Changed += callback;
                    break;
                case "NewFaction":
                    NewFaction__Changed += callback;
                    break;
                case "Stage":
                    Stage__Changed += callback;
                    break;
                case "NewStage":
                    NewStage__Changed += callback;
                    break;
                case "Mutation":
                    Mutation__Changed += callback;
                    break;
                case "AllowedTimeMutationChange":
                    AllowedTimeMutationChange__Changed += callback;
                    break;
                default:
                    throw new System.ArgumentException($"Field {propertyName} does not exist in {GetType()}", nameof(propertyName));
            }
        }

        protected override void Unsubscribe(string propertyName, SharedCode.EntitySystem.PropertyChangedDelegate callback)
        {
            base.Unsubscribe(propertyName, callback);
            switch (propertyName)
            {
                case "FactionsDef":
                    FactionsDef__Changed -= callback;
                    break;
                case "Faction":
                    Faction__Changed -= callback;
                    break;
                case "NewFaction":
                    NewFaction__Changed -= callback;
                    break;
                case "Stage":
                    Stage__Changed -= callback;
                    break;
                case "NewStage":
                    NewStage__Changed -= callback;
                    break;
                case "Mutation":
                    Mutation__Changed -= callback;
                    break;
                case "AllowedTimeMutationChange":
                    AllowedTimeMutationChange__Changed -= callback;
                    break;
                default:
                    throw new System.ArgumentException($"Field {propertyName} does not exist in {GetType()}", nameof(propertyName));
            }
        }

        protected override void Unsubscribe(string propertyName)
        {
            base.Unsubscribe(propertyName);
            switch (propertyName)
            {
                case "FactionsDef":
                    FactionsDef__Changed = null;
                    break;
                case "Faction":
                    Faction__Changed = null;
                    break;
                case "NewFaction":
                    NewFaction__Changed = null;
                    break;
                case "Stage":
                    Stage__Changed = null;
                    break;
                case "NewStage":
                    NewStage__Changed = null;
                    break;
                case "Mutation":
                    Mutation__Changed = null;
                    break;
                case "AllowedTimeMutationChange":
                    AllowedTimeMutationChange__Changed = null;
                    break;
                default:
                    throw new System.ArgumentException($"Field {propertyName} does not exist in {GetType()}", nameof(propertyName));
            }
        }

        protected override void Unsubscribe()
        {
            base.Unsubscribe();
            FactionsDef__Changed = null;
            Faction__Changed = null;
            NewFaction__Changed = null;
            Stage__Changed = null;
            NewStage__Changed = null;
            Mutation__Changed = null;
            AllowedTimeMutationChange__Changed = null;
        }

        protected override void FireEvents(System.Collections.Generic.List<System.Func<System.Threading.Tasks.Task>> container)
        {
            base.FireEvents(container);
            if (NeedFireEvent(10) && FactionsDef__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 10;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_FactionsDef, nameof(FactionsDef), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, FactionsDef__Changed);
            }

            if (NeedFireEvent(11) && Faction__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 11;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Faction, nameof(Faction), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Faction__Changed);
            }

            if (NeedFireEvent(12) && NewFaction__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 12;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_NewFaction, nameof(NewFaction), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, NewFaction__Changed);
            }

            if (NeedFireEvent(13) && Stage__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 13;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Stage, nameof(Stage), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Stage__Changed);
            }

            if (NeedFireEvent(14) && NewStage__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 14;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_NewStage, nameof(NewStage), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, NewStage__Changed);
            }

            if (NeedFireEvent(15) && Mutation__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 15;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Mutation, nameof(Mutation), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Mutation__Changed);
            }

            if (NeedFireEvent(16) && AllowedTimeMutationChange__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 16;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_AllowedTimeMutationChange, nameof(AllowedTimeMutationChange), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, AllowedTimeMutationChange__Changed);
            }
        }

        public override void Downgrade(long mask)
        {
            base.Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                FactionsDef = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                Faction = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                NewFaction = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast & mask) > 0)
                Stage = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                NewStage = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                Mutation = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                AllowedTimeMutationChange = default;
        }
    }
}