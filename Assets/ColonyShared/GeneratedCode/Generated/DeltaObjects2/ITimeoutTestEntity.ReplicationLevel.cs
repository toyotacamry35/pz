// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using GeneratedCode.DeltaObjects.ReplicationInterfaces;
using SharedCode.Logging;
using GeneratedCode.Repositories;
using SharedCode.EntitySystem;
using GeneratedCode.EntitySystem;
using SharedCode.EntitySystem.Delta;

namespace GeneratedCode.DeltaObjects
{
    public class TimeoutTestEntityAlways : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITimeoutTestEntityAlways
    {
        public TimeoutTestEntityAlways(GeneratedCode.EntityModel.Test.ITimeoutTestEntity deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Test.ITimeoutTestEntity __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Test.ITimeoutTestEntity)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1515407756;
    }

    public class TimeoutTestEntityClientBroadcast : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITimeoutTestEntityClientBroadcast
    {
        public TimeoutTestEntityClientBroadcast(GeneratedCode.EntityModel.Test.ITimeoutTestEntity deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Test.ITimeoutTestEntity __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Test.ITimeoutTestEntity)__deltaObjectBase__;
            }
        }

        public IDeltaList<int> TestDeltaListInt => __deltaObject__.TestDeltaListInt;
        IDeltaListWrapper<GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectClientBroadcast> __TestDeltaListDeltaObject__Wrapper__;
        public IDeltaListWrapper<GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectClientBroadcast> TestDeltaListDeltaObject
        {
            get
            {
                if (__TestDeltaListDeltaObject__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__TestDeltaListDeltaObject__Wrapper__).GetBaseDeltaObject() != __deltaObject__.TestDeltaListDeltaObject)
                    __TestDeltaListDeltaObject__Wrapper__ = __deltaObject__.TestDeltaListDeltaObject == null ? null : new DeltaListWrapper<GeneratedCode.EntityModel.Test.ITestDeltaObject, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectClientBroadcast>(__deltaObject__.TestDeltaListDeltaObject);
                return __TestDeltaListDeltaObject__Wrapper__;
            }
        }

        public IDeltaDictionary<int, int> TestDeltaDictionaryInt
        {
            get
            {
                return __deltaObject__.TestDeltaDictionaryInt;
            }
        }

        IDeltaDictionaryWrapper<int, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectClientBroadcast> __TestDeltaDictionaryIntDeltaObject__Wrapper__;
        public IDeltaDictionaryWrapper<int, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectClientBroadcast> TestDeltaDictionaryIntDeltaObject
        {
            get
            {
                if (__TestDeltaDictionaryIntDeltaObject__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__TestDeltaDictionaryIntDeltaObject__Wrapper__).GetBaseDeltaObject() != __deltaObject__.TestDeltaDictionaryIntDeltaObject)
                    __TestDeltaDictionaryIntDeltaObject__Wrapper__ = __deltaObject__.TestDeltaDictionaryIntDeltaObject == null ? null : new DeltaDictionaryWrapper<int, GeneratedCode.EntityModel.Test.ITestDeltaObject, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectClientBroadcast>(__deltaObject__.TestDeltaDictionaryIntDeltaObject);
                return __TestDeltaDictionaryIntDeltaObject__Wrapper__;
            }
        }

        public int TestProperty => __deltaObject__.TestProperty;
        public System.Threading.Tasks.Task LongUsage()
        {
            return __deltaObject__.LongUsage();
        }

        public System.Threading.Tasks.Task ShortUsage()
        {
            return __deltaObject__.ShortUsage();
        }

        public System.Threading.Tasks.Task SetTestProperty(int value)
        {
            return __deltaObject__.SetTestProperty(value);
        }

        public System.Threading.Tasks.Task AwaitWriteTimeSec(float seconds)
        {
            return __deltaObject__.AwaitWriteTimeSec(seconds);
        }

        public System.Threading.Tasks.Task AwaitWriteTimeSecAndSetTestProperty(float seconds, int value)
        {
            return __deltaObject__.AwaitWriteTimeSecAndSetTestProperty(seconds, value);
        }

        public System.Threading.Tasks.Task AwaitReadTimeSec(float seconds)
        {
            return __deltaObject__.AwaitReadTimeSec(seconds);
        }

        public System.Threading.Tasks.Task AwaitWriteTimeSecAndCallSubTestEntityRpcWithAwait(float seconds, float subseconds, int value)
        {
            return __deltaObject__.AwaitWriteTimeSecAndCallSubTestEntityRpcWithAwait(seconds, subseconds, value);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = TestDeltaListInt;
                    break;
                case 11:
                    currProperty = TestDeltaListDeltaObject;
                    break;
                case 12:
                    currProperty = TestDeltaDictionaryInt;
                    break;
                case 13:
                    currProperty = TestDeltaDictionaryIntDeltaObject;
                    break;
                case 14:
                    currProperty = TestProperty;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -1368934903;
    }

    public class TimeoutTestEntityClientFullApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITimeoutTestEntityClientFullApi
    {
        public TimeoutTestEntityClientFullApi(GeneratedCode.EntityModel.Test.ITimeoutTestEntity deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Test.ITimeoutTestEntity __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Test.ITimeoutTestEntity)__deltaObjectBase__;
            }
        }

        public override int TypeId => 138857518;
    }

    public class TimeoutTestEntityClientFull : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITimeoutTestEntityClientFull
    {
        public TimeoutTestEntityClientFull(GeneratedCode.EntityModel.Test.ITimeoutTestEntity deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Test.ITimeoutTestEntity __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Test.ITimeoutTestEntity)__deltaObjectBase__;
            }
        }

        public IDeltaList<int> TestDeltaListInt => __deltaObject__.TestDeltaListInt;
        IDeltaListWrapper<GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectClientFull> __TestDeltaListDeltaObject__Wrapper__;
        public IDeltaListWrapper<GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectClientFull> TestDeltaListDeltaObject
        {
            get
            {
                if (__TestDeltaListDeltaObject__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__TestDeltaListDeltaObject__Wrapper__).GetBaseDeltaObject() != __deltaObject__.TestDeltaListDeltaObject)
                    __TestDeltaListDeltaObject__Wrapper__ = __deltaObject__.TestDeltaListDeltaObject == null ? null : new DeltaListWrapper<GeneratedCode.EntityModel.Test.ITestDeltaObject, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectClientFull>(__deltaObject__.TestDeltaListDeltaObject);
                return __TestDeltaListDeltaObject__Wrapper__;
            }
        }

        public IDeltaDictionary<int, int> TestDeltaDictionaryInt
        {
            get
            {
                return __deltaObject__.TestDeltaDictionaryInt;
            }
        }

        IDeltaDictionaryWrapper<int, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectClientFull> __TestDeltaDictionaryIntDeltaObject__Wrapper__;
        public IDeltaDictionaryWrapper<int, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectClientFull> TestDeltaDictionaryIntDeltaObject
        {
            get
            {
                if (__TestDeltaDictionaryIntDeltaObject__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__TestDeltaDictionaryIntDeltaObject__Wrapper__).GetBaseDeltaObject() != __deltaObject__.TestDeltaDictionaryIntDeltaObject)
                    __TestDeltaDictionaryIntDeltaObject__Wrapper__ = __deltaObject__.TestDeltaDictionaryIntDeltaObject == null ? null : new DeltaDictionaryWrapper<int, GeneratedCode.EntityModel.Test.ITestDeltaObject, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectClientFull>(__deltaObject__.TestDeltaDictionaryIntDeltaObject);
                return __TestDeltaDictionaryIntDeltaObject__Wrapper__;
            }
        }

        public int TestProperty => __deltaObject__.TestProperty;
        public System.Threading.Tasks.Task LongUsage()
        {
            return __deltaObject__.LongUsage();
        }

        public System.Threading.Tasks.Task ShortUsage()
        {
            return __deltaObject__.ShortUsage();
        }

        public System.Threading.Tasks.Task SetTestProperty(int value)
        {
            return __deltaObject__.SetTestProperty(value);
        }

        public System.Threading.Tasks.Task AwaitWriteTimeSec(float seconds)
        {
            return __deltaObject__.AwaitWriteTimeSec(seconds);
        }

        public System.Threading.Tasks.Task AwaitWriteTimeSecAndSetTestProperty(float seconds, int value)
        {
            return __deltaObject__.AwaitWriteTimeSecAndSetTestProperty(seconds, value);
        }

        public System.Threading.Tasks.Task AwaitReadTimeSec(float seconds)
        {
            return __deltaObject__.AwaitReadTimeSec(seconds);
        }

        public System.Threading.Tasks.Task AwaitWriteTimeSecAndCallSubTestEntityRpcWithAwait(float seconds, float subseconds, int value)
        {
            return __deltaObject__.AwaitWriteTimeSecAndCallSubTestEntityRpcWithAwait(seconds, subseconds, value);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = TestDeltaListInt;
                    break;
                case 11:
                    currProperty = TestDeltaListDeltaObject;
                    break;
                case 12:
                    currProperty = TestDeltaDictionaryInt;
                    break;
                case 13:
                    currProperty = TestDeltaDictionaryIntDeltaObject;
                    break;
                case 14:
                    currProperty = TestProperty;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -211623688;
    }

    public class TimeoutTestEntityServerApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITimeoutTestEntityServerApi
    {
        public TimeoutTestEntityServerApi(GeneratedCode.EntityModel.Test.ITimeoutTestEntity deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Test.ITimeoutTestEntity __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Test.ITimeoutTestEntity)__deltaObjectBase__;
            }
        }

        public override int TypeId => 2064490806;
    }

    public class TimeoutTestEntityServer : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITimeoutTestEntityServer
    {
        public TimeoutTestEntityServer(GeneratedCode.EntityModel.Test.ITimeoutTestEntity deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Test.ITimeoutTestEntity __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Test.ITimeoutTestEntity)__deltaObjectBase__;
            }
        }

        public IDeltaList<int> TestDeltaListInt => __deltaObject__.TestDeltaListInt;
        IDeltaListWrapper<GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectServer> __TestDeltaListDeltaObject__Wrapper__;
        public IDeltaListWrapper<GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectServer> TestDeltaListDeltaObject
        {
            get
            {
                if (__TestDeltaListDeltaObject__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__TestDeltaListDeltaObject__Wrapper__).GetBaseDeltaObject() != __deltaObject__.TestDeltaListDeltaObject)
                    __TestDeltaListDeltaObject__Wrapper__ = __deltaObject__.TestDeltaListDeltaObject == null ? null : new DeltaListWrapper<GeneratedCode.EntityModel.Test.ITestDeltaObject, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectServer>(__deltaObject__.TestDeltaListDeltaObject);
                return __TestDeltaListDeltaObject__Wrapper__;
            }
        }

        public IDeltaDictionary<int, int> TestDeltaDictionaryInt
        {
            get
            {
                return __deltaObject__.TestDeltaDictionaryInt;
            }
        }

        IDeltaDictionaryWrapper<int, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectServer> __TestDeltaDictionaryIntDeltaObject__Wrapper__;
        public IDeltaDictionaryWrapper<int, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectServer> TestDeltaDictionaryIntDeltaObject
        {
            get
            {
                if (__TestDeltaDictionaryIntDeltaObject__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__TestDeltaDictionaryIntDeltaObject__Wrapper__).GetBaseDeltaObject() != __deltaObject__.TestDeltaDictionaryIntDeltaObject)
                    __TestDeltaDictionaryIntDeltaObject__Wrapper__ = __deltaObject__.TestDeltaDictionaryIntDeltaObject == null ? null : new DeltaDictionaryWrapper<int, GeneratedCode.EntityModel.Test.ITestDeltaObject, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectServer>(__deltaObject__.TestDeltaDictionaryIntDeltaObject);
                return __TestDeltaDictionaryIntDeltaObject__Wrapper__;
            }
        }

        public int TestProperty => __deltaObject__.TestProperty;
        public System.Threading.Tasks.Task LongUsage()
        {
            return __deltaObject__.LongUsage();
        }

        public System.Threading.Tasks.Task ShortUsage()
        {
            return __deltaObject__.ShortUsage();
        }

        public System.Threading.Tasks.Task SetTestProperty(int value)
        {
            return __deltaObject__.SetTestProperty(value);
        }

        public System.Threading.Tasks.Task AwaitWriteTimeSec(float seconds)
        {
            return __deltaObject__.AwaitWriteTimeSec(seconds);
        }

        public System.Threading.Tasks.Task AwaitWriteTimeSecAndSetTestProperty(float seconds, int value)
        {
            return __deltaObject__.AwaitWriteTimeSecAndSetTestProperty(seconds, value);
        }

        public System.Threading.Tasks.Task AwaitReadTimeSec(float seconds)
        {
            return __deltaObject__.AwaitReadTimeSec(seconds);
        }

        public System.Threading.Tasks.Task AwaitWriteTimeSecAndCallSubTestEntityRpcWithAwait(float seconds, float subseconds, int value)
        {
            return __deltaObject__.AwaitWriteTimeSecAndCallSubTestEntityRpcWithAwait(seconds, subseconds, value);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = TestDeltaListInt;
                    break;
                case 11:
                    currProperty = TestDeltaListDeltaObject;
                    break;
                case 12:
                    currProperty = TestDeltaDictionaryInt;
                    break;
                case 13:
                    currProperty = TestDeltaDictionaryIntDeltaObject;
                    break;
                case 14:
                    currProperty = TestProperty;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -2112654925;
    }
}

namespace GeneratedCode.DeltaObjects
{
    public class TestDeltaObjectAlways : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectAlways
    {
        public TestDeltaObjectAlways(GeneratedCode.EntityModel.Test.ITestDeltaObject deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Test.ITestDeltaObject __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Test.ITestDeltaObject)__deltaObjectBase__;
            }
        }

        public int Value => __deltaObject__.Value;
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Value;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 1192109333;
    }

    public class TestDeltaObjectClientBroadcast : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectClientBroadcast
    {
        public TestDeltaObjectClientBroadcast(GeneratedCode.EntityModel.Test.ITestDeltaObject deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Test.ITestDeltaObject __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Test.ITestDeltaObject)__deltaObjectBase__;
            }
        }

        public int Value => __deltaObject__.Value;
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Value;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -1352669014;
    }

    public class TestDeltaObjectClientFullApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectClientFullApi
    {
        public TestDeltaObjectClientFullApi(GeneratedCode.EntityModel.Test.ITestDeltaObject deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Test.ITestDeltaObject __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Test.ITestDeltaObject)__deltaObjectBase__;
            }
        }

        public override int TypeId => -917810376;
    }

    public class TestDeltaObjectClientFull : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectClientFull
    {
        public TestDeltaObjectClientFull(GeneratedCode.EntityModel.Test.ITestDeltaObject deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Test.ITestDeltaObject __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Test.ITestDeltaObject)__deltaObjectBase__;
            }
        }

        public int Value => __deltaObject__.Value;
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Value;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -737606700;
    }

    public class TestDeltaObjectServerApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectServerApi
    {
        public TestDeltaObjectServerApi(GeneratedCode.EntityModel.Test.ITestDeltaObject deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Test.ITestDeltaObject __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Test.ITestDeltaObject)__deltaObjectBase__;
            }
        }

        public override int TypeId => 719548779;
    }

    public class TestDeltaObjectServer : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectServer
    {
        public TestDeltaObjectServer(GeneratedCode.EntityModel.Test.ITestDeltaObject deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Test.ITestDeltaObject __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Test.ITestDeltaObject)__deltaObjectBase__;
            }
        }

        public int Value => __deltaObject__.Value;
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Value;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 1724868613;
    }
}

namespace GeneratedCode.DeltaObjects
{
    public class TimeoutSubTestEntityAlways : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITimeoutSubTestEntityAlways
    {
        public TimeoutSubTestEntityAlways(GeneratedCode.EntityModel.Test.ITimeoutSubTestEntity deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Test.ITimeoutSubTestEntity __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Test.ITimeoutSubTestEntity)__deltaObjectBase__;
            }
        }

        public override int TypeId => -908906515;
    }

    public class TimeoutSubTestEntityClientBroadcast : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITimeoutSubTestEntityClientBroadcast
    {
        public TimeoutSubTestEntityClientBroadcast(GeneratedCode.EntityModel.Test.ITimeoutSubTestEntity deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Test.ITimeoutSubTestEntity __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Test.ITimeoutSubTestEntity)__deltaObjectBase__;
            }
        }

        public IDeltaList<int> TestDeltaListInt => __deltaObject__.TestDeltaListInt;
        IDeltaListWrapper<GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectClientBroadcast> __TestDeltaListDeltaObject__Wrapper__;
        public IDeltaListWrapper<GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectClientBroadcast> TestDeltaListDeltaObject
        {
            get
            {
                if (__TestDeltaListDeltaObject__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__TestDeltaListDeltaObject__Wrapper__).GetBaseDeltaObject() != __deltaObject__.TestDeltaListDeltaObject)
                    __TestDeltaListDeltaObject__Wrapper__ = __deltaObject__.TestDeltaListDeltaObject == null ? null : new DeltaListWrapper<GeneratedCode.EntityModel.Test.ITestDeltaObject, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectClientBroadcast>(__deltaObject__.TestDeltaListDeltaObject);
                return __TestDeltaListDeltaObject__Wrapper__;
            }
        }

        public IDeltaDictionary<int, int> TestDeltaDictionaryInt
        {
            get
            {
                return __deltaObject__.TestDeltaDictionaryInt;
            }
        }

        IDeltaDictionaryWrapper<int, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectClientBroadcast> __TestDeltaDictionaryIntDeltaObject__Wrapper__;
        public IDeltaDictionaryWrapper<int, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectClientBroadcast> TestDeltaDictionaryIntDeltaObject
        {
            get
            {
                if (__TestDeltaDictionaryIntDeltaObject__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__TestDeltaDictionaryIntDeltaObject__Wrapper__).GetBaseDeltaObject() != __deltaObject__.TestDeltaDictionaryIntDeltaObject)
                    __TestDeltaDictionaryIntDeltaObject__Wrapper__ = __deltaObject__.TestDeltaDictionaryIntDeltaObject == null ? null : new DeltaDictionaryWrapper<int, GeneratedCode.EntityModel.Test.ITestDeltaObject, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectClientBroadcast>(__deltaObject__.TestDeltaDictionaryIntDeltaObject);
                return __TestDeltaDictionaryIntDeltaObject__Wrapper__;
            }
        }

        public int TestProperty => __deltaObject__.TestProperty;
        public System.Threading.Tasks.Task LongUsage()
        {
            return __deltaObject__.LongUsage();
        }

        public System.Threading.Tasks.Task ShortUsage()
        {
            return __deltaObject__.ShortUsage();
        }

        public System.Threading.Tasks.Task SetTestProperty(int value)
        {
            return __deltaObject__.SetTestProperty(value);
        }

        public System.Threading.Tasks.Task AwaitWriteTimeSec(float seconds)
        {
            return __deltaObject__.AwaitWriteTimeSec(seconds);
        }

        public System.Threading.Tasks.Task AwaitWriteTimeSecAndSetTestProperty(float seconds, int value)
        {
            return __deltaObject__.AwaitWriteTimeSecAndSetTestProperty(seconds, value);
        }

        public System.Threading.Tasks.Task AwaitReadTimeSec(float seconds)
        {
            return __deltaObject__.AwaitReadTimeSec(seconds);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = TestDeltaListInt;
                    break;
                case 11:
                    currProperty = TestDeltaListDeltaObject;
                    break;
                case 12:
                    currProperty = TestDeltaDictionaryInt;
                    break;
                case 13:
                    currProperty = TestDeltaDictionaryIntDeltaObject;
                    break;
                case 14:
                    currProperty = TestProperty;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 1924747759;
    }

    public class TimeoutSubTestEntityClientFullApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITimeoutSubTestEntityClientFullApi
    {
        public TimeoutSubTestEntityClientFullApi(GeneratedCode.EntityModel.Test.ITimeoutSubTestEntity deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Test.ITimeoutSubTestEntity __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Test.ITimeoutSubTestEntity)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1682471774;
    }

    public class TimeoutSubTestEntityClientFull : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITimeoutSubTestEntityClientFull
    {
        public TimeoutSubTestEntityClientFull(GeneratedCode.EntityModel.Test.ITimeoutSubTestEntity deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Test.ITimeoutSubTestEntity __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Test.ITimeoutSubTestEntity)__deltaObjectBase__;
            }
        }

        public IDeltaList<int> TestDeltaListInt => __deltaObject__.TestDeltaListInt;
        IDeltaListWrapper<GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectClientFull> __TestDeltaListDeltaObject__Wrapper__;
        public IDeltaListWrapper<GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectClientFull> TestDeltaListDeltaObject
        {
            get
            {
                if (__TestDeltaListDeltaObject__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__TestDeltaListDeltaObject__Wrapper__).GetBaseDeltaObject() != __deltaObject__.TestDeltaListDeltaObject)
                    __TestDeltaListDeltaObject__Wrapper__ = __deltaObject__.TestDeltaListDeltaObject == null ? null : new DeltaListWrapper<GeneratedCode.EntityModel.Test.ITestDeltaObject, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectClientFull>(__deltaObject__.TestDeltaListDeltaObject);
                return __TestDeltaListDeltaObject__Wrapper__;
            }
        }

        public IDeltaDictionary<int, int> TestDeltaDictionaryInt
        {
            get
            {
                return __deltaObject__.TestDeltaDictionaryInt;
            }
        }

        IDeltaDictionaryWrapper<int, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectClientFull> __TestDeltaDictionaryIntDeltaObject__Wrapper__;
        public IDeltaDictionaryWrapper<int, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectClientFull> TestDeltaDictionaryIntDeltaObject
        {
            get
            {
                if (__TestDeltaDictionaryIntDeltaObject__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__TestDeltaDictionaryIntDeltaObject__Wrapper__).GetBaseDeltaObject() != __deltaObject__.TestDeltaDictionaryIntDeltaObject)
                    __TestDeltaDictionaryIntDeltaObject__Wrapper__ = __deltaObject__.TestDeltaDictionaryIntDeltaObject == null ? null : new DeltaDictionaryWrapper<int, GeneratedCode.EntityModel.Test.ITestDeltaObject, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectClientFull>(__deltaObject__.TestDeltaDictionaryIntDeltaObject);
                return __TestDeltaDictionaryIntDeltaObject__Wrapper__;
            }
        }

        public int TestProperty => __deltaObject__.TestProperty;
        public System.Threading.Tasks.Task LongUsage()
        {
            return __deltaObject__.LongUsage();
        }

        public System.Threading.Tasks.Task ShortUsage()
        {
            return __deltaObject__.ShortUsage();
        }

        public System.Threading.Tasks.Task SetTestProperty(int value)
        {
            return __deltaObject__.SetTestProperty(value);
        }

        public System.Threading.Tasks.Task AwaitWriteTimeSec(float seconds)
        {
            return __deltaObject__.AwaitWriteTimeSec(seconds);
        }

        public System.Threading.Tasks.Task AwaitWriteTimeSecAndSetTestProperty(float seconds, int value)
        {
            return __deltaObject__.AwaitWriteTimeSecAndSetTestProperty(seconds, value);
        }

        public System.Threading.Tasks.Task AwaitReadTimeSec(float seconds)
        {
            return __deltaObject__.AwaitReadTimeSec(seconds);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = TestDeltaListInt;
                    break;
                case 11:
                    currProperty = TestDeltaListDeltaObject;
                    break;
                case 12:
                    currProperty = TestDeltaDictionaryInt;
                    break;
                case 13:
                    currProperty = TestDeltaDictionaryIntDeltaObject;
                    break;
                case 14:
                    currProperty = TestProperty;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 443065669;
    }

    public class TimeoutSubTestEntityServerApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITimeoutSubTestEntityServerApi
    {
        public TimeoutSubTestEntityServerApi(GeneratedCode.EntityModel.Test.ITimeoutSubTestEntity deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Test.ITimeoutSubTestEntity __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Test.ITimeoutSubTestEntity)__deltaObjectBase__;
            }
        }

        public override int TypeId => 617419860;
    }

    public class TimeoutSubTestEntityServer : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITimeoutSubTestEntityServer
    {
        public TimeoutSubTestEntityServer(GeneratedCode.EntityModel.Test.ITimeoutSubTestEntity deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Test.ITimeoutSubTestEntity __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Test.ITimeoutSubTestEntity)__deltaObjectBase__;
            }
        }

        public IDeltaList<int> TestDeltaListInt => __deltaObject__.TestDeltaListInt;
        IDeltaListWrapper<GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectServer> __TestDeltaListDeltaObject__Wrapper__;
        public IDeltaListWrapper<GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectServer> TestDeltaListDeltaObject
        {
            get
            {
                if (__TestDeltaListDeltaObject__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__TestDeltaListDeltaObject__Wrapper__).GetBaseDeltaObject() != __deltaObject__.TestDeltaListDeltaObject)
                    __TestDeltaListDeltaObject__Wrapper__ = __deltaObject__.TestDeltaListDeltaObject == null ? null : new DeltaListWrapper<GeneratedCode.EntityModel.Test.ITestDeltaObject, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectServer>(__deltaObject__.TestDeltaListDeltaObject);
                return __TestDeltaListDeltaObject__Wrapper__;
            }
        }

        public IDeltaDictionary<int, int> TestDeltaDictionaryInt
        {
            get
            {
                return __deltaObject__.TestDeltaDictionaryInt;
            }
        }

        IDeltaDictionaryWrapper<int, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectServer> __TestDeltaDictionaryIntDeltaObject__Wrapper__;
        public IDeltaDictionaryWrapper<int, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectServer> TestDeltaDictionaryIntDeltaObject
        {
            get
            {
                if (__TestDeltaDictionaryIntDeltaObject__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__TestDeltaDictionaryIntDeltaObject__Wrapper__).GetBaseDeltaObject() != __deltaObject__.TestDeltaDictionaryIntDeltaObject)
                    __TestDeltaDictionaryIntDeltaObject__Wrapper__ = __deltaObject__.TestDeltaDictionaryIntDeltaObject == null ? null : new DeltaDictionaryWrapper<int, GeneratedCode.EntityModel.Test.ITestDeltaObject, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITestDeltaObjectServer>(__deltaObject__.TestDeltaDictionaryIntDeltaObject);
                return __TestDeltaDictionaryIntDeltaObject__Wrapper__;
            }
        }

        public int TestProperty => __deltaObject__.TestProperty;
        public System.Threading.Tasks.Task LongUsage()
        {
            return __deltaObject__.LongUsage();
        }

        public System.Threading.Tasks.Task ShortUsage()
        {
            return __deltaObject__.ShortUsage();
        }

        public System.Threading.Tasks.Task SetTestProperty(int value)
        {
            return __deltaObject__.SetTestProperty(value);
        }

        public System.Threading.Tasks.Task AwaitWriteTimeSec(float seconds)
        {
            return __deltaObject__.AwaitWriteTimeSec(seconds);
        }

        public System.Threading.Tasks.Task AwaitWriteTimeSecAndSetTestProperty(float seconds, int value)
        {
            return __deltaObject__.AwaitWriteTimeSecAndSetTestProperty(seconds, value);
        }

        public System.Threading.Tasks.Task AwaitReadTimeSec(float seconds)
        {
            return __deltaObject__.AwaitReadTimeSec(seconds);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = TestDeltaListInt;
                    break;
                case 11:
                    currProperty = TestDeltaListDeltaObject;
                    break;
                case 12:
                    currProperty = TestDeltaDictionaryInt;
                    break;
                case 13:
                    currProperty = TestDeltaDictionaryIntDeltaObject;
                    break;
                case 14:
                    currProperty = TestProperty;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -734422007;
    }
}