// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using System;
using SharedCode.Entities.Service;
using SharedCode.EntitySystem.ChainCalls;
using SharedCode.Logging;
using SharedCode.OurSimpleIoC;
using SharedCode.Serializers;
using SharedCode.Utils;
using System.Linq;
using System.Collections.Generic;
using System.CodeDom.Compiler;
using GeneratedCode.DeltaObjects.Chain;

[GeneratedCode("CodeGen", "1.0")]
public class MapEntityAlwaysChainProxy : IChainedEntity
{
    private MapEntityChainProxy __chain__;
    public MapEntityAlwaysChainProxy(MapEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public MapEntityAlwaysChainProxy TryAquireSpawnRightsForPointsSet(ChainArgument<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>> spawner, ChainArgument<SharedCode.Entities.GameObjectEntities.SceneChunkDef> mapSceneDef)
    {
        __chain__.TryAquireSpawnRightsForPointsSet(spawner, mapSceneDef);
        return this;
    }

    public MapEntityAlwaysChainProxy GetWorldSpaceForPoint(ChainArgument<SharedCode.Utils.Vector3> point)
    {
        __chain__.GetWorldSpaceForPoint(point);
        return this;
    }

    public MapEntityAlwaysChainProxy NotifyAllCharactersViaChat(ChainArgument<string> text)
    {
        __chain__.NotifyAllCharactersViaChat(text);
        return this;
    }

    public MapEntityAlwaysChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public MapEntityAlwaysChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public MapEntityAlwaysChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static MapEntityAlwaysChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IMapEntityAlways entity)
    {
        return new MapEntityAlwaysChainProxy(new MapEntityChainProxy((SharedCode.MapSystem.IMapEntity)entity.GetBaseDeltaObject()));
    }

    public static MapEntityAlwaysChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IMapEntityAlways entity, IChainedEntity fromChain)
    {
        return new MapEntityAlwaysChainProxy(new MapEntityChainProxy((SharedCode.MapSystem.IMapEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class MapEntityClientBroadcastChainProxy : IChainedEntity
{
    private MapEntityChainProxy __chain__;
    public MapEntityClientBroadcastChainProxy(MapEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public MapEntityClientBroadcastChainProxy SpawnNewBots(ChainArgument<System.Collections.Generic.List<System.Guid>> botIds, ChainArgument<string> spawnPointTypePath)
    {
        __chain__.SpawnNewBots(botIds, spawnPointTypePath);
        return this;
    }

    public MapEntityClientBroadcastChainProxy TryAquireSpawnRightsForPointsSet(ChainArgument<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>> spawner, ChainArgument<SharedCode.Entities.GameObjectEntities.SceneChunkDef> mapSceneDef)
    {
        __chain__.TryAquireSpawnRightsForPointsSet(spawner, mapSceneDef);
        return this;
    }

    public MapEntityClientBroadcastChainProxy GetWorldSpaceForPoint(ChainArgument<SharedCode.Utils.Vector3> point)
    {
        __chain__.GetWorldSpaceForPoint(point);
        return this;
    }

    public MapEntityClientBroadcastChainProxy NotifyAllCharactersViaChat(ChainArgument<string> text)
    {
        __chain__.NotifyAllCharactersViaChat(text);
        return this;
    }

    public MapEntityClientBroadcastChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public MapEntityClientBroadcastChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public MapEntityClientBroadcastChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static MapEntityClientBroadcastChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IMapEntityClientBroadcast entity)
    {
        return new MapEntityClientBroadcastChainProxy(new MapEntityChainProxy((SharedCode.MapSystem.IMapEntity)entity.GetBaseDeltaObject()));
    }

    public static MapEntityClientBroadcastChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IMapEntityClientBroadcast entity, IChainedEntity fromChain)
    {
        return new MapEntityClientBroadcastChainProxy(new MapEntityChainProxy((SharedCode.MapSystem.IMapEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class MapEntityClientFullApiChainProxy : IChainedEntity
{
    private MapEntityChainProxy __chain__;
    public MapEntityClientFullApiChainProxy(MapEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public MapEntityClientFullApiChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public MapEntityClientFullApiChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public MapEntityClientFullApiChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static MapEntityClientFullApiChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IMapEntityClientFullApi entity)
    {
        return new MapEntityClientFullApiChainProxy(new MapEntityChainProxy((SharedCode.MapSystem.IMapEntity)entity.GetBaseDeltaObject()));
    }

    public static MapEntityClientFullApiChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IMapEntityClientFullApi entity, IChainedEntity fromChain)
    {
        return new MapEntityClientFullApiChainProxy(new MapEntityChainProxy((SharedCode.MapSystem.IMapEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class MapEntityClientFullChainProxy : IChainedEntity
{
    private MapEntityChainProxy __chain__;
    public MapEntityClientFullChainProxy(MapEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public MapEntityClientFullChainProxy SpawnNewBots(ChainArgument<System.Collections.Generic.List<System.Guid>> botIds, ChainArgument<string> spawnPointTypePath)
    {
        __chain__.SpawnNewBots(botIds, spawnPointTypePath);
        return this;
    }

    public MapEntityClientFullChainProxy TryAquireSpawnRightsForPointsSet(ChainArgument<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>> spawner, ChainArgument<SharedCode.Entities.GameObjectEntities.SceneChunkDef> mapSceneDef)
    {
        __chain__.TryAquireSpawnRightsForPointsSet(spawner, mapSceneDef);
        return this;
    }

    public MapEntityClientFullChainProxy GetWorldSpaceForPoint(ChainArgument<SharedCode.Utils.Vector3> point)
    {
        __chain__.GetWorldSpaceForPoint(point);
        return this;
    }

    public MapEntityClientFullChainProxy NotifyAllCharactersViaChat(ChainArgument<string> text)
    {
        __chain__.NotifyAllCharactersViaChat(text);
        return this;
    }

    public MapEntityClientFullChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public MapEntityClientFullChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public MapEntityClientFullChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static MapEntityClientFullChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IMapEntityClientFull entity)
    {
        return new MapEntityClientFullChainProxy(new MapEntityChainProxy((SharedCode.MapSystem.IMapEntity)entity.GetBaseDeltaObject()));
    }

    public static MapEntityClientFullChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IMapEntityClientFull entity, IChainedEntity fromChain)
    {
        return new MapEntityClientFullChainProxy(new MapEntityChainProxy((SharedCode.MapSystem.IMapEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class MapEntityServerApiChainProxy : IChainedEntity
{
    private MapEntityChainProxy __chain__;
    public MapEntityServerApiChainProxy(MapEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public MapEntityServerApiChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public MapEntityServerApiChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public MapEntityServerApiChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static MapEntityServerApiChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IMapEntityServerApi entity)
    {
        return new MapEntityServerApiChainProxy(new MapEntityChainProxy((SharedCode.MapSystem.IMapEntity)entity.GetBaseDeltaObject()));
    }

    public static MapEntityServerApiChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IMapEntityServerApi entity, IChainedEntity fromChain)
    {
        return new MapEntityServerApiChainProxy(new MapEntityChainProxy((SharedCode.MapSystem.IMapEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class MapEntityServerChainProxy : IChainedEntity
{
    private MapEntityChainProxy __chain__;
    public MapEntityServerChainProxy(MapEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public MapEntityServerChainProxy SetMapEntityState(ChainArgument<SharedCode.MapSystem.MapEntityState> state)
    {
        __chain__.SetMapEntityState(state);
        return this;
    }

    public MapEntityServerChainProxy ChangeChunkDescription(ChainArgument<System.Guid> descriptionId, ChainArgument<SharedCode.MapSystem.MapChunkState> newState, ChainArgument<System.Guid> unityRepositoryId)
    {
        __chain__.ChangeChunkDescription(descriptionId, newState, unityRepositoryId);
        return this;
    }

    public MapEntityServerChainProxy OnLastUserLeft()
    {
        __chain__.OnLastUserLeft();
        return this;
    }

    public MapEntityServerChainProxy SpawnNewBots(ChainArgument<System.Collections.Generic.List<System.Guid>> botIds, ChainArgument<string> spawnPointTypePath)
    {
        __chain__.SpawnNewBots(botIds, spawnPointTypePath);
        return this;
    }

    public MapEntityServerChainProxy TryAquireSpawnRightsForPointsSet(ChainArgument<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>> spawner, ChainArgument<SharedCode.Entities.GameObjectEntities.SceneChunkDef> mapSceneDef)
    {
        __chain__.TryAquireSpawnRightsForPointsSet(spawner, mapSceneDef);
        return this;
    }

    public MapEntityServerChainProxy GetWorldSpaceForPoint(ChainArgument<SharedCode.Utils.Vector3> point)
    {
        __chain__.GetWorldSpaceForPoint(point);
        return this;
    }

    public MapEntityServerChainProxy NotifyAllCharactersViaChat(ChainArgument<string> text)
    {
        __chain__.NotifyAllCharactersViaChat(text);
        return this;
    }

    public MapEntityServerChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public MapEntityServerChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public MapEntityServerChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static MapEntityServerChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IMapEntityServer entity)
    {
        return new MapEntityServerChainProxy(new MapEntityChainProxy((SharedCode.MapSystem.IMapEntity)entity.GetBaseDeltaObject()));
    }

    public static MapEntityServerChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IMapEntityServer entity, IChainedEntity fromChain)
    {
        return new MapEntityServerChainProxy(new MapEntityChainProxy((SharedCode.MapSystem.IMapEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}