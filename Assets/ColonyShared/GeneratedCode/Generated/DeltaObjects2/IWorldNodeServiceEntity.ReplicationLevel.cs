// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using GeneratedCode.DeltaObjects.ReplicationInterfaces;
using SharedCode.Logging;
using GeneratedCode.Repositories;
using SharedCode.EntitySystem;
using GeneratedCode.EntitySystem;
using SharedCode.EntitySystem.Delta;

namespace GeneratedCode.DeltaObjects
{
    public class WorldNodeServiceEntityAlways : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldNodeServiceEntityAlways
    {
        public WorldNodeServiceEntityAlways(SharedCode.Entities.Service.IWorldNodeServiceEntity deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.Service.IWorldNodeServiceEntity __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.Service.IWorldNodeServiceEntity)__deltaObjectBase__;
            }
        }

        public override int TypeId => -700678626;
    }

    public class WorldNodeServiceEntityClientBroadcast : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldNodeServiceEntityClientBroadcast
    {
        public WorldNodeServiceEntityClientBroadcast(SharedCode.Entities.Service.IWorldNodeServiceEntity deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.Service.IWorldNodeServiceEntity __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.Service.IWorldNodeServiceEntity)__deltaObjectBase__;
            }
        }

        public override int TypeId => -120505346;
    }

    public class WorldNodeServiceEntityClientFullApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldNodeServiceEntityClientFullApi
    {
        public WorldNodeServiceEntityClientFullApi(SharedCode.Entities.Service.IWorldNodeServiceEntity deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.Service.IWorldNodeServiceEntity __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.Service.IWorldNodeServiceEntity)__deltaObjectBase__;
            }
        }

        public override int TypeId => -352914638;
    }

    public class WorldNodeServiceEntityClientFull : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldNodeServiceEntityClientFull
    {
        public WorldNodeServiceEntityClientFull(SharedCode.Entities.Service.IWorldNodeServiceEntity deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.Service.IWorldNodeServiceEntity __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.Service.IWorldNodeServiceEntity)__deltaObjectBase__;
            }
        }

        public override int TypeId => -165370691;
    }

    public class WorldNodeServiceEntityServerApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldNodeServiceEntityServerApi
    {
        public WorldNodeServiceEntityServerApi(SharedCode.Entities.Service.IWorldNodeServiceEntity deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.Service.IWorldNodeServiceEntity __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.Service.IWorldNodeServiceEntity)__deltaObjectBase__;
            }
        }

        public override int TypeId => 1208668388;
    }

    public class WorldNodeServiceEntityServer : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldNodeServiceEntityServer
    {
        public WorldNodeServiceEntityServer(SharedCode.Entities.Service.IWorldNodeServiceEntity deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.Service.IWorldNodeServiceEntity __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.Service.IWorldNodeServiceEntity)__deltaObjectBase__;
            }
        }

        public SharedCode.Entities.Cloud.EndpointAddress ExternalAddress => __deltaObject__.ExternalAddress;
        public GeneratedCode.Custom.Config.MapDef Map => __deltaObject__.Map;
        public System.Guid MapInstanceId => __deltaObject__.MapInstanceId;
        public System.Guid MapChunkId => __deltaObject__.MapChunkId;
        public SharedCode.Entities.Service.WorldNodeServiceState State => __deltaObject__.State;
        public bool ClientNode => __deltaObject__.ClientNode;
        public System.Threading.Tasks.Task<bool> IsReady()
        {
            return __deltaObject__.IsReady();
        }

        public System.Threading.Tasks.Task<bool> HostUnityMapChunk(GeneratedCode.Custom.Config.MapDef mapChunk)
        {
            return __deltaObject__.HostUnityMapChunk(mapChunk);
        }

        public System.Threading.Tasks.Task<bool> HostUnityMapChunk(GeneratedCode.Custom.Config.MapDef mapChunk, System.Guid mapChunkId, System.Guid mapInstanceId, System.Guid mapInstanceRepositoryId)
        {
            return __deltaObject__.HostUnityMapChunk(mapChunk, mapChunkId, mapInstanceId, mapInstanceRepositoryId);
        }

        public System.Threading.Tasks.Task<bool> HostedUnityMapChunk(GeneratedCode.Custom.Config.MapDef mapChunk, System.Guid mapChunkId, System.Guid mapInstanceId)
        {
            return __deltaObject__.HostedUnityMapChunk(mapChunk, mapChunkId, mapInstanceId);
        }

        public System.Threading.Tasks.ValueTask<bool> CanBuildHere(SharedCode.Entities.GameObjectEntities.IEntityObjectDef entityObjectDef, SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> ent, SharedCode.Utils.Vector3 position, SharedCode.Utils.Vector3 scale, SharedCode.Utils.Quaternion rotation)
        {
            return __deltaObject__.CanBuildHere(entityObjectDef, ent, position, scale, rotation);
        }

        public System.Threading.Tasks.ValueTask<SharedCode.Utils.Vector3> GetDropPosition(SharedCode.Utils.Vector3 playerPosition, SharedCode.Utils.Quaternion playerRotation)
        {
            return __deltaObject__.GetDropPosition(playerPosition, playerRotation);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = ExternalAddress;
                    break;
                case 11:
                    currProperty = Map;
                    break;
                case 12:
                    currProperty = MapInstanceId;
                    break;
                case 13:
                    currProperty = MapChunkId;
                    break;
                case 14:
                    currProperty = State;
                    break;
                case 15:
                    currProperty = ClientNode;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -2073766984;
    }
}