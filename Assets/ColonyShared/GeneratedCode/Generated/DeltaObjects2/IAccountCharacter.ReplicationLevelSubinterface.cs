// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

namespace GeneratedCode.DeltaObjects.ReplicationInterfaces
{
    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.Always, 1424339906, typeof(SharedCode.Entities.IAccountCharacter))]
    public interface IAccountCharacterAlways : SharedCode.EntitySystem.IDeltaObject, IHasIdAlways, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, -1287180879, typeof(SharedCode.Entities.IAccountCharacter))]
    public interface IAccountCharacterClientBroadcast : SharedCode.EntitySystem.IDeltaObject, IHasIdClientBroadcast, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
        System.Threading.Tasks.Task AddReward(ResourceSystem.Aspects.Rewards.RewardDef value);
        System.Threading.Tasks.Task ClearRewards();
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.ClientFullApi, 1242354383, typeof(SharedCode.Entities.IAccountCharacter))]
    public interface IAccountCharacterClientFullApi : SharedCode.EntitySystem.IDeltaObject, IHasIdClientFullApi, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.ClientFull, -318700063, typeof(SharedCode.Entities.IAccountCharacter))]
    public interface IAccountCharacterClientFull : SharedCode.EntitySystem.IDeltaObject, IHasIdClientFull, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
        string CharacterName
        {
            get;
        }

        System.Guid MapId
        {
            get;
        }

        SharedCode.EntitySystem.Delta.IDeltaDictionary<ResourceSystem.Aspects.Rewards.RewardDef, int> CurrentSessionRewards
        {
            get;
        }

        System.Threading.Tasks.Task AddReward(ResourceSystem.Aspects.Rewards.RewardDef value);
        System.Threading.Tasks.Task ClearRewards();
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.ServerApi, -1801113890, typeof(SharedCode.Entities.IAccountCharacter))]
    public interface IAccountCharacterServerApi : SharedCode.EntitySystem.IDeltaObject, IHasIdServerApi, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.Server, 1960422610, typeof(SharedCode.Entities.IAccountCharacter))]
    public interface IAccountCharacterServer : SharedCode.EntitySystem.IDeltaObject, IHasIdServer, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
        string CharacterName
        {
            get;
        }

        System.Guid MapId
        {
            get;
        }

        SharedCode.EntitySystem.Delta.IDeltaDictionary<ResourceSystem.Aspects.Rewards.RewardDef, int> CurrentSessionRewards
        {
            get;
        }

        System.Threading.Tasks.ValueTask<bool> AssignData(System.Guid mapId);
        System.Threading.Tasks.ValueTask<bool> GrantReward(ResourceSystem.Aspects.Rewards.RewardDef value);
        System.Threading.Tasks.Task AddReward(ResourceSystem.Aspects.Rewards.RewardDef value);
        System.Threading.Tasks.Task ClearRewards();
    }
}