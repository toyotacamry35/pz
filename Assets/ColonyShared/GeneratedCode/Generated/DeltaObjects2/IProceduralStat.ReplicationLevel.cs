// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using GeneratedCode.DeltaObjects.ReplicationInterfaces;
using SharedCode.Logging;
using GeneratedCode.Repositories;
using SharedCode.EntitySystem;
using GeneratedCode.EntitySystem;
using SharedCode.EntitySystem.Delta;

namespace GeneratedCode.DeltaObjects
{
    public class ProceduralStatAlways : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IProceduralStatAlways
    {
        public ProceduralStatAlways(Src.Aspects.Impl.Stats.IProceduralStat deltaObject): base(deltaObject)
        {
        }

        Src.Aspects.Impl.Stats.IProceduralStat __deltaObject__
        {
            get
            {
                return (Src.Aspects.Impl.Stats.IProceduralStat)__deltaObjectBase__;
            }
        }

        public override int TypeId => -2106731244;
    }

    public class ProceduralStatClientBroadcast : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IProceduralStatClientBroadcast
    {
        public ProceduralStatClientBroadcast(Src.Aspects.Impl.Stats.IProceduralStat deltaObject): base(deltaObject)
        {
        }

        Src.Aspects.Impl.Stats.IProceduralStat __deltaObject__
        {
            get
            {
                return (Src.Aspects.Impl.Stats.IProceduralStat)__deltaObjectBase__;
            }
        }

        public float ValueCache => __deltaObject__.ValueCache;
        public float LimitMinCache => __deltaObject__.LimitMinCache;
        public float LimitMaxCache => __deltaObject__.LimitMaxCache;
        public Assets.Src.Aspects.Impl.Stats.StatType StatType => __deltaObject__.StatType;
        public System.Threading.Tasks.ValueTask<float> GetValue()
        {
            return __deltaObject__.GetValue();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = ValueCache;
                    break;
                case 11:
                    currProperty = LimitMinCache;
                    break;
                case 12:
                    currProperty = LimitMaxCache;
                    break;
                case 13:
                    currProperty = StatType;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -293793532;
    }

    public class ProceduralStatClientFullApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IProceduralStatClientFullApi
    {
        public ProceduralStatClientFullApi(Src.Aspects.Impl.Stats.IProceduralStat deltaObject): base(deltaObject)
        {
        }

        Src.Aspects.Impl.Stats.IProceduralStat __deltaObject__
        {
            get
            {
                return (Src.Aspects.Impl.Stats.IProceduralStat)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1309066822;
    }

    public class ProceduralStatClientFull : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IProceduralStatClientFull
    {
        public ProceduralStatClientFull(Src.Aspects.Impl.Stats.IProceduralStat deltaObject): base(deltaObject)
        {
        }

        Src.Aspects.Impl.Stats.IProceduralStat __deltaObject__
        {
            get
            {
                return (Src.Aspects.Impl.Stats.IProceduralStat)__deltaObjectBase__;
            }
        }

        public float ValueCache => __deltaObject__.ValueCache;
        public float LimitMinCache => __deltaObject__.LimitMinCache;
        public float LimitMaxCache => __deltaObject__.LimitMaxCache;
        public Assets.Src.Aspects.Impl.Stats.StatType StatType => __deltaObject__.StatType;
        public System.Threading.Tasks.ValueTask<float> GetValue()
        {
            return __deltaObject__.GetValue();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = ValueCache;
                    break;
                case 11:
                    currProperty = LimitMinCache;
                    break;
                case 12:
                    currProperty = LimitMaxCache;
                    break;
                case 13:
                    currProperty = StatType;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -1213035824;
    }

    public class ProceduralStatServerApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IProceduralStatServerApi
    {
        public ProceduralStatServerApi(Src.Aspects.Impl.Stats.IProceduralStat deltaObject): base(deltaObject)
        {
        }

        Src.Aspects.Impl.Stats.IProceduralStat __deltaObject__
        {
            get
            {
                return (Src.Aspects.Impl.Stats.IProceduralStat)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1482015317;
    }

    public class ProceduralStatServer : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IProceduralStatServer
    {
        public ProceduralStatServer(Src.Aspects.Impl.Stats.IProceduralStat deltaObject): base(deltaObject)
        {
        }

        Src.Aspects.Impl.Stats.IProceduralStat __deltaObject__
        {
            get
            {
                return (Src.Aspects.Impl.Stats.IProceduralStat)__deltaObjectBase__;
            }
        }

        public float ValueCache => __deltaObject__.ValueCache;
        public float LimitMinCache => __deltaObject__.LimitMinCache;
        public float LimitMaxCache => __deltaObject__.LimitMaxCache;
        public Assets.Src.Aspects.Impl.Stats.StatType StatType => __deltaObject__.StatType;
        public System.Threading.Tasks.ValueTask<float> GetValue()
        {
            return __deltaObject__.GetValue();
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = ValueCache;
                    break;
                case 11:
                    currProperty = LimitMinCache;
                    break;
                case 12:
                    currProperty = LimitMaxCache;
                    break;
                case 13:
                    currProperty = StatType;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 1595628451;
    }
}