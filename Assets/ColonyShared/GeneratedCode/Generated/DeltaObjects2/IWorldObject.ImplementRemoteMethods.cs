// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

namespace GeneratedCode.DeltaObjects
{
    public interface ILimitedLifetimeImplementRemoteMethods
    {
        System.Threading.Tasks.ValueTask<Assets.ColonyShared.SharedCode.Aspects.WorldObjects.LimitedLifetimeDef> GetLimitedLifetimeDefImpl();
        System.Threading.Tasks.Task<long> GetLifetimeLimitImpl();
        System.Threading.Tasks.Task<SharedCode.EntitySystem.ChainCalls.ChainCancellationToken> StartCountdownImpl();
    }
}

namespace GeneratedCode.DeltaObjects
{
    public interface IOpenMechanicsImplementRemoteMethods
    {
        System.Threading.Tasks.Task FirstOpenedOrLastClosedExternalCallImpl(bool isOpened);
        System.Threading.Tasks.Task<ResourceSystem.Utils.OuterRef> TryOpenImpl(ResourceSystem.Utils.OuterRef outerRef);
        System.Threading.Tasks.Task<bool> TryCloseImpl(ResourceSystem.Utils.OuterRef outerRef);
        System.Threading.Tasks.ValueTask<bool> IsEmptyImpl();
    }
}

namespace GeneratedCode.DeltaObjects
{
    public interface ITraumasImplementRemoteMethods
    {
        System.Threading.Tasks.Task ChangeTraumaPointsImpl(string traumaKey, int delta);
        System.Threading.Tasks.Task StartTraumaImpl(string traumaKey);
        System.Threading.Tasks.Task StopTraumaImpl(string traumaKey);
        System.Threading.Tasks.Task StartTraumaImpl(string traumaKey, Src.Aspects.Impl.Stats.ITraumaGiver traumaGiver);
        System.Threading.Tasks.Task StopTraumaImpl(string traumaKey, Src.Aspects.Impl.Stats.ITraumaGiver traumaGiver);
        System.Threading.Tasks.Task SuspendTraumaImpl(string traumaKey, Src.Aspects.Impl.Stats.ITraumaGiver traumaGiver);
        System.Threading.Tasks.ValueTask<bool> RemoveTraumaImpl(string traumaKey, Src.Aspects.Impl.Stats.ITraumaGiver traumaGiver);
        System.Threading.Tasks.ValueTask<bool> HasActiveTraumasImpl(string[] traumas);
        System.Threading.Tasks.Task<bool> RecalculateTraumasImpl();
    }
}

namespace GeneratedCode.DeltaObjects
{
    public interface IOwnerInformationImplementRemoteMethods
    {
        System.Threading.Tasks.Task SetOwnerImpl(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> owner);
        System.Threading.Tasks.Task SetLockPredicateImpl(ResourceSystem.Aspects.AccessRights.AccessPredicateDef accessPredicate);
    }
}

namespace GeneratedCode.DeltaObjects
{
    public interface ILocomotionOwnerImplementRemoteMethods
    {
        System.Threading.Tasks.ValueTask<bool> IsValidImpl();
        System.Threading.Tasks.ValueTask SetLocomotionImpl(SharedCode.Entities.Engine.ILocomotionEngineAgent locomotion, SharedCode.Entities.Engine.IDirectMotionProducer directMotionProducer, SharedCode.Entities.Engine.IGuideProvider guideProvider);
    }
}