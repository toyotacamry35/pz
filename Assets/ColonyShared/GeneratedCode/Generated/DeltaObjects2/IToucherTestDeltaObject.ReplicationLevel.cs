// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using GeneratedCode.DeltaObjects.ReplicationInterfaces;
using SharedCode.Logging;
using GeneratedCode.Repositories;
using SharedCode.EntitySystem;
using GeneratedCode.EntitySystem;
using SharedCode.EntitySystem.Delta;

namespace GeneratedCode.DeltaObjects
{
    public class ToucherTestDeltaObjectAlways : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IToucherTestDeltaObjectAlways
    {
        public ToucherTestDeltaObjectAlways(GeneratedCode.EntityModel.Test.IToucherTestDeltaObject deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Test.IToucherTestDeltaObject __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Test.IToucherTestDeltaObject)__deltaObjectBase__;
            }
        }

        public override int TypeId => 1525574533;
    }

    public class ToucherTestDeltaObjectClientBroadcast : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IToucherTestDeltaObjectClientBroadcast
    {
        public ToucherTestDeltaObjectClientBroadcast(GeneratedCode.EntityModel.Test.IToucherTestDeltaObject deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Test.IToucherTestDeltaObject __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Test.IToucherTestDeltaObject)__deltaObjectBase__;
            }
        }

        public int IntProperty => __deltaObject__.IntProperty;
        public System.Threading.Tasks.Task SetIntProperty(int i)
        {
            return __deltaObject__.SetIntProperty(i);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = IntProperty;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 162587392;
    }

    public class ToucherTestDeltaObjectClientFullApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IToucherTestDeltaObjectClientFullApi
    {
        public ToucherTestDeltaObjectClientFullApi(GeneratedCode.EntityModel.Test.IToucherTestDeltaObject deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Test.IToucherTestDeltaObject __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Test.IToucherTestDeltaObject)__deltaObjectBase__;
            }
        }

        public override int TypeId => 894459383;
    }

    public class ToucherTestDeltaObjectClientFull : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IToucherTestDeltaObjectClientFull
    {
        public ToucherTestDeltaObjectClientFull(GeneratedCode.EntityModel.Test.IToucherTestDeltaObject deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Test.IToucherTestDeltaObject __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Test.IToucherTestDeltaObject)__deltaObjectBase__;
            }
        }

        public int IntProperty => __deltaObject__.IntProperty;
        public System.Threading.Tasks.Task SetIntProperty(int i)
        {
            return __deltaObject__.SetIntProperty(i);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = IntProperty;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 1378470575;
    }

    public class ToucherTestDeltaObjectServerApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IToucherTestDeltaObjectServerApi
    {
        public ToucherTestDeltaObjectServerApi(GeneratedCode.EntityModel.Test.IToucherTestDeltaObject deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Test.IToucherTestDeltaObject __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Test.IToucherTestDeltaObject)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1279456777;
    }

    public class ToucherTestDeltaObjectServer : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IToucherTestDeltaObjectServer
    {
        public ToucherTestDeltaObjectServer(GeneratedCode.EntityModel.Test.IToucherTestDeltaObject deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Test.IToucherTestDeltaObject __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Test.IToucherTestDeltaObject)__deltaObjectBase__;
            }
        }

        public int IntProperty => __deltaObject__.IntProperty;
        public System.Threading.Tasks.Task SetIntProperty(int i)
        {
            return __deltaObject__.SetIntProperty(i);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = IntProperty;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -1431004783;
    }
}