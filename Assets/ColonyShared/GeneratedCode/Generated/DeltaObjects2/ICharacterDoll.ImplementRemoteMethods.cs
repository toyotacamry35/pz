// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

namespace GeneratedCode.DeltaObjects
{
    public interface ICharacterDollImplementRemoteMethods
    {
        System.Threading.Tasks.Task<bool> CanAddUsedSlotImpl(Assets.Src.ResourcesSystem.Base.ResourceIDFull dollSlotRes);
        System.Threading.Tasks.Task<bool> AddUsedSlotImpl(Assets.Src.ResourcesSystem.Base.ResourceIDFull dollSlotRes);
        System.Threading.Tasks.Task<bool> RemoveUsedSlotImpl(Assets.Src.ResourcesSystem.Base.ResourceIDFull dollSlotRes);
        System.Threading.Tasks.ValueTask<bool> AddBlockedForUsageSlotsImpl(SharedCode.Aspects.Item.Templates.SlotDef[] slots);
        System.Threading.Tasks.ValueTask<bool> RemoveBlockedForUsageSlotsImpl(SharedCode.Aspects.Item.Templates.SlotDef[] slots);
        System.Threading.Tasks.Task<float> GetMaxWeigthImpl();
        System.Threading.Tasks.Task<float> GetTotalWeightImpl();
        System.Threading.Tasks.Task<int> GetMaxStackForSlotImpl(int destinationSlot);
        System.Threading.Tasks.Task<bool> IgnoreMaxStackImpl();
        System.Threading.Tasks.Task<bool> CanAutoselectEmptySlotsForAddStacksImpl();
        System.Threading.Tasks.Task<bool> CanAddImpl(SharedCode.Entities.IItem item, int index, int count, bool manual);
        System.Threading.Tasks.Task<bool> CanRemoveImpl(SharedCode.Entities.IItem item, int index, int count, bool manual);
        System.Threading.Tasks.Task OnItemAddedImpl(SharedCode.Entities.IItem item, int index, int count, bool manual);
        System.Threading.Tasks.Task<SharedCode.EntitySystem.PropertyAddress> OnBeforeItemRemovedImpl(SharedCode.Entities.IItem item, int index, int count, bool manual);
    }
}