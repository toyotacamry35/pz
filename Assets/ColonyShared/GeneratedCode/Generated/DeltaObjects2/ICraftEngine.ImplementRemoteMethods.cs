// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

namespace GeneratedCode.DeltaObjects
{
    public interface ICraftEngineImplementRemoteMethods
    {
        System.Threading.Tasks.Task SetResultContainerAddressImpl(SharedCode.EntitySystem.PropertyAddress resultContainerAddress);
        System.Threading.Tasks.Task UpdateFuelTimeImpl();
        System.Threading.Tasks.Task UpdateCraftingTimeImpl();
        System.Threading.Tasks.Task UpdateRepairTimeImpl(SharedCode.EntitySystem.PropertyAddress itemAddress, int itemIndex);
        System.Threading.Tasks.Task<bool> CanRunImpl();
        System.Threading.Tasks.Task<SharedCode.Entities.Engine.CraftOperationResult> RunCraftImpl();
        System.Threading.Tasks.Task StopCraftImpl();
        System.Threading.Tasks.Task<SharedCode.Entities.Engine.CraftOperationResult> CraftImpl(Assets.ColonyShared.SharedCode.Aspects.Craft.CraftRecipeDef recipe, int variantIdx, int count, int[] mandatorySlotPermutation, int[] optionalSlotPermutation, SharedCode.EntitySystem.PropertyAddress inventoryAddress, SharedCode.EntitySystem.PropertyAddress inventoryAddress2);
        System.Threading.Tasks.Task<SharedCode.Entities.Engine.CraftOperationResult> RepairImpl(SharedCode.EntitySystem.PropertyAddress itemAddress, int itemIndex, int recipeIndex, int variantIdx, int[] mandatorySlotPermutation, int[] optionalSlotPermutation, SharedCode.EntitySystem.PropertyAddress fromInventoryAddress, SharedCode.EntitySystem.PropertyAddress fromInventoryAddress2);
        System.Threading.Tasks.Task<SharedCode.Entities.Engine.CraftOperationResult> RemoveCraftImpl(int recipeIndex);
        System.Threading.Tasks.Task<SharedCode.Entities.Engine.CraftOperationResult> SwapCraftImpl(int index1, int index2);
        System.Threading.Tasks.Task<SharedCode.Entities.Engine.CraftOperationResult> StopCraftWithWorkbenchImpl(SharedCode.Aspects.Item.Templates.WorkbenchTypeDef workbenchType);
        System.Threading.Tasks.Task<SharedCode.Entities.Engine.CraftOperationResult> ContinueCraftWithWorkbenchImpl(SharedCode.Aspects.Item.Templates.WorkbenchTypeDef workbenchType);
    }
}