// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

namespace GeneratedCode.DeltaObjects.ReplicationInterfaces
{
    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.Always, -244085424, typeof(SharedCode.DeltaObjects.ICharacterDoll))]
    public interface ICharacterDollAlways : SharedCode.EntitySystem.IDeltaObject, IItemsContainerAlways, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, 2008282492, typeof(SharedCode.DeltaObjects.ICharacterDoll))]
    public interface ICharacterDollClientBroadcast : SharedCode.EntitySystem.IDeltaObject, IItemsContainerClientBroadcast, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
        SharedCode.EntitySystem.Delta.IDeltaList<Assets.Src.ResourcesSystem.Base.ResourceIDFull> UsedSlots
        {
            get;
        }
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.ClientFullApi, 687771331, typeof(SharedCode.DeltaObjects.ICharacterDoll))]
    public interface ICharacterDollClientFullApi : SharedCode.EntitySystem.IDeltaObject, IItemsContainerClientFullApi, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.ClientFull, 2089205530, typeof(SharedCode.DeltaObjects.ICharacterDoll))]
    public interface ICharacterDollClientFull : SharedCode.EntitySystem.IDeltaObject, IItemsContainerClientFull, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
        SharedCode.EntitySystem.Delta.IDeltaList<int> BlockedSlotsId
        {
            get;
        }

        SharedCode.EntitySystem.Delta.IDeltaList<Assets.Src.ResourcesSystem.Base.ResourceIDFull> UsedSlots
        {
            get;
        }
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.ServerApi, 2132119843, typeof(SharedCode.DeltaObjects.ICharacterDoll))]
    public interface ICharacterDollServerApi : SharedCode.EntitySystem.IDeltaObject, IItemsContainerServerApi, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.Server, -1832105168, typeof(SharedCode.DeltaObjects.ICharacterDoll))]
    public interface ICharacterDollServer : SharedCode.EntitySystem.IDeltaObject, IItemsContainerServer, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
        SharedCode.EntitySystem.Delta.IDeltaList<int> BlockedSlotsId
        {
            get;
        }

        SharedCode.EntitySystem.Delta.IDeltaList<Assets.Src.ResourcesSystem.Base.ResourceIDFull> UsedSlots
        {
            get;
        }

        System.Threading.Tasks.Task<bool> CanAddUsedSlot(Assets.Src.ResourcesSystem.Base.ResourceIDFull dollSlotRes);
        System.Threading.Tasks.Task<bool> AddUsedSlot(Assets.Src.ResourcesSystem.Base.ResourceIDFull dollSlotRes);
        System.Threading.Tasks.Task<bool> RemoveUsedSlot(Assets.Src.ResourcesSystem.Base.ResourceIDFull dollSlotRes);
        System.Threading.Tasks.ValueTask<bool> AddBlockedForUsageSlots(SharedCode.Aspects.Item.Templates.SlotDef[] slots);
        System.Threading.Tasks.ValueTask<bool> RemoveBlockedForUsageSlots(SharedCode.Aspects.Item.Templates.SlotDef[] slots);
    }
}