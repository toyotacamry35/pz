// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using System;
using SharedCode.Entities.Service;
using SharedCode.EntitySystem.ChainCalls;
using SharedCode.Logging;
using SharedCode.OurSimpleIoC;
using SharedCode.Serializers;
using SharedCode.Utils;
using System.Linq;
using System.Collections.Generic;
using System.CodeDom.Compiler;
using GeneratedCode.DeltaObjects.Chain;

[GeneratedCode("CodeGen", "1.0")]
public class WorldSpaceServiceEntityAlwaysChainProxy : IChainedEntity
{
    private WorldSpaceServiceEntityChainProxy __chain__;
    public WorldSpaceServiceEntityAlwaysChainProxy(WorldSpaceServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public WorldSpaceServiceEntityAlwaysChainProxy Teleport(ChainArgument<System.Guid> oldRepositoryGuid)
    {
        __chain__.Teleport(oldRepositoryGuid);
        return this;
    }

    public WorldSpaceServiceEntityAlwaysChainProxy PrepareStaticsFor(ChainArgument<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>> sceneEntity)
    {
        __chain__.PrepareStaticsFor(sceneEntity);
        return this;
    }

    public WorldSpaceServiceEntityAlwaysChainProxy SpawnEntity(ChainArgument<System.Guid> staticIdFromExport, ChainArgument<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>> ent, ChainArgument<SharedCode.Utils.Vector3> pos, ChainArgument<SharedCode.Utils.Quaternion> rot, ChainArgument<GeneratedCode.MapSystem.MapOwner> mapOwner, ChainArgument<System.Guid> spawner, ChainArgument<SharedCode.Entities.GameObjectEntities.IEntityObjectDef> def, ChainArgument<SharedCode.Entities.GameObjectEntities.SpawnPointTypeDef> point, ChainArgument<SharedCode.Entities.GameObjectEntities.ScenicEntityDef> scenicEntityDef, ChainArgument<Scripting.ScriptingContext> ctx)
    {
        __chain__.SpawnEntity(staticIdFromExport, ent, pos, rot, mapOwner, spawner, def, point, scenicEntityDef, ctx);
        return this;
    }

    public WorldSpaceServiceEntityAlwaysChainProxy DespawnEntity(ChainArgument<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>> ent)
    {
        __chain__.DespawnEntity(ent);
        return this;
    }

    public WorldSpaceServiceEntityAlwaysChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public WorldSpaceServiceEntityAlwaysChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public WorldSpaceServiceEntityAlwaysChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static WorldSpaceServiceEntityAlwaysChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpaceServiceEntityAlways entity)
    {
        return new WorldSpaceServiceEntityAlwaysChainProxy(new WorldSpaceServiceEntityChainProxy((SharedCode.Entities.Service.IWorldSpaceServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static WorldSpaceServiceEntityAlwaysChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpaceServiceEntityAlways entity, IChainedEntity fromChain)
    {
        return new WorldSpaceServiceEntityAlwaysChainProxy(new WorldSpaceServiceEntityChainProxy((SharedCode.Entities.Service.IWorldSpaceServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class WorldSpaceServiceEntityClientBroadcastChainProxy : IChainedEntity
{
    private WorldSpaceServiceEntityChainProxy __chain__;
    public WorldSpaceServiceEntityClientBroadcastChainProxy(WorldSpaceServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public WorldSpaceServiceEntityClientBroadcastChainProxy Login(ChainArgument<Assets.Src.Aspects.Doings.BotActionDef> botDef, ChainArgument<string> spawnPointPath, ChainArgument<System.Guid> userRepository, ChainArgument<GeneratedCode.MapSystem.MapOwner> mapOwner)
    {
        __chain__.Login(botDef, spawnPointPath, userRepository, mapOwner);
        return this;
    }

    public WorldSpaceServiceEntityClientBroadcastChainProxy Teleport(ChainArgument<System.Guid> oldRepositoryGuid)
    {
        __chain__.Teleport(oldRepositoryGuid);
        return this;
    }

    public WorldSpaceServiceEntityClientBroadcastChainProxy PrepareStaticsFor(ChainArgument<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>> sceneEntity)
    {
        __chain__.PrepareStaticsFor(sceneEntity);
        return this;
    }

    public WorldSpaceServiceEntityClientBroadcastChainProxy SpawnEntity(ChainArgument<System.Guid> staticIdFromExport, ChainArgument<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>> ent, ChainArgument<SharedCode.Utils.Vector3> pos, ChainArgument<SharedCode.Utils.Quaternion> rot, ChainArgument<GeneratedCode.MapSystem.MapOwner> mapOwner, ChainArgument<System.Guid> spawner, ChainArgument<SharedCode.Entities.GameObjectEntities.IEntityObjectDef> def, ChainArgument<SharedCode.Entities.GameObjectEntities.SpawnPointTypeDef> point, ChainArgument<SharedCode.Entities.GameObjectEntities.ScenicEntityDef> scenicEntityDef, ChainArgument<Scripting.ScriptingContext> ctx)
    {
        __chain__.SpawnEntity(staticIdFromExport, ent, pos, rot, mapOwner, spawner, def, point, scenicEntityDef, ctx);
        return this;
    }

    public WorldSpaceServiceEntityClientBroadcastChainProxy DespawnEntity(ChainArgument<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>> ent)
    {
        __chain__.DespawnEntity(ent);
        return this;
    }

    public WorldSpaceServiceEntityClientBroadcastChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public WorldSpaceServiceEntityClientBroadcastChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public WorldSpaceServiceEntityClientBroadcastChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static WorldSpaceServiceEntityClientBroadcastChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpaceServiceEntityClientBroadcast entity)
    {
        return new WorldSpaceServiceEntityClientBroadcastChainProxy(new WorldSpaceServiceEntityChainProxy((SharedCode.Entities.Service.IWorldSpaceServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static WorldSpaceServiceEntityClientBroadcastChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpaceServiceEntityClientBroadcast entity, IChainedEntity fromChain)
    {
        return new WorldSpaceServiceEntityClientBroadcastChainProxy(new WorldSpaceServiceEntityChainProxy((SharedCode.Entities.Service.IWorldSpaceServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class WorldSpaceServiceEntityClientFullApiChainProxy : IChainedEntity
{
    private WorldSpaceServiceEntityChainProxy __chain__;
    public WorldSpaceServiceEntityClientFullApiChainProxy(WorldSpaceServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public WorldSpaceServiceEntityClientFullApiChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public WorldSpaceServiceEntityClientFullApiChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public WorldSpaceServiceEntityClientFullApiChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static WorldSpaceServiceEntityClientFullApiChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpaceServiceEntityClientFullApi entity)
    {
        return new WorldSpaceServiceEntityClientFullApiChainProxy(new WorldSpaceServiceEntityChainProxy((SharedCode.Entities.Service.IWorldSpaceServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static WorldSpaceServiceEntityClientFullApiChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpaceServiceEntityClientFullApi entity, IChainedEntity fromChain)
    {
        return new WorldSpaceServiceEntityClientFullApiChainProxy(new WorldSpaceServiceEntityChainProxy((SharedCode.Entities.Service.IWorldSpaceServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class WorldSpaceServiceEntityClientFullChainProxy : IChainedEntity
{
    private WorldSpaceServiceEntityChainProxy __chain__;
    public WorldSpaceServiceEntityClientFullChainProxy(WorldSpaceServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public WorldSpaceServiceEntityClientFullChainProxy Respawn(ChainArgument<System.Guid> charId, ChainArgument<bool> checkBakens, ChainArgument<bool> anyCommonBaken, ChainArgument<System.Guid> commonBakenId)
    {
        __chain__.Respawn(charId, checkBakens, anyCommonBaken, commonBakenId);
        return this;
    }

    public WorldSpaceServiceEntityClientFullChainProxy Login(ChainArgument<Assets.Src.Aspects.Doings.BotActionDef> botDef, ChainArgument<string> spawnPointPath, ChainArgument<System.Guid> userRepository, ChainArgument<GeneratedCode.MapSystem.MapOwner> mapOwner)
    {
        __chain__.Login(botDef, spawnPointPath, userRepository, mapOwner);
        return this;
    }

    public WorldSpaceServiceEntityClientFullChainProxy Teleport(ChainArgument<System.Guid> oldRepositoryGuid)
    {
        __chain__.Teleport(oldRepositoryGuid);
        return this;
    }

    public WorldSpaceServiceEntityClientFullChainProxy PrepareStaticsFor(ChainArgument<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>> sceneEntity)
    {
        __chain__.PrepareStaticsFor(sceneEntity);
        return this;
    }

    public WorldSpaceServiceEntityClientFullChainProxy SpawnEntity(ChainArgument<System.Guid> staticIdFromExport, ChainArgument<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>> ent, ChainArgument<SharedCode.Utils.Vector3> pos, ChainArgument<SharedCode.Utils.Quaternion> rot, ChainArgument<GeneratedCode.MapSystem.MapOwner> mapOwner, ChainArgument<System.Guid> spawner, ChainArgument<SharedCode.Entities.GameObjectEntities.IEntityObjectDef> def, ChainArgument<SharedCode.Entities.GameObjectEntities.SpawnPointTypeDef> point, ChainArgument<SharedCode.Entities.GameObjectEntities.ScenicEntityDef> scenicEntityDef, ChainArgument<Scripting.ScriptingContext> ctx)
    {
        __chain__.SpawnEntity(staticIdFromExport, ent, pos, rot, mapOwner, spawner, def, point, scenicEntityDef, ctx);
        return this;
    }

    public WorldSpaceServiceEntityClientFullChainProxy DespawnEntity(ChainArgument<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>> ent)
    {
        __chain__.DespawnEntity(ent);
        return this;
    }

    public WorldSpaceServiceEntityClientFullChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public WorldSpaceServiceEntityClientFullChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public WorldSpaceServiceEntityClientFullChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static WorldSpaceServiceEntityClientFullChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpaceServiceEntityClientFull entity)
    {
        return new WorldSpaceServiceEntityClientFullChainProxy(new WorldSpaceServiceEntityChainProxy((SharedCode.Entities.Service.IWorldSpaceServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static WorldSpaceServiceEntityClientFullChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpaceServiceEntityClientFull entity, IChainedEntity fromChain)
    {
        return new WorldSpaceServiceEntityClientFullChainProxy(new WorldSpaceServiceEntityChainProxy((SharedCode.Entities.Service.IWorldSpaceServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class WorldSpaceServiceEntityServerApiChainProxy : IChainedEntity
{
    private WorldSpaceServiceEntityChainProxy __chain__;
    public WorldSpaceServiceEntityServerApiChainProxy(WorldSpaceServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public WorldSpaceServiceEntityServerApiChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public WorldSpaceServiceEntityServerApiChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public WorldSpaceServiceEntityServerApiChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static WorldSpaceServiceEntityServerApiChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpaceServiceEntityServerApi entity)
    {
        return new WorldSpaceServiceEntityServerApiChainProxy(new WorldSpaceServiceEntityChainProxy((SharedCode.Entities.Service.IWorldSpaceServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static WorldSpaceServiceEntityServerApiChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpaceServiceEntityServerApi entity, IChainedEntity fromChain)
    {
        return new WorldSpaceServiceEntityServerApiChainProxy(new WorldSpaceServiceEntityChainProxy((SharedCode.Entities.Service.IWorldSpaceServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class WorldSpaceServiceEntityServerChainProxy : IChainedEntity
{
    private WorldSpaceServiceEntityChainProxy __chain__;
    public WorldSpaceServiceEntityServerChainProxy(WorldSpaceServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public WorldSpaceServiceEntityServerChainProxy GetWorldNodeId(ChainArgument<ResourceSystem.Utils.OuterRef> entityRef)
    {
        __chain__.GetWorldNodeId(entityRef);
        return this;
    }

    public WorldSpaceServiceEntityServerChainProxy AddWorldObject(ChainArgument<int> typeId, ChainArgument<System.Guid> entityId)
    {
        __chain__.AddWorldObject(typeId, entityId);
        return this;
    }

    public WorldSpaceServiceEntityServerChainProxy RemoveWorldObject(ChainArgument<int> typeId, ChainArgument<System.Guid> entityId)
    {
        __chain__.RemoveWorldObject(typeId, entityId);
        return this;
    }

    public WorldSpaceServiceEntityServerChainProxy AddClient(ChainArgument<System.Guid> characterId, ChainArgument<System.Guid> repositoryId)
    {
        __chain__.AddClient(characterId, repositoryId);
        return this;
    }

    public WorldSpaceServiceEntityServerChainProxy GetWorldBoxIdToDrop(ChainArgument<SharedCode.Utils.Vector3> position, ChainArgument<System.Guid> characterOwnerId)
    {
        __chain__.GetWorldBoxIdToDrop(position, characterOwnerId);
        return this;
    }

    public WorldSpaceServiceEntityServerChainProxy GetFencePlaceId(ChainArgument<SharedCode.Utils.Vector3> position, ChainArgument<bool> onlyExisted)
    {
        __chain__.GetFencePlaceId(position, onlyExisted);
        return this;
    }

    public WorldSpaceServiceEntityServerChainProxy OnVisibilityChanged(ChainArgument<int> subjectTypeId, ChainArgument<System.Guid> subjectEntityId, ChainArgument<System.Collections.Generic.List<(int, System.Guid)>> addedObjects, ChainArgument<System.Collections.Generic.List<(int, System.Guid)>> removedObjects)
    {
        __chain__.OnVisibilityChanged(subjectTypeId, subjectEntityId, addedObjects, removedObjects);
        return this;
    }

    public WorldSpaceServiceEntityServerChainProxy EnableReplications(ChainArgument<int> subjectTypeId, ChainArgument<System.Guid> subjectEntityId, ChainArgument<bool> enable)
    {
        __chain__.EnableReplications(subjectTypeId, subjectEntityId, enable);
        return this;
    }

    public WorldSpaceServiceEntityServerChainProxy GetCCU()
    {
        __chain__.GetCCU();
        return this;
    }

    public WorldSpaceServiceEntityServerChainProxy SpawnNewBot(ChainArgument<string> spawnPointTypePath, ChainArgument<System.Collections.Generic.List<System.Guid>> botIds, ChainArgument<System.Guid> userId)
    {
        __chain__.SpawnNewBot(spawnPointTypePath, botIds, userId);
        return this;
    }

    public WorldSpaceServiceEntityServerChainProxy Respawn(ChainArgument<System.Guid> charId, ChainArgument<bool> checkBakens, ChainArgument<bool> anyCommonBaken, ChainArgument<System.Guid> commonBakenId)
    {
        __chain__.Respawn(charId, checkBakens, anyCommonBaken, commonBakenId);
        return this;
    }

    public WorldSpaceServiceEntityServerChainProxy Login(ChainArgument<Assets.Src.Aspects.Doings.BotActionDef> botDef, ChainArgument<string> spawnPointPath, ChainArgument<System.Guid> userRepository, ChainArgument<GeneratedCode.MapSystem.MapOwner> mapOwner)
    {
        __chain__.Login(botDef, spawnPointPath, userRepository, mapOwner);
        return this;
    }

    public WorldSpaceServiceEntityServerChainProxy Logout(ChainArgument<System.Guid> userId, ChainArgument<bool> terminal)
    {
        __chain__.Logout(userId, terminal);
        return this;
    }

    public WorldSpaceServiceEntityServerChainProxy LogoutAll()
    {
        __chain__.LogoutAll();
        return this;
    }

    public WorldSpaceServiceEntityServerChainProxy ConnectStreamingRepo(ChainArgument<System.Guid> repo)
    {
        __chain__.ConnectStreamingRepo(repo);
        return this;
    }

    public WorldSpaceServiceEntityServerChainProxy DisconnectStreamingRepo(ChainArgument<System.Guid> repo)
    {
        __chain__.DisconnectStreamingRepo(repo);
        return this;
    }

    public WorldSpaceServiceEntityServerChainProxy Teleport(ChainArgument<System.Guid> oldRepositoryGuid)
    {
        __chain__.Teleport(oldRepositoryGuid);
        return this;
    }

    public WorldSpaceServiceEntityServerChainProxy PrepareStaticsFor(ChainArgument<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>> sceneEntity)
    {
        __chain__.PrepareStaticsFor(sceneEntity);
        return this;
    }

    public WorldSpaceServiceEntityServerChainProxy SpawnEntity(ChainArgument<System.Guid> staticIdFromExport, ChainArgument<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>> ent, ChainArgument<SharedCode.Utils.Vector3> pos, ChainArgument<SharedCode.Utils.Quaternion> rot, ChainArgument<GeneratedCode.MapSystem.MapOwner> mapOwner, ChainArgument<System.Guid> spawner, ChainArgument<SharedCode.Entities.GameObjectEntities.IEntityObjectDef> def, ChainArgument<SharedCode.Entities.GameObjectEntities.SpawnPointTypeDef> point, ChainArgument<SharedCode.Entities.GameObjectEntities.ScenicEntityDef> scenicEntityDef, ChainArgument<Scripting.ScriptingContext> ctx)
    {
        __chain__.SpawnEntity(staticIdFromExport, ent, pos, rot, mapOwner, spawner, def, point, scenicEntityDef, ctx);
        return this;
    }

    public WorldSpaceServiceEntityServerChainProxy DespawnEntity(ChainArgument<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>> ent)
    {
        __chain__.DespawnEntity(ent);
        return this;
    }

    public WorldSpaceServiceEntityServerChainProxy GetPositionToSpawnAt(ChainArgument<System.Guid> charId, ChainArgument<bool> checkBakens, ChainArgument<bool> anyCommonBaken, ChainArgument<System.Guid> commonBakenId, ChainArgument<SharedCode.Entities.GameObjectEntities.SpawnPointTypeDef> overrideAllowedPointType)
    {
        __chain__.GetPositionToSpawnAt(charId, checkBakens, anyCommonBaken, commonBakenId, overrideAllowedPointType);
        return this;
    }

    public WorldSpaceServiceEntityServerChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public WorldSpaceServiceEntityServerChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public WorldSpaceServiceEntityServerChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static WorldSpaceServiceEntityServerChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpaceServiceEntityServer entity)
    {
        return new WorldSpaceServiceEntityServerChainProxy(new WorldSpaceServiceEntityChainProxy((SharedCode.Entities.Service.IWorldSpaceServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static WorldSpaceServiceEntityServerChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpaceServiceEntityServer entity, IChainedEntity fromChain)
    {
        return new WorldSpaceServiceEntityServerChainProxy(new WorldSpaceServiceEntityChainProxy((SharedCode.Entities.Service.IWorldSpaceServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}