// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using GeneratedCode.DeltaObjects.ReplicationInterfaces;
using SharedCode.Logging;
using GeneratedCode.Repositories;
using SharedCode.EntitySystem;
using GeneratedCode.EntitySystem;
using SharedCode.EntitySystem.Delta;

namespace GeneratedCode.DeltaObjects
{
    public class AutoAddToWorldSpaceAlways : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IAutoAddToWorldSpaceAlways
    {
        public AutoAddToWorldSpaceAlways(SharedCode.Entities.IAutoAddToWorldSpace deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.IAutoAddToWorldSpace __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.IAutoAddToWorldSpace)__deltaObjectBase__;
            }
        }

        public override int TypeId => 828352693;
    }

    public class AutoAddToWorldSpaceClientBroadcast : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IAutoAddToWorldSpaceClientBroadcast
    {
        public AutoAddToWorldSpaceClientBroadcast(SharedCode.Entities.IAutoAddToWorldSpace deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.IAutoAddToWorldSpace __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.IAutoAddToWorldSpace)__deltaObjectBase__;
            }
        }

        public override int TypeId => 459130382;
    }

    public class AutoAddToWorldSpaceClientFullApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IAutoAddToWorldSpaceClientFullApi
    {
        public AutoAddToWorldSpaceClientFullApi(SharedCode.Entities.IAutoAddToWorldSpace deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.IAutoAddToWorldSpace __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.IAutoAddToWorldSpace)__deltaObjectBase__;
            }
        }

        public override int TypeId => 1007416546;
    }

    public class AutoAddToWorldSpaceClientFull : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IAutoAddToWorldSpaceClientFull
    {
        public AutoAddToWorldSpaceClientFull(SharedCode.Entities.IAutoAddToWorldSpace deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.IAutoAddToWorldSpace __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.IAutoAddToWorldSpace)__deltaObjectBase__;
            }
        }

        public override int TypeId => 1159196306;
    }

    public class AutoAddToWorldSpaceServerApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IAutoAddToWorldSpaceServerApi
    {
        public AutoAddToWorldSpaceServerApi(SharedCode.Entities.IAutoAddToWorldSpace deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.IAutoAddToWorldSpace __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.IAutoAddToWorldSpace)__deltaObjectBase__;
            }
        }

        public override int TypeId => -864082565;
    }

    public class AutoAddToWorldSpaceServer : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IAutoAddToWorldSpaceServer
    {
        public AutoAddToWorldSpaceServer(SharedCode.Entities.IAutoAddToWorldSpace deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.IAutoAddToWorldSpace __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.IAutoAddToWorldSpace)__deltaObjectBase__;
            }
        }

        public override int TypeId => 1044358249;
    }
}

namespace GeneratedCode.DeltaObjects
{
    public class LimitedLifetimeAlways : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILimitedLifetimeAlways
    {
        public LimitedLifetimeAlways(SharedCode.Entities.ILimitedLifetime deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.ILimitedLifetime __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.ILimitedLifetime)__deltaObjectBase__;
            }
        }

        public override int TypeId => 575006458;
    }

    public class LimitedLifetimeClientBroadcast : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILimitedLifetimeClientBroadcast
    {
        public LimitedLifetimeClientBroadcast(SharedCode.Entities.ILimitedLifetime deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.ILimitedLifetime __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.ILimitedLifetime)__deltaObjectBase__;
            }
        }

        public override int TypeId => 1956419396;
    }

    public class LimitedLifetimeClientFullApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILimitedLifetimeClientFullApi
    {
        public LimitedLifetimeClientFullApi(SharedCode.Entities.ILimitedLifetime deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.ILimitedLifetime __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.ILimitedLifetime)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1283124037;
    }

    public class LimitedLifetimeClientFull : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILimitedLifetimeClientFull
    {
        public LimitedLifetimeClientFull(SharedCode.Entities.ILimitedLifetime deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.ILimitedLifetime __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.ILimitedLifetime)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1873452271;
    }

    public class LimitedLifetimeServerApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILimitedLifetimeServerApi
    {
        public LimitedLifetimeServerApi(SharedCode.Entities.ILimitedLifetime deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.ILimitedLifetime __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.ILimitedLifetime)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1971440098;
    }

    public class LimitedLifetimeServer : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILimitedLifetimeServer
    {
        public LimitedLifetimeServer(SharedCode.Entities.ILimitedLifetime deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.ILimitedLifetime __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.ILimitedLifetime)__deltaObjectBase__;
            }
        }

        public override int TypeId => 485722116;
    }
}

namespace GeneratedCode.DeltaObjects
{
    public class OpenMechanicsAlways : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IOpenMechanicsAlways
    {
        public OpenMechanicsAlways(SharedCode.Entities.IOpenMechanics deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.IOpenMechanics __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.IOpenMechanics)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1956195820;
    }

    public class OpenMechanicsClientBroadcast : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IOpenMechanicsClientBroadcast
    {
        public OpenMechanicsClientBroadcast(SharedCode.Entities.IOpenMechanics deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.IOpenMechanics __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.IOpenMechanics)__deltaObjectBase__;
            }
        }

        public bool IsOpen => __deltaObject__.IsOpen;
        public System.Threading.Tasks.Task<ResourceSystem.Utils.OuterRef> TryOpen(ResourceSystem.Utils.OuterRef outerRef)
        {
            return __deltaObject__.TryOpen(outerRef);
        }

        public System.Threading.Tasks.Task<bool> TryClose(ResourceSystem.Utils.OuterRef outerRef)
        {
            return __deltaObject__.TryClose(outerRef);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = IsOpen;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 677204464;
    }

    public class OpenMechanicsClientFullApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IOpenMechanicsClientFullApi
    {
        public OpenMechanicsClientFullApi(SharedCode.Entities.IOpenMechanics deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.IOpenMechanics __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.IOpenMechanics)__deltaObjectBase__;
            }
        }

        public override int TypeId => 1616622640;
    }

    public class OpenMechanicsClientFull : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IOpenMechanicsClientFull
    {
        public OpenMechanicsClientFull(SharedCode.Entities.IOpenMechanics deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.IOpenMechanics __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.IOpenMechanics)__deltaObjectBase__;
            }
        }

        public bool IsOpen => __deltaObject__.IsOpen;
        public System.Threading.Tasks.Task<ResourceSystem.Utils.OuterRef> TryOpen(ResourceSystem.Utils.OuterRef outerRef)
        {
            return __deltaObject__.TryOpen(outerRef);
        }

        public System.Threading.Tasks.Task<bool> TryClose(ResourceSystem.Utils.OuterRef outerRef)
        {
            return __deltaObject__.TryClose(outerRef);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = IsOpen;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -312026352;
    }

    public class OpenMechanicsServerApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IOpenMechanicsServerApi
    {
        public OpenMechanicsServerApi(SharedCode.Entities.IOpenMechanics deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.IOpenMechanics __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.IOpenMechanics)__deltaObjectBase__;
            }
        }

        public override int TypeId => 312946302;
    }

    public class OpenMechanicsServer : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IOpenMechanicsServer
    {
        public OpenMechanicsServer(SharedCode.Entities.IOpenMechanics deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.IOpenMechanics __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.IOpenMechanics)__deltaObjectBase__;
            }
        }

        public bool IsOpen => __deltaObject__.IsOpen;
        public System.Threading.Tasks.Task<ResourceSystem.Utils.OuterRef> TryOpen(ResourceSystem.Utils.OuterRef outerRef)
        {
            return __deltaObject__.TryOpen(outerRef);
        }

        public System.Threading.Tasks.Task<bool> TryClose(ResourceSystem.Utils.OuterRef outerRef)
        {
            return __deltaObject__.TryClose(outerRef);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = IsOpen;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 532206455;
    }
}

namespace GeneratedCode.DeltaObjects
{
    public class TraumasAlways : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITraumasAlways
    {
        public TraumasAlways(SharedCode.Entities.ITraumas deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.ITraumas __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.ITraumas)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1909758738;
    }

    public class TraumasClientBroadcast : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITraumasClientBroadcast
    {
        public TraumasClientBroadcast(SharedCode.Entities.ITraumas deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.ITraumas __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.ITraumas)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1349687533;
    }

    public class TraumasClientFullApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITraumasClientFullApi
    {
        public TraumasClientFullApi(SharedCode.Entities.ITraumas deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.ITraumas __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.ITraumas)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1443965739;
    }

    public class TraumasClientFull : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITraumasClientFull
    {
        public TraumasClientFull(SharedCode.Entities.ITraumas deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.ITraumas __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.ITraumas)__deltaObjectBase__;
            }
        }

        IDeltaDictionaryWrapper<string, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITraumaGiverClientFull> __ActiveTraumas__Wrapper__;
        public IDeltaDictionaryWrapper<string, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITraumaGiverClientFull> ActiveTraumas
        {
            get
            {
                if (__ActiveTraumas__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__ActiveTraumas__Wrapper__).GetBaseDeltaObject() != __deltaObject__.ActiveTraumas)
                    __ActiveTraumas__Wrapper__ = __deltaObject__.ActiveTraumas == null ? null : new DeltaDictionaryWrapper<string, Src.Aspects.Impl.Stats.ITraumaGiver, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITraumaGiverClientFull>(__deltaObject__.ActiveTraumas);
                return __ActiveTraumas__Wrapper__;
            }
        }

        public System.Threading.Tasks.ValueTask<bool> HasActiveTraumas(string[] traumas)
        {
            return __deltaObject__.HasActiveTraumas(traumas);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = ActiveTraumas;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -2085999791;
    }

    public class TraumasServerApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITraumasServerApi
    {
        public TraumasServerApi(SharedCode.Entities.ITraumas deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.ITraumas __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.ITraumas)__deltaObjectBase__;
            }
        }

        public override int TypeId => 1344976443;
    }

    public class TraumasServer : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITraumasServer
    {
        public TraumasServer(SharedCode.Entities.ITraumas deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.ITraumas __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.ITraumas)__deltaObjectBase__;
            }
        }

        IDeltaDictionaryWrapper<string, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITraumaGiverServer> __ActiveTraumas__Wrapper__;
        public IDeltaDictionaryWrapper<string, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITraumaGiverServer> ActiveTraumas
        {
            get
            {
                if (__ActiveTraumas__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__ActiveTraumas__Wrapper__).GetBaseDeltaObject() != __deltaObject__.ActiveTraumas)
                    __ActiveTraumas__Wrapper__ = __deltaObject__.ActiveTraumas == null ? null : new DeltaDictionaryWrapper<string, Src.Aspects.Impl.Stats.ITraumaGiver, GeneratedCode.DeltaObjects.ReplicationInterfaces.ITraumaGiverServer>(__deltaObject__.ActiveTraumas);
                return __ActiveTraumas__Wrapper__;
            }
        }

        public System.Threading.Tasks.ValueTask<bool> HasActiveTraumas(string[] traumas)
        {
            return __deltaObject__.HasActiveTraumas(traumas);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = ActiveTraumas;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -607484493;
    }
}

namespace GeneratedCode.DeltaObjects
{
    public class OwnerInformationAlways : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IOwnerInformationAlways
    {
        public OwnerInformationAlways(SharedCode.Entities.IOwnerInformation deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.IOwnerInformation __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.IOwnerInformation)__deltaObjectBase__;
            }
        }

        public SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> Owner => __deltaObject__.Owner;
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Owner;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 1946416880;
    }

    public class OwnerInformationClientBroadcast : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IOwnerInformationClientBroadcast
    {
        public OwnerInformationClientBroadcast(SharedCode.Entities.IOwnerInformation deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.IOwnerInformation __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.IOwnerInformation)__deltaObjectBase__;
            }
        }

        public SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> Owner => __deltaObject__.Owner;
        public ResourceSystem.Aspects.AccessRights.AccessPredicateDef AccessPredicate => __deltaObject__.AccessPredicate;
        public ResourceSystem.Aspects.AccessRights.AccessPredicateDef LockPredicate => __deltaObject__.LockPredicate;
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Owner;
                    break;
                case 11:
                    currProperty = AccessPredicate;
                    break;
                case 12:
                    currProperty = LockPredicate;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 374750180;
    }

    public class OwnerInformationClientFullApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IOwnerInformationClientFullApi
    {
        public OwnerInformationClientFullApi(SharedCode.Entities.IOwnerInformation deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.IOwnerInformation __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.IOwnerInformation)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1515276716;
    }

    public class OwnerInformationClientFull : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IOwnerInformationClientFull
    {
        public OwnerInformationClientFull(SharedCode.Entities.IOwnerInformation deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.IOwnerInformation __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.IOwnerInformation)__deltaObjectBase__;
            }
        }

        public SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> Owner => __deltaObject__.Owner;
        public ResourceSystem.Aspects.AccessRights.AccessPredicateDef AccessPredicate => __deltaObject__.AccessPredicate;
        public ResourceSystem.Aspects.AccessRights.AccessPredicateDef LockPredicate => __deltaObject__.LockPredicate;
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Owner;
                    break;
                case 11:
                    currProperty = AccessPredicate;
                    break;
                case 12:
                    currProperty = LockPredicate;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -449175480;
    }

    public class OwnerInformationServerApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IOwnerInformationServerApi
    {
        public OwnerInformationServerApi(SharedCode.Entities.IOwnerInformation deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.IOwnerInformation __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.IOwnerInformation)__deltaObjectBase__;
            }
        }

        public override int TypeId => 1789010464;
    }

    public class OwnerInformationServer : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IOwnerInformationServer
    {
        public OwnerInformationServer(SharedCode.Entities.IOwnerInformation deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.IOwnerInformation __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.IOwnerInformation)__deltaObjectBase__;
            }
        }

        public SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> Owner => __deltaObject__.Owner;
        public ResourceSystem.Aspects.AccessRights.AccessPredicateDef AccessPredicate => __deltaObject__.AccessPredicate;
        public ResourceSystem.Aspects.AccessRights.AccessPredicateDef LockPredicate => __deltaObject__.LockPredicate;
        public System.Threading.Tasks.Task SetOwner(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> owner)
        {
            return __deltaObject__.SetOwner(owner);
        }

        public System.Threading.Tasks.Task SetLockPredicate(ResourceSystem.Aspects.AccessRights.AccessPredicateDef accessPredicate)
        {
            return __deltaObject__.SetLockPredicate(accessPredicate);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Owner;
                    break;
                case 11:
                    currProperty = AccessPredicate;
                    break;
                case 12:
                    currProperty = LockPredicate;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -390815999;
    }
}

namespace GeneratedCode.DeltaObjects
{
    public class LocomotionOwnerAlways : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILocomotionOwnerAlways
    {
        public LocomotionOwnerAlways(SharedCode.Entities.ILocomotionOwner deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.ILocomotionOwner __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.ILocomotionOwner)__deltaObjectBase__;
            }
        }

        public override int TypeId => -441682994;
    }

    public class LocomotionOwnerClientBroadcast : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILocomotionOwnerClientBroadcast
    {
        public LocomotionOwnerClientBroadcast(SharedCode.Entities.ILocomotionOwner deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.ILocomotionOwner __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.ILocomotionOwner)__deltaObjectBase__;
            }
        }

        public SharedCode.Entities.Engine.ILocomotionEngineAgent Locomotion => __deltaObject__.Locomotion;
        public SharedCode.Entities.Engine.IDirectMotionProducer DirectMotionProducer => __deltaObject__.DirectMotionProducer;
        public SharedCode.Entities.Engine.IGuideProvider GuideProvider => __deltaObject__.GuideProvider;
        public System.Threading.Tasks.ValueTask<bool> IsValid()
        {
            return __deltaObject__.IsValid();
        }

        public System.Threading.Tasks.ValueTask SetLocomotion(SharedCode.Entities.Engine.ILocomotionEngineAgent locomotion, SharedCode.Entities.Engine.IDirectMotionProducer directMotionProducer, SharedCode.Entities.Engine.IGuideProvider guideProvider)
        {
            return __deltaObject__.SetLocomotion(locomotion, directMotionProducer, guideProvider);
        }

        public override int TypeId => 717177885;
    }

    public class LocomotionOwnerClientFullApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILocomotionOwnerClientFullApi
    {
        public LocomotionOwnerClientFullApi(SharedCode.Entities.ILocomotionOwner deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.ILocomotionOwner __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.ILocomotionOwner)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1978927009;
    }

    public class LocomotionOwnerClientFull : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILocomotionOwnerClientFull
    {
        public LocomotionOwnerClientFull(SharedCode.Entities.ILocomotionOwner deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.ILocomotionOwner __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.ILocomotionOwner)__deltaObjectBase__;
            }
        }

        public SharedCode.Entities.Engine.ILocomotionEngineAgent Locomotion => __deltaObject__.Locomotion;
        public SharedCode.Entities.Engine.IDirectMotionProducer DirectMotionProducer => __deltaObject__.DirectMotionProducer;
        public SharedCode.Entities.Engine.IGuideProvider GuideProvider => __deltaObject__.GuideProvider;
        public System.Threading.Tasks.ValueTask<bool> IsValid()
        {
            return __deltaObject__.IsValid();
        }

        public System.Threading.Tasks.ValueTask SetLocomotion(SharedCode.Entities.Engine.ILocomotionEngineAgent locomotion, SharedCode.Entities.Engine.IDirectMotionProducer directMotionProducer, SharedCode.Entities.Engine.IGuideProvider guideProvider)
        {
            return __deltaObject__.SetLocomotion(locomotion, directMotionProducer, guideProvider);
        }

        public override int TypeId => 914379752;
    }

    public class LocomotionOwnerServerApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILocomotionOwnerServerApi
    {
        public LocomotionOwnerServerApi(SharedCode.Entities.ILocomotionOwner deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.ILocomotionOwner __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.ILocomotionOwner)__deltaObjectBase__;
            }
        }

        public override int TypeId => -663537652;
    }

    public class LocomotionOwnerServer : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILocomotionOwnerServer
    {
        public LocomotionOwnerServer(SharedCode.Entities.ILocomotionOwner deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.ILocomotionOwner __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.ILocomotionOwner)__deltaObjectBase__;
            }
        }

        public SharedCode.Entities.Engine.ILocomotionEngineAgent Locomotion => __deltaObject__.Locomotion;
        public SharedCode.Entities.Engine.IDirectMotionProducer DirectMotionProducer => __deltaObject__.DirectMotionProducer;
        public SharedCode.Entities.Engine.IGuideProvider GuideProvider => __deltaObject__.GuideProvider;
        public System.Threading.Tasks.ValueTask<bool> IsValid()
        {
            return __deltaObject__.IsValid();
        }

        public System.Threading.Tasks.ValueTask SetLocomotion(SharedCode.Entities.Engine.ILocomotionEngineAgent locomotion, SharedCode.Entities.Engine.IDirectMotionProducer directMotionProducer, SharedCode.Entities.Engine.IGuideProvider guideProvider)
        {
            return __deltaObject__.SetLocomotion(locomotion, directMotionProducer, guideProvider);
        }

        public override int TypeId => 381887637;
    }
}