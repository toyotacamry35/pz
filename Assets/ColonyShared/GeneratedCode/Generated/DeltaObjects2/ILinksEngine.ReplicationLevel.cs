// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using GeneratedCode.DeltaObjects.ReplicationInterfaces;
using SharedCode.Logging;
using GeneratedCode.Repositories;
using SharedCode.EntitySystem;
using GeneratedCode.EntitySystem;
using SharedCode.EntitySystem.Delta;

namespace GeneratedCode.DeltaObjects
{
    public class LinksEngineAlways : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksEngineAlways
    {
        public LinksEngineAlways(Assets.ColonyShared.SharedCode.Entities.Engine.ILinksEngine deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Engine.ILinksEngine __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Engine.ILinksEngine)__deltaObjectBase__;
            }
        }

        public override int TypeId => -37810285;
    }

    public class LinksEngineClientBroadcast : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksEngineClientBroadcast
    {
        public LinksEngineClientBroadcast(Assets.ColonyShared.SharedCode.Entities.Engine.ILinksEngine deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Engine.ILinksEngine __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Engine.ILinksEngine)__deltaObjectBase__;
            }
        }

        IDeltaDictionaryWrapper<Assets.ResourceSystem.Aspects.Links.LinkTypeDef, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksHolderClientBroadcast> __Links__Wrapper__;
        public IDeltaDictionaryWrapper<Assets.ResourceSystem.Aspects.Links.LinkTypeDef, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksHolderClientBroadcast> Links
        {
            get
            {
                if (__Links__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__Links__Wrapper__).GetBaseDeltaObject() != __deltaObject__.Links)
                    __Links__Wrapper__ = __deltaObject__.Links == null ? null : new DeltaDictionaryWrapper<Assets.ResourceSystem.Aspects.Links.LinkTypeDef, Assets.ColonyShared.SharedCode.Entities.Engine.ILinksHolder, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksHolderClientBroadcast>(__deltaObject__.Links);
                return __Links__Wrapper__;
            }
        }

        IDeltaDictionaryWrapper<Assets.ResourceSystem.Aspects.Links.LinkTypeDef, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksHolderClientBroadcast> __SavedLinks__Wrapper__;
        public IDeltaDictionaryWrapper<Assets.ResourceSystem.Aspects.Links.LinkTypeDef, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksHolderClientBroadcast> SavedLinks
        {
            get
            {
                if (__SavedLinks__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__SavedLinks__Wrapper__).GetBaseDeltaObject() != __deltaObject__.SavedLinks)
                    __SavedLinks__Wrapper__ = __deltaObject__.SavedLinks == null ? null : new DeltaDictionaryWrapper<Assets.ResourceSystem.Aspects.Links.LinkTypeDef, Assets.ColonyShared.SharedCode.Entities.Engine.ILinksHolder, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksHolderClientBroadcast>(__deltaObject__.SavedLinks);
                return __SavedLinks__Wrapper__;
            }
        }

        public System.Threading.Tasks.ValueTask<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>> GetLinked(Assets.ResourceSystem.Aspects.Links.LinkTypeDef link)
        {
            return __deltaObject__.GetLinked(link);
        }

        public System.Threading.Tasks.ValueTask<System.Collections.Generic.IEnumerable<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>>> GetLinkeds(Assets.ResourceSystem.Aspects.Links.LinkTypeDef link)
        {
            return __deltaObject__.GetLinkeds(link);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Links;
                    break;
                case 11:
                    currProperty = SavedLinks;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 603579721;
    }

    public class LinksEngineClientFullApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksEngineClientFullApi
    {
        public LinksEngineClientFullApi(Assets.ColonyShared.SharedCode.Entities.Engine.ILinksEngine deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Engine.ILinksEngine __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Engine.ILinksEngine)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1319417122;
    }

    public class LinksEngineClientFull : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksEngineClientFull
    {
        public LinksEngineClientFull(Assets.ColonyShared.SharedCode.Entities.Engine.ILinksEngine deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Engine.ILinksEngine __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Engine.ILinksEngine)__deltaObjectBase__;
            }
        }

        IDeltaDictionaryWrapper<Assets.ResourceSystem.Aspects.Links.LinkTypeDef, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksHolderClientFull> __Links__Wrapper__;
        public IDeltaDictionaryWrapper<Assets.ResourceSystem.Aspects.Links.LinkTypeDef, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksHolderClientFull> Links
        {
            get
            {
                if (__Links__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__Links__Wrapper__).GetBaseDeltaObject() != __deltaObject__.Links)
                    __Links__Wrapper__ = __deltaObject__.Links == null ? null : new DeltaDictionaryWrapper<Assets.ResourceSystem.Aspects.Links.LinkTypeDef, Assets.ColonyShared.SharedCode.Entities.Engine.ILinksHolder, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksHolderClientFull>(__deltaObject__.Links);
                return __Links__Wrapper__;
            }
        }

        IDeltaDictionaryWrapper<Assets.ResourceSystem.Aspects.Links.LinkTypeDef, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksHolderClientFull> __SavedLinks__Wrapper__;
        public IDeltaDictionaryWrapper<Assets.ResourceSystem.Aspects.Links.LinkTypeDef, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksHolderClientFull> SavedLinks
        {
            get
            {
                if (__SavedLinks__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__SavedLinks__Wrapper__).GetBaseDeltaObject() != __deltaObject__.SavedLinks)
                    __SavedLinks__Wrapper__ = __deltaObject__.SavedLinks == null ? null : new DeltaDictionaryWrapper<Assets.ResourceSystem.Aspects.Links.LinkTypeDef, Assets.ColonyShared.SharedCode.Entities.Engine.ILinksHolder, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksHolderClientFull>(__deltaObject__.SavedLinks);
                return __SavedLinks__Wrapper__;
            }
        }

        public System.Threading.Tasks.ValueTask<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>> GetLinked(Assets.ResourceSystem.Aspects.Links.LinkTypeDef link)
        {
            return __deltaObject__.GetLinked(link);
        }

        public System.Threading.Tasks.ValueTask<System.Collections.Generic.IEnumerable<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>>> GetLinkeds(Assets.ResourceSystem.Aspects.Links.LinkTypeDef link)
        {
            return __deltaObject__.GetLinkeds(link);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Links;
                    break;
                case 11:
                    currProperty = SavedLinks;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 991421745;
    }

    public class LinksEngineServerApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksEngineServerApi
    {
        public LinksEngineServerApi(Assets.ColonyShared.SharedCode.Entities.Engine.ILinksEngine deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Engine.ILinksEngine __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Engine.ILinksEngine)__deltaObjectBase__;
            }
        }

        public override int TypeId => 72671645;
    }

    public class LinksEngineServer : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksEngineServer
    {
        public LinksEngineServer(Assets.ColonyShared.SharedCode.Entities.Engine.ILinksEngine deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Engine.ILinksEngine __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Engine.ILinksEngine)__deltaObjectBase__;
            }
        }

        IDeltaDictionaryWrapper<Assets.ResourceSystem.Aspects.Links.LinkTypeDef, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksHolderServer> __Links__Wrapper__;
        public IDeltaDictionaryWrapper<Assets.ResourceSystem.Aspects.Links.LinkTypeDef, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksHolderServer> Links
        {
            get
            {
                if (__Links__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__Links__Wrapper__).GetBaseDeltaObject() != __deltaObject__.Links)
                    __Links__Wrapper__ = __deltaObject__.Links == null ? null : new DeltaDictionaryWrapper<Assets.ResourceSystem.Aspects.Links.LinkTypeDef, Assets.ColonyShared.SharedCode.Entities.Engine.ILinksHolder, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksHolderServer>(__deltaObject__.Links);
                return __Links__Wrapper__;
            }
        }

        IDeltaDictionaryWrapper<Assets.ResourceSystem.Aspects.Links.LinkTypeDef, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksHolderServer> __SavedLinks__Wrapper__;
        public IDeltaDictionaryWrapper<Assets.ResourceSystem.Aspects.Links.LinkTypeDef, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksHolderServer> SavedLinks
        {
            get
            {
                if (__SavedLinks__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__SavedLinks__Wrapper__).GetBaseDeltaObject() != __deltaObject__.SavedLinks)
                    __SavedLinks__Wrapper__ = __deltaObject__.SavedLinks == null ? null : new DeltaDictionaryWrapper<Assets.ResourceSystem.Aspects.Links.LinkTypeDef, Assets.ColonyShared.SharedCode.Entities.Engine.ILinksHolder, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksHolderServer>(__deltaObject__.SavedLinks);
                return __SavedLinks__Wrapper__;
            }
        }

        public System.Threading.Tasks.ValueTask<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>> GetLinked(Assets.ResourceSystem.Aspects.Links.LinkTypeDef link)
        {
            return __deltaObject__.GetLinked(link);
        }

        public System.Threading.Tasks.ValueTask<System.Collections.Generic.IEnumerable<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>>> GetLinkeds(Assets.ResourceSystem.Aspects.Links.LinkTypeDef link)
        {
            return __deltaObject__.GetLinkeds(link);
        }

        public System.Threading.Tasks.Task AddLinkRef(Assets.ResourceSystem.Aspects.Links.LinkTypeDef key, SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> outerRef, bool watched, bool saved)
        {
            return __deltaObject__.AddLinkRef(key, outerRef, watched, saved);
        }

        public System.Threading.Tasks.Task RemoveLinkKey(Assets.ResourceSystem.Aspects.Links.LinkTypeDef key)
        {
            return __deltaObject__.RemoveLinkKey(key);
        }

        public System.Threading.Tasks.Task RemoveLinkRef(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> outerRef)
        {
            return __deltaObject__.RemoveLinkRef(outerRef);
        }

        public System.Threading.Tasks.Task RemoveLinkRefByKey(Assets.ResourceSystem.Aspects.Links.LinkTypeDef key, SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> outerRef)
        {
            return __deltaObject__.RemoveLinkRefByKey(key, outerRef);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Links;
                    break;
                case 11:
                    currProperty = SavedLinks;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 26217956;
    }
}

namespace GeneratedCode.DeltaObjects
{
    public class LinksHolderAlways : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksHolderAlways
    {
        public LinksHolderAlways(Assets.ColonyShared.SharedCode.Entities.Engine.ILinksHolder deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Engine.ILinksHolder __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Engine.ILinksHolder)__deltaObjectBase__;
            }
        }

        public override int TypeId => 441083441;
    }

    public class LinksHolderClientBroadcast : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksHolderClientBroadcast
    {
        public LinksHolderClientBroadcast(Assets.ColonyShared.SharedCode.Entities.Engine.ILinksHolder deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Engine.ILinksHolder __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Engine.ILinksHolder)__deltaObjectBase__;
            }
        }

        public IDeltaDictionary<ResourceSystem.Utils.OuterRef, bool> Links
        {
            get
            {
                return __deltaObject__.Links;
            }
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Links;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -769758253;
    }

    public class LinksHolderClientFullApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksHolderClientFullApi
    {
        public LinksHolderClientFullApi(Assets.ColonyShared.SharedCode.Entities.Engine.ILinksHolder deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Engine.ILinksHolder __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Engine.ILinksHolder)__deltaObjectBase__;
            }
        }

        public override int TypeId => 1850719925;
    }

    public class LinksHolderClientFull : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksHolderClientFull
    {
        public LinksHolderClientFull(Assets.ColonyShared.SharedCode.Entities.Engine.ILinksHolder deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Engine.ILinksHolder __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Engine.ILinksHolder)__deltaObjectBase__;
            }
        }

        public IDeltaDictionary<ResourceSystem.Utils.OuterRef, bool> Links
        {
            get
            {
                return __deltaObject__.Links;
            }
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Links;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 1141729607;
    }

    public class LinksHolderServerApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksHolderServerApi
    {
        public LinksHolderServerApi(Assets.ColonyShared.SharedCode.Entities.Engine.ILinksHolder deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Engine.ILinksHolder __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Engine.ILinksHolder)__deltaObjectBase__;
            }
        }

        public override int TypeId => 624842277;
    }

    public class LinksHolderServer : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ILinksHolderServer
    {
        public LinksHolderServer(Assets.ColonyShared.SharedCode.Entities.Engine.ILinksHolder deltaObject): base(deltaObject)
        {
        }

        Assets.ColonyShared.SharedCode.Entities.Engine.ILinksHolder __deltaObject__
        {
            get
            {
                return (Assets.ColonyShared.SharedCode.Entities.Engine.ILinksHolder)__deltaObjectBase__;
            }
        }

        public IDeltaDictionary<ResourceSystem.Utils.OuterRef, bool> Links
        {
            get
            {
                return __deltaObject__.Links;
            }
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Links;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 971101897;
    }
}