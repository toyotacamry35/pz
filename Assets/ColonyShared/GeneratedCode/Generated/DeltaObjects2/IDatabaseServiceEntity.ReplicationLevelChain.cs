// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using System;
using SharedCode.Entities.Service;
using SharedCode.EntitySystem.ChainCalls;
using SharedCode.Logging;
using SharedCode.OurSimpleIoC;
using SharedCode.Serializers;
using SharedCode.Utils;
using System.Linq;
using System.Collections.Generic;
using System.CodeDom.Compiler;
using GeneratedCode.DeltaObjects.Chain;

[GeneratedCode("CodeGen", "1.0")]
public class DatabaseServiceEntityAlwaysChainProxy : IChainedEntity
{
    private DatabaseServiceEntityChainProxy __chain__;
    public DatabaseServiceEntityAlwaysChainProxy(DatabaseServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public DatabaseServiceEntityAlwaysChainProxy DataSetExists(ChainArgument<int> typeId, ChainArgument<System.Guid> entityId)
    {
        __chain__.DataSetExists(typeId, entityId);
        return this;
    }

    public DatabaseServiceEntityAlwaysChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public DatabaseServiceEntityAlwaysChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public DatabaseServiceEntityAlwaysChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static DatabaseServiceEntityAlwaysChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IDatabaseServiceEntityAlways entity)
    {
        return new DatabaseServiceEntityAlwaysChainProxy(new DatabaseServiceEntityChainProxy((SharedCode.Entities.Cloud.IDatabaseServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static DatabaseServiceEntityAlwaysChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IDatabaseServiceEntityAlways entity, IChainedEntity fromChain)
    {
        return new DatabaseServiceEntityAlwaysChainProxy(new DatabaseServiceEntityChainProxy((SharedCode.Entities.Cloud.IDatabaseServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class DatabaseServiceEntityClientBroadcastChainProxy : IChainedEntity
{
    private DatabaseServiceEntityChainProxy __chain__;
    public DatabaseServiceEntityClientBroadcastChainProxy(DatabaseServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public DatabaseServiceEntityClientBroadcastChainProxy DataSetExists(ChainArgument<int> typeId, ChainArgument<System.Guid> entityId)
    {
        __chain__.DataSetExists(typeId, entityId);
        return this;
    }

    public DatabaseServiceEntityClientBroadcastChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public DatabaseServiceEntityClientBroadcastChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public DatabaseServiceEntityClientBroadcastChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static DatabaseServiceEntityClientBroadcastChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IDatabaseServiceEntityClientBroadcast entity)
    {
        return new DatabaseServiceEntityClientBroadcastChainProxy(new DatabaseServiceEntityChainProxy((SharedCode.Entities.Cloud.IDatabaseServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static DatabaseServiceEntityClientBroadcastChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IDatabaseServiceEntityClientBroadcast entity, IChainedEntity fromChain)
    {
        return new DatabaseServiceEntityClientBroadcastChainProxy(new DatabaseServiceEntityChainProxy((SharedCode.Entities.Cloud.IDatabaseServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class DatabaseServiceEntityClientFullApiChainProxy : IChainedEntity
{
    private DatabaseServiceEntityChainProxy __chain__;
    public DatabaseServiceEntityClientFullApiChainProxy(DatabaseServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public DatabaseServiceEntityClientFullApiChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public DatabaseServiceEntityClientFullApiChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public DatabaseServiceEntityClientFullApiChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static DatabaseServiceEntityClientFullApiChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IDatabaseServiceEntityClientFullApi entity)
    {
        return new DatabaseServiceEntityClientFullApiChainProxy(new DatabaseServiceEntityChainProxy((SharedCode.Entities.Cloud.IDatabaseServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static DatabaseServiceEntityClientFullApiChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IDatabaseServiceEntityClientFullApi entity, IChainedEntity fromChain)
    {
        return new DatabaseServiceEntityClientFullApiChainProxy(new DatabaseServiceEntityChainProxy((SharedCode.Entities.Cloud.IDatabaseServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class DatabaseServiceEntityClientFullChainProxy : IChainedEntity
{
    private DatabaseServiceEntityChainProxy __chain__;
    public DatabaseServiceEntityClientFullChainProxy(DatabaseServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public DatabaseServiceEntityClientFullChainProxy DataSetExists(ChainArgument<int> typeId, ChainArgument<System.Guid> entityId)
    {
        __chain__.DataSetExists(typeId, entityId);
        return this;
    }

    public DatabaseServiceEntityClientFullChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public DatabaseServiceEntityClientFullChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public DatabaseServiceEntityClientFullChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static DatabaseServiceEntityClientFullChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IDatabaseServiceEntityClientFull entity)
    {
        return new DatabaseServiceEntityClientFullChainProxy(new DatabaseServiceEntityChainProxy((SharedCode.Entities.Cloud.IDatabaseServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static DatabaseServiceEntityClientFullChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IDatabaseServiceEntityClientFull entity, IChainedEntity fromChain)
    {
        return new DatabaseServiceEntityClientFullChainProxy(new DatabaseServiceEntityChainProxy((SharedCode.Entities.Cloud.IDatabaseServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class DatabaseServiceEntityServerApiChainProxy : IChainedEntity
{
    private DatabaseServiceEntityChainProxy __chain__;
    public DatabaseServiceEntityServerApiChainProxy(DatabaseServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public DatabaseServiceEntityServerApiChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public DatabaseServiceEntityServerApiChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public DatabaseServiceEntityServerApiChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static DatabaseServiceEntityServerApiChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IDatabaseServiceEntityServerApi entity)
    {
        return new DatabaseServiceEntityServerApiChainProxy(new DatabaseServiceEntityChainProxy((SharedCode.Entities.Cloud.IDatabaseServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static DatabaseServiceEntityServerApiChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IDatabaseServiceEntityServerApi entity, IChainedEntity fromChain)
    {
        return new DatabaseServiceEntityServerApiChainProxy(new DatabaseServiceEntityChainProxy((SharedCode.Entities.Cloud.IDatabaseServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class DatabaseServiceEntityServerChainProxy : IChainedEntity
{
    private DatabaseServiceEntityChainProxy __chain__;
    public DatabaseServiceEntityServerChainProxy(DatabaseServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public DatabaseServiceEntityServerChainProxy Load(ChainArgument<int> typeId, ChainArgument<System.Guid> entityId)
    {
        __chain__.Load(typeId, entityId);
        return this;
    }

    public DatabaseServiceEntityServerChainProxy DataSetExists(ChainArgument<int> typeId, ChainArgument<System.Guid> entityId)
    {
        __chain__.DataSetExists(typeId, entityId);
        return this;
    }

    public DatabaseServiceEntityServerChainProxy GetAccountIdByName(ChainArgument<string> accountName)
    {
        __chain__.GetAccountIdByName(accountName);
        return this;
    }

    public DatabaseServiceEntityServerChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public DatabaseServiceEntityServerChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public DatabaseServiceEntityServerChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static DatabaseServiceEntityServerChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IDatabaseServiceEntityServer entity)
    {
        return new DatabaseServiceEntityServerChainProxy(new DatabaseServiceEntityChainProxy((SharedCode.Entities.Cloud.IDatabaseServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static DatabaseServiceEntityServerChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IDatabaseServiceEntityServer entity, IChainedEntity fromChain)
    {
        return new DatabaseServiceEntityServerChainProxy(new DatabaseServiceEntityChainProxy((SharedCode.Entities.Cloud.IDatabaseServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}