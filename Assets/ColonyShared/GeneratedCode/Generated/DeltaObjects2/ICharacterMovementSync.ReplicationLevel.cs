// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using GeneratedCode.DeltaObjects.ReplicationInterfaces;
using SharedCode.Logging;
using GeneratedCode.Repositories;
using SharedCode.EntitySystem;
using GeneratedCode.EntitySystem;
using SharedCode.EntitySystem.Delta;

namespace GeneratedCode.DeltaObjects
{
    public class CharacterMovementSyncAlways : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ICharacterMovementSyncAlways
    {
        public CharacterMovementSyncAlways(SharedCode.MovementSync.ICharacterMovementSync deltaObject): base(deltaObject)
        {
        }

        SharedCode.MovementSync.ICharacterMovementSync __deltaObject__
        {
            get
            {
                return (SharedCode.MovementSync.ICharacterMovementSync)__deltaObjectBase__;
            }
        }

        public SharedCode.MovementSync.CharacterMovementStateFrame MovementState => __deltaObject__.MovementState;
        public SharedCode.MovementSync.ICharacterMovementStateEvent OnMovementStateChanged => __deltaObject__.OnMovementStateChanged;
        public SharedCode.MovementSync.CharacterMovementStateFrame __SyncMovementStateReliable => __deltaObject__.__SyncMovementStateReliable;
        public SharedCode.Entities.Transform Transform => __deltaObject__.Transform;
        public SharedCode.Utils.Vector3 Position => __deltaObject__.Position;
        public SharedCode.Utils.Quaternion Rotation => __deltaObject__.Rotation;
        public SharedCode.Utils.Vector3 Scale => __deltaObject__.Scale;
        public System.Threading.Tasks.Task UpdateMovement(SharedCode.MovementSync.CharacterMovementState state, bool important, long counter)
        {
            return __deltaObject__.UpdateMovement(state, important, counter);
        }

        public event System.Func<SharedCode.MovementSync.CharacterMovementStateFrame, System.Threading.Tasks.Task> __SyncMovementStateUnreliable
        {
            add
            {
                __deltaObject__.__SyncMovementStateUnreliable += value;
            }

            remove
            {
                __deltaObject__.__SyncMovementStateUnreliable -= value;
            }
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = __SyncMovementStateReliable;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 421332685;
    }

    public class CharacterMovementSyncClientBroadcast : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ICharacterMovementSyncClientBroadcast
    {
        public CharacterMovementSyncClientBroadcast(SharedCode.MovementSync.ICharacterMovementSync deltaObject): base(deltaObject)
        {
        }

        SharedCode.MovementSync.ICharacterMovementSync __deltaObject__
        {
            get
            {
                return (SharedCode.MovementSync.ICharacterMovementSync)__deltaObjectBase__;
            }
        }

        public SharedCode.MovementSync.CharacterMovementStateFrame MovementState => __deltaObject__.MovementState;
        public SharedCode.MovementSync.ICharacterMovementStateEvent OnMovementStateChanged => __deltaObject__.OnMovementStateChanged;
        public SharedCode.MovementSync.CharacterMovementStateFrame __SyncMovementStateReliable => __deltaObject__.__SyncMovementStateReliable;
        public SharedCode.Entities.Transform Transform => __deltaObject__.Transform;
        public SharedCode.Utils.Vector3 Position => __deltaObject__.Position;
        public SharedCode.Utils.Quaternion Rotation => __deltaObject__.Rotation;
        public SharedCode.Utils.Vector3 Scale => __deltaObject__.Scale;
        public System.Threading.Tasks.Task UpdateMovement(SharedCode.MovementSync.CharacterMovementState state, bool important, long counter)
        {
            return __deltaObject__.UpdateMovement(state, important, counter);
        }

        public event System.Func<SharedCode.MovementSync.CharacterMovementStateFrame, System.Threading.Tasks.Task> __SyncMovementStateUnreliable
        {
            add
            {
                __deltaObject__.__SyncMovementStateUnreliable += value;
            }

            remove
            {
                __deltaObject__.__SyncMovementStateUnreliable -= value;
            }
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = __SyncMovementStateReliable;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 1194345658;
    }

    public class CharacterMovementSyncClientFullApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ICharacterMovementSyncClientFullApi
    {
        public CharacterMovementSyncClientFullApi(SharedCode.MovementSync.ICharacterMovementSync deltaObject): base(deltaObject)
        {
        }

        SharedCode.MovementSync.ICharacterMovementSync __deltaObject__
        {
            get
            {
                return (SharedCode.MovementSync.ICharacterMovementSync)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1434866563;
    }

    public class CharacterMovementSyncClientFull : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ICharacterMovementSyncClientFull
    {
        public CharacterMovementSyncClientFull(SharedCode.MovementSync.ICharacterMovementSync deltaObject): base(deltaObject)
        {
        }

        SharedCode.MovementSync.ICharacterMovementSync __deltaObject__
        {
            get
            {
                return (SharedCode.MovementSync.ICharacterMovementSync)__deltaObjectBase__;
            }
        }

        public SharedCode.MovementSync.CharacterMovementStateFrame MovementState => __deltaObject__.MovementState;
        public SharedCode.MovementSync.ICharacterMovementStateEvent OnMovementStateChanged => __deltaObject__.OnMovementStateChanged;
        public SharedCode.MovementSync.ICharacterMovementStateEvent OnMovementStateReclaimed => __deltaObject__.OnMovementStateReclaimed;
        public SharedCode.MovementSync.CharacterMovementStateFrame __SyncMovementStateReliable => __deltaObject__.__SyncMovementStateReliable;
        public SharedCode.Entities.Transform Transform => __deltaObject__.Transform;
        public SharedCode.Utils.Vector3 Position => __deltaObject__.Position;
        public SharedCode.Utils.Quaternion Rotation => __deltaObject__.Rotation;
        public SharedCode.Utils.Vector3 Scale => __deltaObject__.Scale;
        public System.Threading.Tasks.Task UpdateMovement(SharedCode.MovementSync.CharacterMovementState state, bool important, long counter)
        {
            return __deltaObject__.UpdateMovement(state, important, counter);
        }

        public System.Threading.Tasks.Task TeleportDone(long teleportFrameTimestamp, long clientNowTimestamp)
        {
            return __deltaObject__.TeleportDone(teleportFrameTimestamp, clientNowTimestamp);
        }

        public event System.Func<SharedCode.MovementSync.CharacterMovementStateFrame, System.Threading.Tasks.Task> __SyncMovementStateUnreliable
        {
            add
            {
                __deltaObject__.__SyncMovementStateUnreliable += value;
            }

            remove
            {
                __deltaObject__.__SyncMovementStateUnreliable -= value;
            }
        }

        public event System.Func<SharedCode.MovementSync.CharacterMovementStateFrame, System.Threading.Tasks.Task> __SyncMovementStateReclaim
        {
            add
            {
                __deltaObject__.__SyncMovementStateReclaim += value;
            }

            remove
            {
                __deltaObject__.__SyncMovementStateReclaim -= value;
            }
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = __SyncMovementStateReliable;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 987353677;
    }

    public class CharacterMovementSyncServerApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ICharacterMovementSyncServerApi
    {
        public CharacterMovementSyncServerApi(SharedCode.MovementSync.ICharacterMovementSync deltaObject): base(deltaObject)
        {
        }

        SharedCode.MovementSync.ICharacterMovementSync __deltaObject__
        {
            get
            {
                return (SharedCode.MovementSync.ICharacterMovementSync)__deltaObjectBase__;
            }
        }

        public override int TypeId => -1269678926;
    }

    public class CharacterMovementSyncServer : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.ICharacterMovementSyncServer
    {
        public CharacterMovementSyncServer(SharedCode.MovementSync.ICharacterMovementSync deltaObject): base(deltaObject)
        {
        }

        SharedCode.MovementSync.ICharacterMovementSync __deltaObject__
        {
            get
            {
                return (SharedCode.MovementSync.ICharacterMovementSync)__deltaObjectBase__;
            }
        }

        public SharedCode.MovementSync.CharacterMovementStateFrame MovementState => __deltaObject__.MovementState;
        public SharedCode.MovementSync.ICharacterMovementStateEvent OnMovementStateChanged => __deltaObject__.OnMovementStateChanged;
        public SharedCode.MovementSync.ICharacterMovementStateEvent OnMovementStateReclaimed => __deltaObject__.OnMovementStateReclaimed;
        public SharedCode.MovementSync.CharacterMovementStateFrame __SyncMovementStateReliable => __deltaObject__.__SyncMovementStateReliable;
        public SharedCode.Entities.Transform Transform => __deltaObject__.Transform;
        public SharedCode.Utils.Vector3 Position => __deltaObject__.Position;
        public SharedCode.Utils.Quaternion Rotation => __deltaObject__.Rotation;
        public SharedCode.Utils.Vector3 Scale => __deltaObject__.Scale;
        public System.Threading.Tasks.Task UpdateMovement(SharedCode.MovementSync.CharacterMovementState state, bool important, long counter)
        {
            return __deltaObject__.UpdateMovement(state, important, counter);
        }

        public System.Threading.Tasks.Task TeleportDone(long teleportFrameTimestamp, long clientNowTimestamp)
        {
            return __deltaObject__.TeleportDone(teleportFrameTimestamp, clientNowTimestamp);
        }

        public System.Threading.Tasks.Task NotifyThatClientIsGone()
        {
            return __deltaObject__.NotifyThatClientIsGone();
        }

        public event System.Func<SharedCode.MovementSync.CharacterMovementStateFrame, System.Threading.Tasks.Task> __SyncMovementStateUnreliable
        {
            add
            {
                __deltaObject__.__SyncMovementStateUnreliable += value;
            }

            remove
            {
                __deltaObject__.__SyncMovementStateUnreliable -= value;
            }
        }

        public event System.Func<SharedCode.MovementSync.CharacterMovementStateFrame, System.Threading.Tasks.Task> __SyncMovementStateReclaim
        {
            add
            {
                __deltaObject__.__SyncMovementStateReclaim += value;
            }

            remove
            {
                __deltaObject__.__SyncMovementStateReclaim -= value;
            }
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = __SyncMovementStateReliable;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -2021773662;
    }
}