// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

namespace GeneratedCode.DeltaObjects
{
    public partial class MapEntity
    {
        internal static class ExecuteMethods
        {
            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(0, "IMapEntity_SetMapEntityState_MapEntityState_Message")]
            internal static async System.Threading.Tasks.Task SetMapEntityState_0(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                SharedCode.MapSystem.MapEntityState state;
                (state, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<SharedCode.MapSystem.MapEntityState>(__data__, __offset__, 0, chainContext, argumentRefs);
                var __result__ = await ((SharedCode.MapSystem.IMapEntity)__deltaObj__).SetMapEntityState(state);
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(1, "IMapEntity_ChangeChunkDescription_Guid_MapChunkState_Guid_Message")]
            internal static async System.Threading.Tasks.Task ChangeChunkDescription_1(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                System.Guid descriptionId;
                (descriptionId, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<System.Guid>(__data__, __offset__, 0, chainContext, argumentRefs);
                SharedCode.MapSystem.MapChunkState newState;
                (newState, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<SharedCode.MapSystem.MapChunkState>(__data__, __offset__, 1, chainContext, argumentRefs);
                System.Guid unityRepositoryId;
                (unityRepositoryId, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<System.Guid>(__data__, __offset__, 2, chainContext, argumentRefs);
                var __result__ = await ((SharedCode.MapSystem.IMapEntity)__deltaObj__).ChangeChunkDescription(descriptionId, newState, unityRepositoryId);
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(2, "IMapEntity_OnLastUserLeft__Message")]
            internal static async System.Threading.Tasks.Task OnLastUserLeft_2(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                var __result__ = await ((SharedCode.MapSystem.IMapEntity)__deltaObj__).OnLastUserLeft();
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(3, "IMapEntity_SpawnNewBots_List_String_Message")]
            internal static async System.Threading.Tasks.Task SpawnNewBots_3(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                System.Collections.Generic.List<System.Guid> botIds;
                (botIds, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<System.Collections.Generic.List<System.Guid>>(__data__, __offset__, 0, chainContext, argumentRefs);
                string spawnPointTypePath;
                (spawnPointTypePath, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<string>(__data__, __offset__, 1, chainContext, argumentRefs);
                await ((SharedCode.MapSystem.IMapEntity)__deltaObj__).SpawnNewBots(botIds, spawnPointTypePath);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(4, "IMapEntity_TryAquireSpawnRightsForPointsSet_OuterRef_SceneChunkDef_Message")]
            internal static async System.Threading.Tasks.Task TryAquireSpawnRightsForPointsSet_4(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> spawner;
                (spawner, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>>(__data__, __offset__, 0, chainContext, argumentRefs);
                SharedCode.Entities.GameObjectEntities.SceneChunkDef mapSceneDef;
                (mapSceneDef, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<SharedCode.Entities.GameObjectEntities.SceneChunkDef>(__data__, __offset__, 1, chainContext, argumentRefs);
                var __result__ = await ((SharedCode.MapSystem.IMapEntity)__deltaObj__).TryAquireSpawnRightsForPointsSet(spawner, mapSceneDef);
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(5, "IMapEntity_GetWorldSpaceForPoint_Vector3_Message")]
            internal static async System.Threading.Tasks.Task GetWorldSpaceForPoint_5(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                SharedCode.Utils.Vector3 point;
                (point, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<SharedCode.Utils.Vector3>(__data__, __offset__, 0, chainContext, argumentRefs);
                var __result__ = await ((SharedCode.MapSystem.IMapEntity)__deltaObj__).GetWorldSpaceForPoint(point);
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(6, "IMapEntity_NotifyAllCharactersViaChat_String_Message")]
            internal static async System.Threading.Tasks.Task NotifyAllCharactersViaChat_6(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                string text;
                (text, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<string>(__data__, __offset__, 0, chainContext, argumentRefs);
                var __result__ = await ((SharedCode.MapSystem.IMapEntity)__deltaObj__).NotifyAllCharactersViaChat(text);
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }
        }
    }
}