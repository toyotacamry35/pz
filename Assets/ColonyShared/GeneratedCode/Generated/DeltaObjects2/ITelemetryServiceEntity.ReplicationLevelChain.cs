// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using System;
using SharedCode.Entities.Service;
using SharedCode.EntitySystem.ChainCalls;
using SharedCode.Logging;
using SharedCode.OurSimpleIoC;
using SharedCode.Serializers;
using SharedCode.Utils;
using System.Linq;
using System.Collections.Generic;
using System.CodeDom.Compiler;
using GeneratedCode.DeltaObjects.Chain;

[GeneratedCode("CodeGen", "1.0")]
public class TelemetryServiceEntityAlwaysChainProxy : IChainedEntity
{
    private TelemetryServiceEntityChainProxy __chain__;
    public TelemetryServiceEntityAlwaysChainProxy(TelemetryServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public TelemetryServiceEntityAlwaysChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public TelemetryServiceEntityAlwaysChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public TelemetryServiceEntityAlwaysChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static TelemetryServiceEntityAlwaysChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.ITelemetryServiceEntityAlways entity)
    {
        return new TelemetryServiceEntityAlwaysChainProxy(new TelemetryServiceEntityChainProxy((SharedCode.Entities.Service.ITelemetryServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static TelemetryServiceEntityAlwaysChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.ITelemetryServiceEntityAlways entity, IChainedEntity fromChain)
    {
        return new TelemetryServiceEntityAlwaysChainProxy(new TelemetryServiceEntityChainProxy((SharedCode.Entities.Service.ITelemetryServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class TelemetryServiceEntityClientBroadcastChainProxy : IChainedEntity
{
    private TelemetryServiceEntityChainProxy __chain__;
    public TelemetryServiceEntityClientBroadcastChainProxy(TelemetryServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public TelemetryServiceEntityClientBroadcastChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public TelemetryServiceEntityClientBroadcastChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public TelemetryServiceEntityClientBroadcastChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static TelemetryServiceEntityClientBroadcastChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.ITelemetryServiceEntityClientBroadcast entity)
    {
        return new TelemetryServiceEntityClientBroadcastChainProxy(new TelemetryServiceEntityChainProxy((SharedCode.Entities.Service.ITelemetryServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static TelemetryServiceEntityClientBroadcastChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.ITelemetryServiceEntityClientBroadcast entity, IChainedEntity fromChain)
    {
        return new TelemetryServiceEntityClientBroadcastChainProxy(new TelemetryServiceEntityChainProxy((SharedCode.Entities.Service.ITelemetryServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class TelemetryServiceEntityClientFullApiChainProxy : IChainedEntity
{
    private TelemetryServiceEntityChainProxy __chain__;
    public TelemetryServiceEntityClientFullApiChainProxy(TelemetryServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public TelemetryServiceEntityClientFullApiChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public TelemetryServiceEntityClientFullApiChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public TelemetryServiceEntityClientFullApiChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static TelemetryServiceEntityClientFullApiChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.ITelemetryServiceEntityClientFullApi entity)
    {
        return new TelemetryServiceEntityClientFullApiChainProxy(new TelemetryServiceEntityChainProxy((SharedCode.Entities.Service.ITelemetryServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static TelemetryServiceEntityClientFullApiChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.ITelemetryServiceEntityClientFullApi entity, IChainedEntity fromChain)
    {
        return new TelemetryServiceEntityClientFullApiChainProxy(new TelemetryServiceEntityChainProxy((SharedCode.Entities.Service.ITelemetryServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class TelemetryServiceEntityClientFullChainProxy : IChainedEntity
{
    private TelemetryServiceEntityChainProxy __chain__;
    public TelemetryServiceEntityClientFullChainProxy(TelemetryServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public TelemetryServiceEntityClientFullChainProxy IndexEvent(ChainArgument<SharedCode.Entities.Telemetry.TelemetryEvent> telemetryEvent)
    {
        __chain__.IndexEvent(telemetryEvent);
        return this;
    }

    public TelemetryServiceEntityClientFullChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public TelemetryServiceEntityClientFullChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public TelemetryServiceEntityClientFullChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static TelemetryServiceEntityClientFullChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.ITelemetryServiceEntityClientFull entity)
    {
        return new TelemetryServiceEntityClientFullChainProxy(new TelemetryServiceEntityChainProxy((SharedCode.Entities.Service.ITelemetryServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static TelemetryServiceEntityClientFullChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.ITelemetryServiceEntityClientFull entity, IChainedEntity fromChain)
    {
        return new TelemetryServiceEntityClientFullChainProxy(new TelemetryServiceEntityChainProxy((SharedCode.Entities.Service.ITelemetryServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class TelemetryServiceEntityServerApiChainProxy : IChainedEntity
{
    private TelemetryServiceEntityChainProxy __chain__;
    public TelemetryServiceEntityServerApiChainProxy(TelemetryServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public TelemetryServiceEntityServerApiChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public TelemetryServiceEntityServerApiChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public TelemetryServiceEntityServerApiChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static TelemetryServiceEntityServerApiChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.ITelemetryServiceEntityServerApi entity)
    {
        return new TelemetryServiceEntityServerApiChainProxy(new TelemetryServiceEntityChainProxy((SharedCode.Entities.Service.ITelemetryServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static TelemetryServiceEntityServerApiChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.ITelemetryServiceEntityServerApi entity, IChainedEntity fromChain)
    {
        return new TelemetryServiceEntityServerApiChainProxy(new TelemetryServiceEntityChainProxy((SharedCode.Entities.Service.ITelemetryServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class TelemetryServiceEntityServerChainProxy : IChainedEntity
{
    private TelemetryServiceEntityChainProxy __chain__;
    public TelemetryServiceEntityServerChainProxy(TelemetryServiceEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public TelemetryServiceEntityServerChainProxy IndexEvent(ChainArgument<SharedCode.Entities.Telemetry.TelemetryEvent> telemetryEvent)
    {
        __chain__.IndexEvent(telemetryEvent);
        return this;
    }

    public TelemetryServiceEntityServerChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public TelemetryServiceEntityServerChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public TelemetryServiceEntityServerChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static TelemetryServiceEntityServerChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.ITelemetryServiceEntityServer entity)
    {
        return new TelemetryServiceEntityServerChainProxy(new TelemetryServiceEntityChainProxy((SharedCode.Entities.Service.ITelemetryServiceEntity)entity.GetBaseDeltaObject()));
    }

    public static TelemetryServiceEntityServerChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.ITelemetryServiceEntityServer entity, IChainedEntity fromChain)
    {
        return new TelemetryServiceEntityServerChainProxy(new TelemetryServiceEntityChainProxy((SharedCode.Entities.Service.ITelemetryServiceEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}