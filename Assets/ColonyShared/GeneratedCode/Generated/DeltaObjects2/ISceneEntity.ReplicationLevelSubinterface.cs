// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

namespace GeneratedCode.DeltaObjects.ReplicationInterfaces
{
    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.Always, 225290240, typeof(GeneratedCode.MapSystem.ISceneEntity))]
    public interface ISceneEntityAlways : SharedCode.EntitySystem.IEntity, IEntityObjectAlways, IHasMappedAlways, IScenicEntityAlways, IHasWorldSpacedAlways, IHasSimpleMovementSyncAlways, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
        long EndTime
        {
            get;
        }

        long StartTime
        {
            get;
        }

        SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> EventOwner
        {
            get;
        }

        System.Collections.Generic.List<SharedCode.Entities.GameObjectEntities.SceneChunkDef> SceneChunks
        {
            get;
        }

        bool Loaded
        {
            get;
        }

        System.Threading.Tasks.Task<bool> Spawn();
        System.Threading.Tasks.Task<bool> Despawn();
        System.Threading.Tasks.Task<bool> SetLoadableObj(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> obj, System.Guid fromStatic, SharedCode.Utils.Vector3 wsPos);
        System.Threading.Tasks.Task<bool> RemoveObject(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> obj);
        System.Threading.Tasks.Task<bool> LoadEntity(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> obj);
        System.Threading.Tasks.Task<bool> FinishLoading();
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, -607335320, typeof(GeneratedCode.MapSystem.ISceneEntity))]
    public interface ISceneEntityClientBroadcast : SharedCode.EntitySystem.IEntity, IEntityObjectClientBroadcast, IHasMappedClientBroadcast, IScenicEntityClientBroadcast, IHasWorldSpacedClientBroadcast, IHasSimpleMovementSyncClientBroadcast, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
        long EndTime
        {
            get;
        }

        long StartTime
        {
            get;
        }

        SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> EventOwner
        {
            get;
        }

        System.Collections.Generic.List<SharedCode.Entities.GameObjectEntities.SceneChunkDef> SceneChunks
        {
            get;
        }

        bool Loaded
        {
            get;
        }

        System.Threading.Tasks.Task<bool> Spawn();
        System.Threading.Tasks.Task<bool> Despawn();
        System.Threading.Tasks.Task<bool> SetLoadableObj(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> obj, System.Guid fromStatic, SharedCode.Utils.Vector3 wsPos);
        System.Threading.Tasks.Task<bool> RemoveObject(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> obj);
        System.Threading.Tasks.Task<bool> LoadEntity(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> obj);
        System.Threading.Tasks.Task<bool> FinishLoading();
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.ClientFullApi, -1835345754, typeof(GeneratedCode.MapSystem.ISceneEntity))]
    public interface ISceneEntityClientFullApi : SharedCode.EntitySystem.IEntity, IEntityObjectClientFullApi, IHasMappedClientFullApi, IScenicEntityClientFullApi, IHasWorldSpacedClientFullApi, IHasSimpleMovementSyncClientFullApi, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.ClientFull, 1137604855, typeof(GeneratedCode.MapSystem.ISceneEntity))]
    public interface ISceneEntityClientFull : SharedCode.EntitySystem.IEntity, IEntityObjectClientFull, IHasMappedClientFull, IScenicEntityClientFull, IHasWorldSpacedClientFull, IHasSimpleMovementSyncClientFull, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
        long EndTime
        {
            get;
        }

        long StartTime
        {
            get;
        }

        SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> EventOwner
        {
            get;
        }

        System.Collections.Generic.List<SharedCode.Entities.GameObjectEntities.SceneChunkDef> SceneChunks
        {
            get;
        }

        bool Loaded
        {
            get;
        }

        System.Threading.Tasks.Task<bool> Spawn();
        System.Threading.Tasks.Task<bool> Despawn();
        System.Threading.Tasks.Task<bool> SetLoadableObj(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> obj, System.Guid fromStatic, SharedCode.Utils.Vector3 wsPos);
        System.Threading.Tasks.Task<bool> RemoveObject(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> obj);
        System.Threading.Tasks.Task<bool> LoadEntity(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> obj);
        System.Threading.Tasks.Task<bool> FinishLoading();
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.ServerApi, 127116867, typeof(GeneratedCode.MapSystem.ISceneEntity))]
    public interface ISceneEntityServerApi : SharedCode.EntitySystem.IEntity, IEntityObjectServerApi, IHasMappedServerApi, IScenicEntityServerApi, IHasWorldSpacedServerApi, IHasSimpleMovementSyncServerApi, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.Server, 1719370296, typeof(GeneratedCode.MapSystem.ISceneEntity))]
    public interface ISceneEntityServer : SharedCode.EntitySystem.IEntity, IEntityObjectServer, IHasMappedServer, IScenicEntityServer, IHasWorldSpacedServer, IHasSimpleMovementSyncServer, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
        long EndTime
        {
            get;
        }

        long StartTime
        {
            get;
        }

        SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> EventOwner
        {
            get;
        }

        System.Collections.Generic.List<SharedCode.Entities.GameObjectEntities.SceneChunkDef> SceneChunks
        {
            get;
        }

        System.Collections.Generic.Dictionary<System.Guid, ResourceSystem.Utils.OuterRef> StaticToDynamicData
        {
            get;
        }

        bool Loaded
        {
            get;
        }

        System.Threading.Tasks.Task<bool> Spawn();
        System.Threading.Tasks.Task<bool> Despawn();
        System.Threading.Tasks.Task<bool> SetLoadableObj(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> obj, System.Guid fromStatic, SharedCode.Utils.Vector3 wsPos);
        System.Threading.Tasks.Task<bool> RemoveObject(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> obj);
        System.Threading.Tasks.Task<bool> LoadEntity(SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity> obj);
        System.Threading.Tasks.Task<bool> FinishLoading();
    }
}