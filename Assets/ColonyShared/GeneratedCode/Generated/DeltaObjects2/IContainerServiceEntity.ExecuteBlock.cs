// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

namespace GeneratedCode.DeltaObjects
{
    public partial class ContainerServiceEntity
    {
        internal static class ExecuteMethods
        {
            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(0, "IContainerServiceEntity_MoveItem_PropertyAddress_Int32_PropertyAddress_Int32_Int32_Guid_Message")]
            internal static async System.Threading.Tasks.Task MoveItem_0(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                SharedCode.EntitySystem.PropertyAddress source;
                (source, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<SharedCode.EntitySystem.PropertyAddress>(__data__, __offset__, 0, chainContext, argumentRefs);
                int sourceSlotId;
                (sourceSlotId, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 1, chainContext, argumentRefs);
                SharedCode.EntitySystem.PropertyAddress destination;
                (destination, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<SharedCode.EntitySystem.PropertyAddress>(__data__, __offset__, 2, chainContext, argumentRefs);
                int destinationSlotId;
                (destinationSlotId, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 3, chainContext, argumentRefs);
                int count;
                (count, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 4, chainContext, argumentRefs);
                System.Guid clientSrcEntityId;
                (clientSrcEntityId, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<System.Guid>(__data__, __offset__, 5, chainContext, argumentRefs);
                var __result__ = await ((SharedCode.Entities.Service.IContainerServiceEntity)__deltaObj__).MoveItem(source, sourceSlotId, destination, destinationSlotId, count, clientSrcEntityId);
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(1, "IContainerServiceEntity_RemoveItem_PropertyAddress_Int32_Int32_Guid_Message")]
            internal static async System.Threading.Tasks.Task RemoveItem_1(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                SharedCode.EntitySystem.PropertyAddress source;
                (source, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<SharedCode.EntitySystem.PropertyAddress>(__data__, __offset__, 0, chainContext, argumentRefs);
                int sourceSlotId;
                (sourceSlotId, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 1, chainContext, argumentRefs);
                int count;
                (count, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 2, chainContext, argumentRefs);
                System.Guid clientEntityId;
                (clientEntityId, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<System.Guid>(__data__, __offset__, 3, chainContext, argumentRefs);
                var __result__ = await ((SharedCode.Entities.Service.IContainerServiceEntity)__deltaObj__).RemoveItem(source, sourceSlotId, count, clientEntityId);
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }
        }
    }
}