// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

namespace GeneratedCode.DeltaObjects
{
    public partial class SpawnDaemon
    {
        protected override void RandomFill(int __count__, System.Random __random__, bool __withReadOnly__)
        {
            __count__--;
            if (__count__ <= 0)
                return;
            base.RandomFill(__count__, __random__, __withReadOnly__);
            var random = new System.Random(System.Guid.NewGuid().ToString().GetHashCode());
            {
                var Name__rnd = "randomName__rnd" + __random__.Next(1000);
                Name = Name__rnd;
            }

            {
            }

            {
                _Maps.Clear();
                var Mapsitem0__rnd = ((ResourcesSystem.Loader.IGameResourcesRandomExtension)ResourcesSystem.Loader.GameResourcesHolder.Instance).LoadRandomResourceByType<SharedCode.Entities.GameObjectEntities.SpawnTemplatesMapDef>(__random__);
                Maps.Add(Mapsitem0__rnd);
                var Mapsitem1__rnd = ((ResourcesSystem.Loader.IGameResourcesRandomExtension)ResourcesSystem.Loader.GameResourcesHolder.Instance).LoadRandomResourceByType<SharedCode.Entities.GameObjectEntities.SpawnTemplatesMapDef>(__random__);
                Maps.Add(Mapsitem1__rnd);
                var Mapsitem2__rnd = ((ResourcesSystem.Loader.IGameResourcesRandomExtension)ResourcesSystem.Loader.GameResourcesHolder.Instance).LoadRandomResourceByType<SharedCode.Entities.GameObjectEntities.SpawnTemplatesMapDef>(__random__);
                Maps.Add(Mapsitem2__rnd);
                var Mapsitem3__rnd = ((ResourcesSystem.Loader.IGameResourcesRandomExtension)ResourcesSystem.Loader.GameResourcesHolder.Instance).LoadRandomResourceByType<SharedCode.Entities.GameObjectEntities.SpawnTemplatesMapDef>(__random__);
                Maps.Add(Mapsitem3__rnd);
                var Mapsitem4__rnd = ((ResourcesSystem.Loader.IGameResourcesRandomExtension)ResourcesSystem.Loader.GameResourcesHolder.Instance).LoadRandomResourceByType<SharedCode.Entities.GameObjectEntities.SpawnTemplatesMapDef>(__random__);
                Maps.Add(Mapsitem4__rnd);
                var Mapsitem5__rnd = ((ResourcesSystem.Loader.IGameResourcesRandomExtension)ResourcesSystem.Loader.GameResourcesHolder.Instance).LoadRandomResourceByType<SharedCode.Entities.GameObjectEntities.SpawnTemplatesMapDef>(__random__);
                Maps.Add(Mapsitem5__rnd);
            }

            {
                var SceneDef__rnd = ((ResourcesSystem.Loader.IGameResourcesRandomExtension)ResourcesSystem.Loader.GameResourcesHolder.Instance).LoadRandomResourceByType<SharedCode.Entities.GameObjectEntities.SpawnDaemonSceneDef>(__random__);
                SceneDef = SceneDef__rnd;
            }

            if (__withReadOnly__)
            {
                var Def__rnd = ((ResourcesSystem.Loader.IGameResourcesRandomExtension)ResourcesSystem.Loader.GameResourcesHolder.Instance).LoadRandomResourceByType<SharedCode.Entities.GameObjectEntities.IEntityObjectDef>(__random__);
                Def = Def__rnd;
            }

            {
                var MapOwner__rnd = GeneratedCode.EntitySystem.RandomFillHelper.CrateInstance<GeneratedCode.MapSystem.MapOwner>();
                MapOwner = MapOwner__rnd;
            }

            if (__withReadOnly__)
            {
                var StaticIdFromExport__rnd = System.Guid.NewGuid();
                StaticIdFromExport = StaticIdFromExport__rnd;
            }

            {
                ((ResourcesSystem.Base.IHasRandomFill)WorldSpaced)?.Fill(__count__, __random__, __withReadOnly__);
            }

            {
                ((ResourcesSystem.Base.IHasRandomFill)LinksEngine)?.Fill(__count__, __random__, __withReadOnly__);
            }

            {
                ((ResourcesSystem.Base.IHasRandomFill)MovementSync)?.Fill(__count__, __random__, __withReadOnly__);
            }
        }
    }
}

namespace GeneratedCode.DeltaObjects
{
    public partial class SpawnedObject
    {
        protected override void RandomFill(int __count__, System.Random __random__, bool __withReadOnly__)
        {
            __count__--;
            if (__count__ <= 0)
                return;
            base.RandomFill(__count__, __random__, __withReadOnly__);
            var random = new System.Random(System.Guid.NewGuid().ToString().GetHashCode());
            if (__withReadOnly__)
            {
                var Spawner__rnd = GeneratedCode.EntitySystem.RandomFillHelper.CrateInstance<SharedCode.EntitySystem.OuterRef<SharedCode.Entities.GameObjectEntities.ISpawnDaemon>>();
                Spawner = Spawner__rnd;
            }

            {
                var PointType__rnd = ((ResourcesSystem.Loader.IGameResourcesRandomExtension)ResourcesSystem.Loader.GameResourcesHolder.Instance).LoadRandomResourceByType<SharedCode.Entities.GameObjectEntities.SpawnPointTypeDef>(__random__);
                PointType = PointType__rnd;
            }
        }
    }
}