// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

namespace GeneratedCode.DeltaObjects
{
    public interface ILoginServiceEntityImplementRemoteMethods
    {
        System.Threading.Tasks.Task<SharedCode.Entities.Cloud.FindRealmRequestResult> FindRealmImpl(SharedCode.Aspects.Sessions.RealmRulesQueryDef query, System.Guid accountId, System.Guid currentRealm);
        System.Threading.Tasks.Task<System.Guid> GetUserRealmImpl(System.Guid userId);
        System.Threading.Tasks.Task<bool> AttachMapToRealmImpl(System.Guid mapId, GeneratedCode.Custom.Config.MapDef mapDef, System.Guid realmId);
        System.Threading.Tasks.Task<SharedCode.Entities.Cloud.LoginResult> LoginImpl(SharedCode.Data.Platform platform, string version, string userId, string code);
        System.Threading.Tasks.Task LogoutImpl();
        System.Threading.Tasks.Task<SharedCode.Entities.Cloud.RealmStatus> GetRealmStatusImpl();
        System.Threading.Tasks.Task<SharedCode.Entities.Cloud.ELogoutResult> KickImpl(System.Guid id);
        System.Threading.Tasks.ValueTask<bool> SetMaxCCUImpl(int ccu);
        System.Threading.Tasks.ValueTask<int> GetCCUImpl();
        System.Threading.Tasks.ValueTask<int> GetMaxCCUImpl();
        System.Threading.Tasks.ValueTask<SharedCode.Entities.Cloud.AccountList> GetAllAccountsOnlineImpl();
        System.Threading.Tasks.Task<bool> IsMapDeadImpl(System.Guid map, System.Guid realmId);
        System.Threading.Tasks.ValueTask<bool> DeleteAllCharactersImpl(System.Guid accountId);
        System.Threading.Tasks.ValueTask<SharedCode.Entities.Cloud.CharacterList> GetAllCharactersForAccountImpl(System.Guid accountId);
        System.Threading.Tasks.ValueTask<int> GetAccountExperienceImpl(System.Guid accountId);
        System.Threading.Tasks.ValueTask<int> AddAccountExperienceImpl(System.Guid accountId, int expToGive);
        System.Threading.Tasks.ValueTask<bool> RequestUpdateAccountDataImpl(System.Guid accId);
        System.Threading.Tasks.ValueTask<bool> NotifyPlatformOfJoiningImpl(System.Guid accId, System.Guid realmId);
        System.Threading.Tasks.ValueTask<bool> NotifyPlatformOfLeavingImpl(System.Guid accId, System.Guid realmId);
        System.Threading.Tasks.ValueTask<bool> NotifyPlatformOfRealmGiveUpImpl(System.Guid accId, System.Guid realmId);
        System.Threading.Tasks.ValueTask<bool> GiveUpRealmOnDeathImpl(System.Guid accId);
        System.Threading.Tasks.Task<System.Guid> GetAccountIdByUserIdImpl(System.Guid userId);
        System.Threading.Tasks.ValueTask<SharedCode.Entities.AccountStatsData> GetAccountDataForAccStatsImpl(System.Guid accountId);
        System.Threading.Tasks.Task<bool> AssignAccountToMapImpl(System.Guid accId, System.Guid mapId);
        System.Threading.Tasks.Task<bool> GrantAccountRewardImpl(System.Guid characterId, ResourceSystem.Aspects.Rewards.RewardDef reward);
    }
}