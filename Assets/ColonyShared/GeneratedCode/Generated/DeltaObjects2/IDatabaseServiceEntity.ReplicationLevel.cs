// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using GeneratedCode.DeltaObjects.ReplicationInterfaces;
using SharedCode.Logging;
using GeneratedCode.Repositories;
using SharedCode.EntitySystem;
using GeneratedCode.EntitySystem;
using SharedCode.EntitySystem.Delta;

namespace GeneratedCode.DeltaObjects
{
    public class DatabaseServiceEntityAlways : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IDatabaseServiceEntityAlways
    {
        public DatabaseServiceEntityAlways(SharedCode.Entities.Cloud.IDatabaseServiceEntity deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.Cloud.IDatabaseServiceEntity __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.Cloud.IDatabaseServiceEntity)__deltaObjectBase__;
            }
        }

        public System.Threading.Tasks.ValueTask<bool> DataSetExists(int typeId, System.Guid entityId)
        {
            return __deltaObject__.DataSetExists(typeId, entityId);
        }

        public override int TypeId => 578633231;
    }

    public class DatabaseServiceEntityClientBroadcast : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IDatabaseServiceEntityClientBroadcast
    {
        public DatabaseServiceEntityClientBroadcast(SharedCode.Entities.Cloud.IDatabaseServiceEntity deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.Cloud.IDatabaseServiceEntity __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.Cloud.IDatabaseServiceEntity)__deltaObjectBase__;
            }
        }

        public System.Threading.Tasks.ValueTask<bool> DataSetExists(int typeId, System.Guid entityId)
        {
            return __deltaObject__.DataSetExists(typeId, entityId);
        }

        public override int TypeId => -1370657471;
    }

    public class DatabaseServiceEntityClientFullApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IDatabaseServiceEntityClientFullApi
    {
        public DatabaseServiceEntityClientFullApi(SharedCode.Entities.Cloud.IDatabaseServiceEntity deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.Cloud.IDatabaseServiceEntity __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.Cloud.IDatabaseServiceEntity)__deltaObjectBase__;
            }
        }

        public override int TypeId => -442772659;
    }

    public class DatabaseServiceEntityClientFull : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IDatabaseServiceEntityClientFull
    {
        public DatabaseServiceEntityClientFull(SharedCode.Entities.Cloud.IDatabaseServiceEntity deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.Cloud.IDatabaseServiceEntity __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.Cloud.IDatabaseServiceEntity)__deltaObjectBase__;
            }
        }

        public System.Threading.Tasks.ValueTask<bool> DataSetExists(int typeId, System.Guid entityId)
        {
            return __deltaObject__.DataSetExists(typeId, entityId);
        }

        public override int TypeId => 1354905028;
    }

    public class DatabaseServiceEntityServerApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IDatabaseServiceEntityServerApi
    {
        public DatabaseServiceEntityServerApi(SharedCode.Entities.Cloud.IDatabaseServiceEntity deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.Cloud.IDatabaseServiceEntity __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.Cloud.IDatabaseServiceEntity)__deltaObjectBase__;
            }
        }

        public override int TypeId => 523511933;
    }

    public class DatabaseServiceEntityServer : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IDatabaseServiceEntityServer
    {
        public DatabaseServiceEntityServer(SharedCode.Entities.Cloud.IDatabaseServiceEntity deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.Cloud.IDatabaseServiceEntity __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.Cloud.IDatabaseServiceEntity)__deltaObjectBase__;
            }
        }

        public SharedCode.EntitySystem.DatabaseServiceType DatabaseServiceType => __deltaObject__.DatabaseServiceType;
        public System.Threading.Tasks.Task<SharedCode.Entities.Cloud.SerializedEntityBatch> Load(int typeId, System.Guid entityId)
        {
            return __deltaObject__.Load(typeId, entityId);
        }

        public System.Threading.Tasks.ValueTask<bool> DataSetExists(int typeId, System.Guid entityId)
        {
            return __deltaObject__.DataSetExists(typeId, entityId);
        }

        public System.Threading.Tasks.Task<System.Guid> GetAccountIdByName(string accountName)
        {
            return __deltaObject__.GetAccountIdByName(accountName);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = DatabaseServiceType;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -723301212;
    }
}