// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using System;
using SharedCode.Entities.Service;
using SharedCode.EntitySystem.ChainCalls;
using SharedCode.Logging;
using SharedCode.OurSimpleIoC;
using SharedCode.Serializers;
using SharedCode.Utils;
using System.Linq;
using System.Collections.Generic;
using System.CodeDom.Compiler;
using GeneratedCode.DeltaObjects.Chain;

[GeneratedCode("CodeGen", "1.0")]
public class MineableEntityAlwaysChainProxy : IChainedEntity
{
    private MineableEntityChainProxy __chain__;
    public MineableEntityAlwaysChainProxy(MineableEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public MineableEntityAlwaysChainProxy NameSet(ChainArgument<string> value)
    {
        __chain__.NameSet(value);
        return this;
    }

    public MineableEntityAlwaysChainProxy PrefabSet(ChainArgument<string> value)
    {
        __chain__.PrefabSet(value);
        return this;
    }

    public MineableEntityAlwaysChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public MineableEntityAlwaysChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public MineableEntityAlwaysChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static MineableEntityAlwaysChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IMineableEntityAlways entity)
    {
        return new MineableEntityAlwaysChainProxy(new MineableEntityChainProxy((SharedCode.Entities.Mineable.IMineableEntity)entity.GetBaseDeltaObject()));
    }

    public static MineableEntityAlwaysChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IMineableEntityAlways entity, IChainedEntity fromChain)
    {
        return new MineableEntityAlwaysChainProxy(new MineableEntityChainProxy((SharedCode.Entities.Mineable.IMineableEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class MineableEntityClientBroadcastChainProxy : IChainedEntity
{
    private MineableEntityChainProxy __chain__;
    public MineableEntityClientBroadcastChainProxy(MineableEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public MineableEntityClientBroadcastChainProxy GetMineableLootList(ChainArgument<Assets.ColonyShared.SharedCode.Aspects.WorldObjects.LootListRequest> request)
    {
        __chain__.GetMineableLootList(request);
        return this;
    }

    public MineableEntityClientBroadcastChainProxy IsDamageTypeEffectiveForMining(ChainArgument<Assets.ColonyShared.SharedCode.Aspects.Damage.Templates.DamageTypeDef> type)
    {
        __chain__.IsDamageTypeEffectiveForMining(type);
        return this;
    }

    public MineableEntityClientBroadcastChainProxy NameSet(ChainArgument<string> value)
    {
        __chain__.NameSet(value);
        return this;
    }

    public MineableEntityClientBroadcastChainProxy PrefabSet(ChainArgument<string> value)
    {
        __chain__.PrefabSet(value);
        return this;
    }

    public MineableEntityClientBroadcastChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public MineableEntityClientBroadcastChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public MineableEntityClientBroadcastChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static MineableEntityClientBroadcastChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IMineableEntityClientBroadcast entity)
    {
        return new MineableEntityClientBroadcastChainProxy(new MineableEntityChainProxy((SharedCode.Entities.Mineable.IMineableEntity)entity.GetBaseDeltaObject()));
    }

    public static MineableEntityClientBroadcastChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IMineableEntityClientBroadcast entity, IChainedEntity fromChain)
    {
        return new MineableEntityClientBroadcastChainProxy(new MineableEntityChainProxy((SharedCode.Entities.Mineable.IMineableEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class MineableEntityClientFullApiChainProxy : IChainedEntity
{
    private MineableEntityChainProxy __chain__;
    public MineableEntityClientFullApiChainProxy(MineableEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public MineableEntityClientFullApiChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public MineableEntityClientFullApiChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public MineableEntityClientFullApiChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static MineableEntityClientFullApiChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IMineableEntityClientFullApi entity)
    {
        return new MineableEntityClientFullApiChainProxy(new MineableEntityChainProxy((SharedCode.Entities.Mineable.IMineableEntity)entity.GetBaseDeltaObject()));
    }

    public static MineableEntityClientFullApiChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IMineableEntityClientFullApi entity, IChainedEntity fromChain)
    {
        return new MineableEntityClientFullApiChainProxy(new MineableEntityChainProxy((SharedCode.Entities.Mineable.IMineableEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class MineableEntityClientFullChainProxy : IChainedEntity
{
    private MineableEntityChainProxy __chain__;
    public MineableEntityClientFullChainProxy(MineableEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public MineableEntityClientFullChainProxy GetMineableLootList(ChainArgument<Assets.ColonyShared.SharedCode.Aspects.WorldObjects.LootListRequest> request)
    {
        __chain__.GetMineableLootList(request);
        return this;
    }

    public MineableEntityClientFullChainProxy IsDamageTypeEffectiveForMining(ChainArgument<Assets.ColonyShared.SharedCode.Aspects.Damage.Templates.DamageTypeDef> type)
    {
        __chain__.IsDamageTypeEffectiveForMining(type);
        return this;
    }

    public MineableEntityClientFullChainProxy NameSet(ChainArgument<string> value)
    {
        __chain__.NameSet(value);
        return this;
    }

    public MineableEntityClientFullChainProxy PrefabSet(ChainArgument<string> value)
    {
        __chain__.PrefabSet(value);
        return this;
    }

    public MineableEntityClientFullChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public MineableEntityClientFullChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public MineableEntityClientFullChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static MineableEntityClientFullChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IMineableEntityClientFull entity)
    {
        return new MineableEntityClientFullChainProxy(new MineableEntityChainProxy((SharedCode.Entities.Mineable.IMineableEntity)entity.GetBaseDeltaObject()));
    }

    public static MineableEntityClientFullChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IMineableEntityClientFull entity, IChainedEntity fromChain)
    {
        return new MineableEntityClientFullChainProxy(new MineableEntityChainProxy((SharedCode.Entities.Mineable.IMineableEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class MineableEntityServerApiChainProxy : IChainedEntity
{
    private MineableEntityChainProxy __chain__;
    public MineableEntityServerApiChainProxy(MineableEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public MineableEntityServerApiChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public MineableEntityServerApiChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public MineableEntityServerApiChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static MineableEntityServerApiChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IMineableEntityServerApi entity)
    {
        return new MineableEntityServerApiChainProxy(new MineableEntityChainProxy((SharedCode.Entities.Mineable.IMineableEntity)entity.GetBaseDeltaObject()));
    }

    public static MineableEntityServerApiChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IMineableEntityServerApi entity, IChainedEntity fromChain)
    {
        return new MineableEntityServerApiChainProxy(new MineableEntityChainProxy((SharedCode.Entities.Mineable.IMineableEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class MineableEntityServerChainProxy : IChainedEntity
{
    private MineableEntityChainProxy __chain__;
    public MineableEntityServerChainProxy(MineableEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public MineableEntityServerChainProxy GetMineableLootList(ChainArgument<Assets.ColonyShared.SharedCode.Aspects.WorldObjects.LootListRequest> request)
    {
        __chain__.GetMineableLootList(request);
        return this;
    }

    public MineableEntityServerChainProxy IsDamageTypeEffectiveForMining(ChainArgument<Assets.ColonyShared.SharedCode.Aspects.Damage.Templates.DamageTypeDef> type)
    {
        __chain__.IsDamageTypeEffectiveForMining(type);
        return this;
    }

    public MineableEntityServerChainProxy GetDefaultDamageType()
    {
        __chain__.GetDefaultDamageType();
        return this;
    }

    public MineableEntityServerChainProxy GetFillerResourcePack()
    {
        __chain__.GetFillerResourcePack();
        return this;
    }

    public MineableEntityServerChainProxy NameSet(ChainArgument<string> value)
    {
        __chain__.NameSet(value);
        return this;
    }

    public MineableEntityServerChainProxy PrefabSet(ChainArgument<string> value)
    {
        __chain__.PrefabSet(value);
        return this;
    }

    public MineableEntityServerChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public MineableEntityServerChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public MineableEntityServerChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static MineableEntityServerChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IMineableEntityServer entity)
    {
        return new MineableEntityServerChainProxy(new MineableEntityChainProxy((SharedCode.Entities.Mineable.IMineableEntity)entity.GetBaseDeltaObject()));
    }

    public static MineableEntityServerChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IMineableEntityServer entity, IChainedEntity fromChain)
    {
        return new MineableEntityServerChainProxy(new MineableEntityChainProxy((SharedCode.Entities.Mineable.IMineableEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}