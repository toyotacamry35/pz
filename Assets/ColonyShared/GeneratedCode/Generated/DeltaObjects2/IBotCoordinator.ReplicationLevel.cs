// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using GeneratedCode.DeltaObjects.ReplicationInterfaces;
using SharedCode.Logging;
using GeneratedCode.Repositories;
using SharedCode.EntitySystem;
using GeneratedCode.EntitySystem;
using SharedCode.EntitySystem.Delta;

namespace GeneratedCode.DeltaObjects
{
    public class BotCoordinatorAlways : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IBotCoordinatorAlways
    {
        public BotCoordinatorAlways(GeneratedCode.EntityModel.Bots.IBotCoordinator deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Bots.IBotCoordinator __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Bots.IBotCoordinator)__deltaObjectBase__;
            }
        }

        public SharedCode.Entities.GameObjectEntities.SpawnPointTypeDef BotSpawnPointTypeDef => __deltaObject__.BotSpawnPointTypeDef;
        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = BotSpawnPointTypeDef;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -241946722;
    }

    public class BotCoordinatorClientBroadcast : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IBotCoordinatorClientBroadcast
    {
        public BotCoordinatorClientBroadcast(GeneratedCode.EntityModel.Bots.IBotCoordinator deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Bots.IBotCoordinator __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Bots.IBotCoordinator)__deltaObjectBase__;
            }
        }

        public SharedCode.Entities.GameObjectEntities.SpawnPointTypeDef BotSpawnPointTypeDef => __deltaObject__.BotSpawnPointTypeDef;
        IDeltaDictionaryWrapper<System.Guid, GeneratedCode.DeltaObjects.ReplicationInterfaces.IBotsHolderClientBroadcast> __BotsByAccount__Wrapper__;
        public IDeltaDictionaryWrapper<System.Guid, GeneratedCode.DeltaObjects.ReplicationInterfaces.IBotsHolderClientBroadcast> BotsByAccount
        {
            get
            {
                if (__BotsByAccount__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__BotsByAccount__Wrapper__).GetBaseDeltaObject() != __deltaObject__.BotsByAccount)
                    __BotsByAccount__Wrapper__ = __deltaObject__.BotsByAccount == null ? null : new DeltaDictionaryWrapper<System.Guid, GeneratedCode.EntityModel.Bots.IBotsHolder, GeneratedCode.DeltaObjects.ReplicationInterfaces.IBotsHolderClientBroadcast>(__deltaObject__.BotsByAccount);
                return __BotsByAccount__Wrapper__;
            }
        }

        public System.Threading.Tasks.Task Register()
        {
            return __deltaObject__.Register();
        }

        public System.Threading.Tasks.Task Initialize(GeneratedCode.Custom.Config.MapDef mapDef, System.Collections.Generic.List<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>> botsRefs, SharedCode.AI.LegionaryEntityDef botConfig)
        {
            return __deltaObject__.Initialize(mapDef, botsRefs, botConfig);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = BotSpawnPointTypeDef;
                    break;
                case 11:
                    currProperty = BotsByAccount;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 1004414868;
    }

    public class BotCoordinatorClientFullApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IBotCoordinatorClientFullApi
    {
        public BotCoordinatorClientFullApi(GeneratedCode.EntityModel.Bots.IBotCoordinator deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Bots.IBotCoordinator __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Bots.IBotCoordinator)__deltaObjectBase__;
            }
        }

        public override int TypeId => -813070721;
    }

    public class BotCoordinatorClientFull : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IBotCoordinatorClientFull
    {
        public BotCoordinatorClientFull(GeneratedCode.EntityModel.Bots.IBotCoordinator deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Bots.IBotCoordinator __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Bots.IBotCoordinator)__deltaObjectBase__;
            }
        }

        public SharedCode.Entities.GameObjectEntities.SpawnPointTypeDef BotSpawnPointTypeDef => __deltaObject__.BotSpawnPointTypeDef;
        IDeltaDictionaryWrapper<System.Guid, GeneratedCode.DeltaObjects.ReplicationInterfaces.IBotsHolderClientFull> __BotsByAccount__Wrapper__;
        public IDeltaDictionaryWrapper<System.Guid, GeneratedCode.DeltaObjects.ReplicationInterfaces.IBotsHolderClientFull> BotsByAccount
        {
            get
            {
                if (__BotsByAccount__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__BotsByAccount__Wrapper__).GetBaseDeltaObject() != __deltaObject__.BotsByAccount)
                    __BotsByAccount__Wrapper__ = __deltaObject__.BotsByAccount == null ? null : new DeltaDictionaryWrapper<System.Guid, GeneratedCode.EntityModel.Bots.IBotsHolder, GeneratedCode.DeltaObjects.ReplicationInterfaces.IBotsHolderClientFull>(__deltaObject__.BotsByAccount);
                return __BotsByAccount__Wrapper__;
            }
        }

        public System.Threading.Tasks.Task Register()
        {
            return __deltaObject__.Register();
        }

        public System.Threading.Tasks.Task Initialize(GeneratedCode.Custom.Config.MapDef mapDef, System.Collections.Generic.List<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>> botsRefs, SharedCode.AI.LegionaryEntityDef botConfig)
        {
            return __deltaObject__.Initialize(mapDef, botsRefs, botConfig);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = BotSpawnPointTypeDef;
                    break;
                case 11:
                    currProperty = BotsByAccount;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 518036594;
    }

    public class BotCoordinatorServerApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IBotCoordinatorServerApi
    {
        public BotCoordinatorServerApi(GeneratedCode.EntityModel.Bots.IBotCoordinator deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Bots.IBotCoordinator __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Bots.IBotCoordinator)__deltaObjectBase__;
            }
        }

        public override int TypeId => 1736259684;
    }

    public class BotCoordinatorServer : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IBotCoordinatorServer
    {
        public BotCoordinatorServer(GeneratedCode.EntityModel.Bots.IBotCoordinator deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Bots.IBotCoordinator __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Bots.IBotCoordinator)__deltaObjectBase__;
            }
        }

        public SharedCode.Entities.GameObjectEntities.SpawnPointTypeDef BotSpawnPointTypeDef => __deltaObject__.BotSpawnPointTypeDef;
        IDeltaDictionaryWrapper<System.Guid, GeneratedCode.DeltaObjects.ReplicationInterfaces.IBotsHolderServer> __BotsByAccount__Wrapper__;
        public IDeltaDictionaryWrapper<System.Guid, GeneratedCode.DeltaObjects.ReplicationInterfaces.IBotsHolderServer> BotsByAccount
        {
            get
            {
                if (__BotsByAccount__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__BotsByAccount__Wrapper__).GetBaseDeltaObject() != __deltaObject__.BotsByAccount)
                    __BotsByAccount__Wrapper__ = __deltaObject__.BotsByAccount == null ? null : new DeltaDictionaryWrapper<System.Guid, GeneratedCode.EntityModel.Bots.IBotsHolder, GeneratedCode.DeltaObjects.ReplicationInterfaces.IBotsHolderServer>(__deltaObject__.BotsByAccount);
                return __BotsByAccount__Wrapper__;
            }
        }

        public System.Threading.Tasks.Task Register()
        {
            return __deltaObject__.Register();
        }

        public System.Threading.Tasks.Task Initialize(GeneratedCode.Custom.Config.MapDef mapDef, System.Collections.Generic.List<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>> botsRefs, SharedCode.AI.LegionaryEntityDef botConfig)
        {
            return __deltaObject__.Initialize(mapDef, botsRefs, botConfig);
        }

        public System.Threading.Tasks.Task ActivateBots(System.Guid account, System.Collections.Generic.List<System.Guid> botsIds)
        {
            return __deltaObject__.ActivateBots(account, botsIds);
        }

        public System.Threading.Tasks.Task DeactivateBots(System.Guid account)
        {
            return __deltaObject__.DeactivateBots(account);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = BotSpawnPointTypeDef;
                    break;
                case 11:
                    currProperty = BotsByAccount;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 1455628068;
    }
}

namespace GeneratedCode.DeltaObjects
{
    public class BotsHolderAlways : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IBotsHolderAlways
    {
        public BotsHolderAlways(GeneratedCode.EntityModel.Bots.IBotsHolder deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Bots.IBotsHolder __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Bots.IBotsHolder)__deltaObjectBase__;
            }
        }

        public IDeltaDictionary<System.Guid, bool> Bots
        {
            get
            {
                return __deltaObject__.Bots;
            }
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Bots;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 932163788;
    }

    public class BotsHolderClientBroadcast : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IBotsHolderClientBroadcast
    {
        public BotsHolderClientBroadcast(GeneratedCode.EntityModel.Bots.IBotsHolder deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Bots.IBotsHolder __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Bots.IBotsHolder)__deltaObjectBase__;
            }
        }

        public IDeltaDictionary<System.Guid, bool> Bots
        {
            get
            {
                return __deltaObject__.Bots;
            }
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Bots;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 438169067;
    }

    public class BotsHolderClientFullApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IBotsHolderClientFullApi
    {
        public BotsHolderClientFullApi(GeneratedCode.EntityModel.Bots.IBotsHolder deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Bots.IBotsHolder __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Bots.IBotsHolder)__deltaObjectBase__;
            }
        }

        public override int TypeId => -668334737;
    }

    public class BotsHolderClientFull : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IBotsHolderClientFull
    {
        public BotsHolderClientFull(GeneratedCode.EntityModel.Bots.IBotsHolder deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Bots.IBotsHolder __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Bots.IBotsHolder)__deltaObjectBase__;
            }
        }

        public IDeltaDictionary<System.Guid, bool> Bots
        {
            get
            {
                return __deltaObject__.Bots;
            }
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Bots;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -619025767;
    }

    public class BotsHolderServerApi : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IBotsHolderServerApi
    {
        public BotsHolderServerApi(GeneratedCode.EntityModel.Bots.IBotsHolder deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Bots.IBotsHolder __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Bots.IBotsHolder)__deltaObjectBase__;
            }
        }

        public override int TypeId => 975151749;
    }

    public class BotsHolderServer : BaseDeltaObjectWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IBotsHolderServer
    {
        public BotsHolderServer(GeneratedCode.EntityModel.Bots.IBotsHolder deltaObject): base(deltaObject)
        {
        }

        GeneratedCode.EntityModel.Bots.IBotsHolder __deltaObject__
        {
            get
            {
                return (GeneratedCode.EntityModel.Bots.IBotsHolder)__deltaObjectBase__;
            }
        }

        public IDeltaDictionary<System.Guid, bool> Bots
        {
            get
            {
                return __deltaObject__.Bots;
            }
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Bots;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -1992704647;
    }
}