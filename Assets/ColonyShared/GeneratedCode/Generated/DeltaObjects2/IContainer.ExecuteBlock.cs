// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

namespace GeneratedCode.DeltaObjects
{
    public partial class Container
    {
        internal static class ExecuteMethods
        {
            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(0, "IContainer_GetMaxWeigth__Message")]
            internal static async System.Threading.Tasks.Task GetMaxWeigth_0(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                var __result__ = await ((SharedCode.DeltaObjects.IContainer)__deltaObj__).GetMaxWeigth();
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(1, "IContainer_GetTotalWeight__Message")]
            internal static async System.Threading.Tasks.Task GetTotalWeight_1(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                var __result__ = await ((SharedCode.DeltaObjects.IContainer)__deltaObj__).GetTotalWeight();
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(2, "IContainer_GetMaxStackForSlot_Int32_Message")]
            internal static async System.Threading.Tasks.Task GetMaxStackForSlot_2(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                int destinationSlot;
                (destinationSlot, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 0, chainContext, argumentRefs);
                var __result__ = await ((SharedCode.DeltaObjects.IContainer)__deltaObj__).GetMaxStackForSlot(destinationSlot);
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(3, "IContainer_IgnoreMaxStack__Message")]
            internal static async System.Threading.Tasks.Task IgnoreMaxStack_3(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                var __result__ = await ((SharedCode.DeltaObjects.IContainer)__deltaObj__).IgnoreMaxStack();
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(4, "IContainer_CanAutoselectEmptySlotsForAddStacks__Message")]
            internal static async System.Threading.Tasks.Task CanAutoselectEmptySlotsForAddStacks_4(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                var __result__ = await ((SharedCode.DeltaObjects.IContainer)__deltaObj__).CanAutoselectEmptySlotsForAddStacks();
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(5, "IContainer_CanAdd_IItem_Int32_Int32_Boolean_Message")]
            internal static async System.Threading.Tasks.Task CanAdd_5(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                SharedCode.Entities.IItem item;
                (item, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<SharedCode.Entities.IItem>(__data__, __offset__, 0, chainContext, argumentRefs);
                int index;
                (index, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 1, chainContext, argumentRefs);
                int count;
                (count, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 2, chainContext, argumentRefs);
                bool manual;
                (manual, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<bool>(__data__, __offset__, 3, chainContext, argumentRefs);
                var __result__ = await ((SharedCode.DeltaObjects.IContainer)__deltaObj__).CanAdd(item, index, count, manual);
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(6, "IContainer_CanRemove_IItem_Int32_Int32_Boolean_Message")]
            internal static async System.Threading.Tasks.Task CanRemove_6(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                SharedCode.Entities.IItem item;
                (item, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<SharedCode.Entities.IItem>(__data__, __offset__, 0, chainContext, argumentRefs);
                int index;
                (index, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 1, chainContext, argumentRefs);
                int count;
                (count, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 2, chainContext, argumentRefs);
                bool manual;
                (manual, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<bool>(__data__, __offset__, 3, chainContext, argumentRefs);
                var __result__ = await ((SharedCode.DeltaObjects.IContainer)__deltaObj__).CanRemove(item, index, count, manual);
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(7, "IContainer_OnItemAdded_IItem_Int32_Int32_Boolean_Message")]
            internal static async System.Threading.Tasks.Task OnItemAdded_7(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                SharedCode.Entities.IItem item;
                (item, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<SharedCode.Entities.IItem>(__data__, __offset__, 0, chainContext, argumentRefs);
                int index;
                (index, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 1, chainContext, argumentRefs);
                int count;
                (count, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 2, chainContext, argumentRefs);
                bool manual;
                (manual, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<bool>(__data__, __offset__, 3, chainContext, argumentRefs);
                await ((SharedCode.DeltaObjects.IContainer)__deltaObj__).OnItemAdded(item, index, count, manual);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(8, "IContainer_OnBeforeItemRemoved_IItem_Int32_Int32_Boolean_Message")]
            internal static async System.Threading.Tasks.Task OnBeforeItemRemoved_8(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                SharedCode.Entities.IItem item;
                (item, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<SharedCode.Entities.IItem>(__data__, __offset__, 0, chainContext, argumentRefs);
                int index;
                (index, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 1, chainContext, argumentRefs);
                int count;
                (count, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 2, chainContext, argumentRefs);
                bool manual;
                (manual, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<bool>(__data__, __offset__, 3, chainContext, argumentRefs);
                var __result__ = await ((SharedCode.DeltaObjects.IContainer)__deltaObj__).OnBeforeItemRemoved(item, index, count, manual);
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }
        }
    }
}

namespace GeneratedCode.DeltaObjects
{
    public partial class BuildingContainer
    {
        internal static class ExecuteMethods
        {
            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(0, "IBuildingContainer_GetMaxWeigth__Message")]
            internal static async System.Threading.Tasks.Task GetMaxWeigth_0(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                var __result__ = await ((SharedCode.DeltaObjects.IBuildingContainer)__deltaObj__).GetMaxWeigth();
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(1, "IBuildingContainer_GetTotalWeight__Message")]
            internal static async System.Threading.Tasks.Task GetTotalWeight_1(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                var __result__ = await ((SharedCode.DeltaObjects.IBuildingContainer)__deltaObj__).GetTotalWeight();
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(2, "IBuildingContainer_GetMaxStackForSlot_Int32_Message")]
            internal static async System.Threading.Tasks.Task GetMaxStackForSlot_2(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                int destinationSlot;
                (destinationSlot, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 0, chainContext, argumentRefs);
                var __result__ = await ((SharedCode.DeltaObjects.IBuildingContainer)__deltaObj__).GetMaxStackForSlot(destinationSlot);
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(3, "IBuildingContainer_IgnoreMaxStack__Message")]
            internal static async System.Threading.Tasks.Task IgnoreMaxStack_3(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                var __result__ = await ((SharedCode.DeltaObjects.IBuildingContainer)__deltaObj__).IgnoreMaxStack();
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(4, "IBuildingContainer_CanAutoselectEmptySlotsForAddStacks__Message")]
            internal static async System.Threading.Tasks.Task CanAutoselectEmptySlotsForAddStacks_4(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                var __result__ = await ((SharedCode.DeltaObjects.IBuildingContainer)__deltaObj__).CanAutoselectEmptySlotsForAddStacks();
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(5, "IBuildingContainer_CanAdd_IItem_Int32_Int32_Boolean_Message")]
            internal static async System.Threading.Tasks.Task CanAdd_5(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                SharedCode.Entities.IItem item;
                (item, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<SharedCode.Entities.IItem>(__data__, __offset__, 0, chainContext, argumentRefs);
                int index;
                (index, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 1, chainContext, argumentRefs);
                int count;
                (count, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 2, chainContext, argumentRefs);
                bool manual;
                (manual, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<bool>(__data__, __offset__, 3, chainContext, argumentRefs);
                var __result__ = await ((SharedCode.DeltaObjects.IBuildingContainer)__deltaObj__).CanAdd(item, index, count, manual);
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(6, "IBuildingContainer_CanRemove_IItem_Int32_Int32_Boolean_Message")]
            internal static async System.Threading.Tasks.Task CanRemove_6(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                SharedCode.Entities.IItem item;
                (item, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<SharedCode.Entities.IItem>(__data__, __offset__, 0, chainContext, argumentRefs);
                int index;
                (index, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 1, chainContext, argumentRefs);
                int count;
                (count, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 2, chainContext, argumentRefs);
                bool manual;
                (manual, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<bool>(__data__, __offset__, 3, chainContext, argumentRefs);
                var __result__ = await ((SharedCode.DeltaObjects.IBuildingContainer)__deltaObj__).CanRemove(item, index, count, manual);
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(7, "IBuildingContainer_OnItemAdded_IItem_Int32_Int32_Boolean_Message")]
            internal static async System.Threading.Tasks.Task OnItemAdded_7(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                SharedCode.Entities.IItem item;
                (item, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<SharedCode.Entities.IItem>(__data__, __offset__, 0, chainContext, argumentRefs);
                int index;
                (index, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 1, chainContext, argumentRefs);
                int count;
                (count, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 2, chainContext, argumentRefs);
                bool manual;
                (manual, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<bool>(__data__, __offset__, 3, chainContext, argumentRefs);
                await ((SharedCode.DeltaObjects.IBuildingContainer)__deltaObj__).OnItemAdded(item, index, count, manual);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(8, "IBuildingContainer_OnBeforeItemRemoved_IItem_Int32_Int32_Boolean_Message")]
            internal static async System.Threading.Tasks.Task OnBeforeItemRemoved_8(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                SharedCode.Entities.IItem item;
                (item, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<SharedCode.Entities.IItem>(__data__, __offset__, 0, chainContext, argumentRefs);
                int index;
                (index, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 1, chainContext, argumentRefs);
                int count;
                (count, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 2, chainContext, argumentRefs);
                bool manual;
                (manual, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<bool>(__data__, __offset__, 3, chainContext, argumentRefs);
                var __result__ = await ((SharedCode.DeltaObjects.IBuildingContainer)__deltaObj__).OnBeforeItemRemoved(item, index, count, manual);
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }
        }
    }
}

namespace GeneratedCode.DeltaObjects
{
    public partial class MachineOutputContainer
    {
        internal static class ExecuteMethods
        {
            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(0, "IMachineOutputContainer_GetMaxWeigth__Message")]
            internal static async System.Threading.Tasks.Task GetMaxWeigth_0(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                var __result__ = await ((SharedCode.DeltaObjects.IMachineOutputContainer)__deltaObj__).GetMaxWeigth();
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(1, "IMachineOutputContainer_GetTotalWeight__Message")]
            internal static async System.Threading.Tasks.Task GetTotalWeight_1(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                var __result__ = await ((SharedCode.DeltaObjects.IMachineOutputContainer)__deltaObj__).GetTotalWeight();
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(2, "IMachineOutputContainer_GetMaxStackForSlot_Int32_Message")]
            internal static async System.Threading.Tasks.Task GetMaxStackForSlot_2(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                int destinationSlot;
                (destinationSlot, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 0, chainContext, argumentRefs);
                var __result__ = await ((SharedCode.DeltaObjects.IMachineOutputContainer)__deltaObj__).GetMaxStackForSlot(destinationSlot);
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(3, "IMachineOutputContainer_IgnoreMaxStack__Message")]
            internal static async System.Threading.Tasks.Task IgnoreMaxStack_3(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                var __result__ = await ((SharedCode.DeltaObjects.IMachineOutputContainer)__deltaObj__).IgnoreMaxStack();
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(4, "IMachineOutputContainer_CanAutoselectEmptySlotsForAddStacks__Message")]
            internal static async System.Threading.Tasks.Task CanAutoselectEmptySlotsForAddStacks_4(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                var __result__ = await ((SharedCode.DeltaObjects.IMachineOutputContainer)__deltaObj__).CanAutoselectEmptySlotsForAddStacks();
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(5, "IMachineOutputContainer_CanAdd_IItem_Int32_Int32_Boolean_Message")]
            internal static async System.Threading.Tasks.Task CanAdd_5(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                SharedCode.Entities.IItem item;
                (item, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<SharedCode.Entities.IItem>(__data__, __offset__, 0, chainContext, argumentRefs);
                int index;
                (index, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 1, chainContext, argumentRefs);
                int count;
                (count, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 2, chainContext, argumentRefs);
                bool manual;
                (manual, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<bool>(__data__, __offset__, 3, chainContext, argumentRefs);
                var __result__ = await ((SharedCode.DeltaObjects.IMachineOutputContainer)__deltaObj__).CanAdd(item, index, count, manual);
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(6, "IMachineOutputContainer_CanRemove_IItem_Int32_Int32_Boolean_Message")]
            internal static async System.Threading.Tasks.Task CanRemove_6(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                SharedCode.Entities.IItem item;
                (item, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<SharedCode.Entities.IItem>(__data__, __offset__, 0, chainContext, argumentRefs);
                int index;
                (index, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 1, chainContext, argumentRefs);
                int count;
                (count, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 2, chainContext, argumentRefs);
                bool manual;
                (manual, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<bool>(__data__, __offset__, 3, chainContext, argumentRefs);
                var __result__ = await ((SharedCode.DeltaObjects.IMachineOutputContainer)__deltaObj__).CanRemove(item, index, count, manual);
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(7, "IMachineOutputContainer_OnItemAdded_IItem_Int32_Int32_Boolean_Message")]
            internal static async System.Threading.Tasks.Task OnItemAdded_7(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                SharedCode.Entities.IItem item;
                (item, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<SharedCode.Entities.IItem>(__data__, __offset__, 0, chainContext, argumentRefs);
                int index;
                (index, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 1, chainContext, argumentRefs);
                int count;
                (count, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 2, chainContext, argumentRefs);
                bool manual;
                (manual, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<bool>(__data__, __offset__, 3, chainContext, argumentRefs);
                await ((SharedCode.DeltaObjects.IMachineOutputContainer)__deltaObj__).OnItemAdded(item, index, count, manual);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(8, "IMachineOutputContainer_OnBeforeItemRemoved_IItem_Int32_Int32_Boolean_Message")]
            internal static async System.Threading.Tasks.Task OnBeforeItemRemoved_8(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                SharedCode.Entities.IItem item;
                (item, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<SharedCode.Entities.IItem>(__data__, __offset__, 0, chainContext, argumentRefs);
                int index;
                (index, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 1, chainContext, argumentRefs);
                int count;
                (count, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 2, chainContext, argumentRefs);
                bool manual;
                (manual, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<bool>(__data__, __offset__, 3, chainContext, argumentRefs);
                var __result__ = await ((SharedCode.DeltaObjects.IMachineOutputContainer)__deltaObj__).OnBeforeItemRemoved(item, index, count, manual);
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }
        }
    }
}

namespace GeneratedCode.DeltaObjects
{
    public partial class MachineFuelContainer
    {
        internal static class ExecuteMethods
        {
            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(0, "IMachineFuelContainer_GetMaxWeigth__Message")]
            internal static async System.Threading.Tasks.Task GetMaxWeigth_0(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                var __result__ = await ((SharedCode.DeltaObjects.IMachineFuelContainer)__deltaObj__).GetMaxWeigth();
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(1, "IMachineFuelContainer_GetTotalWeight__Message")]
            internal static async System.Threading.Tasks.Task GetTotalWeight_1(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                var __result__ = await ((SharedCode.DeltaObjects.IMachineFuelContainer)__deltaObj__).GetTotalWeight();
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(2, "IMachineFuelContainer_GetMaxStackForSlot_Int32_Message")]
            internal static async System.Threading.Tasks.Task GetMaxStackForSlot_2(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                int destinationSlot;
                (destinationSlot, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 0, chainContext, argumentRefs);
                var __result__ = await ((SharedCode.DeltaObjects.IMachineFuelContainer)__deltaObj__).GetMaxStackForSlot(destinationSlot);
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(3, "IMachineFuelContainer_IgnoreMaxStack__Message")]
            internal static async System.Threading.Tasks.Task IgnoreMaxStack_3(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                var __result__ = await ((SharedCode.DeltaObjects.IMachineFuelContainer)__deltaObj__).IgnoreMaxStack();
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(4, "IMachineFuelContainer_CanAutoselectEmptySlotsForAddStacks__Message")]
            internal static async System.Threading.Tasks.Task CanAutoselectEmptySlotsForAddStacks_4(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                var __result__ = await ((SharedCode.DeltaObjects.IMachineFuelContainer)__deltaObj__).CanAutoselectEmptySlotsForAddStacks();
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(5, "IMachineFuelContainer_CanAdd_IItem_Int32_Int32_Boolean_Message")]
            internal static async System.Threading.Tasks.Task CanAdd_5(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                SharedCode.Entities.IItem item;
                (item, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<SharedCode.Entities.IItem>(__data__, __offset__, 0, chainContext, argumentRefs);
                int index;
                (index, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 1, chainContext, argumentRefs);
                int count;
                (count, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 2, chainContext, argumentRefs);
                bool manual;
                (manual, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<bool>(__data__, __offset__, 3, chainContext, argumentRefs);
                var __result__ = await ((SharedCode.DeltaObjects.IMachineFuelContainer)__deltaObj__).CanAdd(item, index, count, manual);
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(6, "IMachineFuelContainer_CanRemove_IItem_Int32_Int32_Boolean_Message")]
            internal static async System.Threading.Tasks.Task CanRemove_6(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                SharedCode.Entities.IItem item;
                (item, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<SharedCode.Entities.IItem>(__data__, __offset__, 0, chainContext, argumentRefs);
                int index;
                (index, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 1, chainContext, argumentRefs);
                int count;
                (count, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 2, chainContext, argumentRefs);
                bool manual;
                (manual, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<bool>(__data__, __offset__, 3, chainContext, argumentRefs);
                var __result__ = await ((SharedCode.DeltaObjects.IMachineFuelContainer)__deltaObj__).CanRemove(item, index, count, manual);
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(7, "IMachineFuelContainer_OnItemAdded_IItem_Int32_Int32_Boolean_Message")]
            internal static async System.Threading.Tasks.Task OnItemAdded_7(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                SharedCode.Entities.IItem item;
                (item, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<SharedCode.Entities.IItem>(__data__, __offset__, 0, chainContext, argumentRefs);
                int index;
                (index, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 1, chainContext, argumentRefs);
                int count;
                (count, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 2, chainContext, argumentRefs);
                bool manual;
                (manual, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<bool>(__data__, __offset__, 3, chainContext, argumentRefs);
                await ((SharedCode.DeltaObjects.IMachineFuelContainer)__deltaObj__).OnItemAdded(item, index, count, manual);
            }

            [SharedCode.EntitySystem.RpcMethodExecuteFuncAttribute(8, "IMachineFuelContainer_OnBeforeItemRemoved_IItem_Int32_Int32_Boolean_Message")]
            internal static async System.Threading.Tasks.Task OnBeforeItemRemoved_8(SharedCode.EntitySystem.IDeltaObject __deltaObj__, byte[] __data__, SharedCode.Entities.Core.IChainContext chainContext, string saveResultKey, System.Collections.Generic.Dictionary<int, string> argumentRefs)
            {
                int __offset__ = 0;
                SharedCode.Entities.IItem item;
                (item, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<SharedCode.Entities.IItem>(__data__, __offset__, 0, chainContext, argumentRefs);
                int index;
                (index, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 1, chainContext, argumentRefs);
                int count;
                (count, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<int>(__data__, __offset__, 2, chainContext, argumentRefs);
                bool manual;
                (manual, __offset__) = await SharedCode.EntitySystem.ChainCalls.ChainCallHelpers.GetArg<bool>(__data__, __offset__, 3, chainContext, argumentRefs);
                var __result__ = await ((SharedCode.DeltaObjects.IMachineFuelContainer)__deltaObj__).OnBeforeItemRemoved(item, index, count, manual);
                if (!string.IsNullOrEmpty(saveResultKey))
                    await chainContext.SetContextValue(saveResultKey, __result__);
            }
        }
    }
}