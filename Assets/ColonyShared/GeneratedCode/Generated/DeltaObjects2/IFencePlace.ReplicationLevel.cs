// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using GeneratedCode.DeltaObjects.ReplicationInterfaces;
using SharedCode.Logging;
using GeneratedCode.Repositories;
using SharedCode.EntitySystem;
using GeneratedCode.EntitySystem;
using SharedCode.EntitySystem.Delta;

namespace GeneratedCode.DeltaObjects
{
    public class FencePlaceAlways : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IFencePlaceAlways
    {
        public FencePlaceAlways(SharedCode.Entities.Building.IFencePlace deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.Building.IFencePlace __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.Building.IFencePlace)__deltaObjectBase__;
            }
        }

        IDeltaDictionaryWrapper<System.Guid, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPositionedFenceElementAlways> __Elements__Wrapper__;
        public IDeltaDictionaryWrapper<System.Guid, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPositionedFenceElementAlways> Elements
        {
            get
            {
                if (__Elements__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__Elements__Wrapper__).GetBaseDeltaObject() != __deltaObject__.Elements)
                    __Elements__Wrapper__ = __deltaObject__.Elements == null ? null : new DeltaDictionaryWrapper<System.Guid, SharedCode.DeltaObjects.Building.IPositionedFenceElement, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPositionedFenceElementAlways>(__deltaObject__.Elements);
                return __Elements__Wrapper__;
            }
        }

        IDeltaDictionaryWrapper<System.Guid, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPositionedAttachmentAlways> __Attachments__Wrapper__;
        public IDeltaDictionaryWrapper<System.Guid, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPositionedAttachmentAlways> Attachments
        {
            get
            {
                if (__Attachments__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__Attachments__Wrapper__).GetBaseDeltaObject() != __deltaObject__.Attachments)
                    __Attachments__Wrapper__ = __deltaObject__.Attachments == null ? null : new DeltaDictionaryWrapper<System.Guid, SharedCode.DeltaObjects.Building.IPositionedAttachment, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPositionedAttachmentAlways>(__deltaObject__.Attachments);
                return __Attachments__Wrapper__;
            }
        }

        public SharedCode.DeltaObjects.Building.BuildState State => __deltaObject__.State;
        public string Name => __deltaObject__.Name;
        public string Prefab => __deltaObject__.Prefab;
        public Assets.Src.ResourcesSystem.Base.ISaveableResource SomeUnknownResourceThatMayBeUseful => __deltaObject__.SomeUnknownResourceThatMayBeUseful;
        public SharedCode.Entities.OnSceneObjectNetId OnSceneObjectNetId => __deltaObject__.OnSceneObjectNetId;
        public SharedCode.Entities.GameObjectEntities.IEntityObjectDef Def => __deltaObject__.Def;
        public GeneratedCode.MapSystem.MapOwner MapOwner => __deltaObject__.MapOwner;
        public System.Guid StaticIdFromExport => __deltaObject__.StaticIdFromExport;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedAlways WorldSpaced => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedAlways)__deltaObject__.WorldSpaced?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Always);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncAlways MovementSync => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncAlways)__deltaObject__.MovementSync?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Always);
        public System.Threading.Tasks.Task<bool> NameSet(string value)
        {
            return __deltaObject__.NameSet(value);
        }

        public System.Threading.Tasks.Task<bool> PrefabSet(string value)
        {
            return __deltaObject__.PrefabSet(value);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Elements;
                    break;
                case 11:
                    currProperty = Attachments;
                    break;
                case 12:
                    currProperty = State;
                    break;
                case 13:
                    currProperty = Name;
                    break;
                case 14:
                    currProperty = Prefab;
                    break;
                case 15:
                    currProperty = SomeUnknownResourceThatMayBeUseful;
                    break;
                case 16:
                    currProperty = OnSceneObjectNetId;
                    break;
                case 18:
                    currProperty = Def;
                    break;
                case 19:
                    currProperty = MapOwner;
                    break;
                case 20:
                    currProperty = StaticIdFromExport;
                    break;
                case 21:
                    currProperty = WorldSpaced;
                    break;
                case 23:
                    currProperty = MovementSync;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -731744481;
    }

    public class FencePlaceClientBroadcast : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IFencePlaceClientBroadcast
    {
        public FencePlaceClientBroadcast(SharedCode.Entities.Building.IFencePlace deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.Building.IFencePlace __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.Building.IFencePlace)__deltaObjectBase__;
            }
        }

        IDeltaDictionaryWrapper<System.Guid, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPositionedFenceElementClientBroadcast> __Elements__Wrapper__;
        public IDeltaDictionaryWrapper<System.Guid, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPositionedFenceElementClientBroadcast> Elements
        {
            get
            {
                if (__Elements__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__Elements__Wrapper__).GetBaseDeltaObject() != __deltaObject__.Elements)
                    __Elements__Wrapper__ = __deltaObject__.Elements == null ? null : new DeltaDictionaryWrapper<System.Guid, SharedCode.DeltaObjects.Building.IPositionedFenceElement, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPositionedFenceElementClientBroadcast>(__deltaObject__.Elements);
                return __Elements__Wrapper__;
            }
        }

        IDeltaDictionaryWrapper<System.Guid, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPositionedAttachmentClientBroadcast> __Attachments__Wrapper__;
        public IDeltaDictionaryWrapper<System.Guid, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPositionedAttachmentClientBroadcast> Attachments
        {
            get
            {
                if (__Attachments__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__Attachments__Wrapper__).GetBaseDeltaObject() != __deltaObject__.Attachments)
                    __Attachments__Wrapper__ = __deltaObject__.Attachments == null ? null : new DeltaDictionaryWrapper<System.Guid, SharedCode.DeltaObjects.Building.IPositionedAttachment, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPositionedAttachmentClientBroadcast>(__deltaObject__.Attachments);
                return __Attachments__Wrapper__;
            }
        }

        public SharedCode.DeltaObjects.Building.BuildState State => __deltaObject__.State;
        public string Name => __deltaObject__.Name;
        public string Prefab => __deltaObject__.Prefab;
        public Assets.Src.ResourcesSystem.Base.ISaveableResource SomeUnknownResourceThatMayBeUseful => __deltaObject__.SomeUnknownResourceThatMayBeUseful;
        public SharedCode.Entities.OnSceneObjectNetId OnSceneObjectNetId => __deltaObject__.OnSceneObjectNetId;
        public SharedCode.Entities.GameObjectEntities.IEntityObjectDef Def => __deltaObject__.Def;
        public GeneratedCode.MapSystem.MapOwner MapOwner => __deltaObject__.MapOwner;
        public System.Guid StaticIdFromExport => __deltaObject__.StaticIdFromExport;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedClientBroadcast WorldSpaced => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedClientBroadcast)__deltaObject__.WorldSpaced?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncClientBroadcast MovementSync => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncClientBroadcast)__deltaObject__.MovementSync?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
        public System.Threading.Tasks.Task<bool> NameSet(string value)
        {
            return __deltaObject__.NameSet(value);
        }

        public System.Threading.Tasks.Task<bool> PrefabSet(string value)
        {
            return __deltaObject__.PrefabSet(value);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Elements;
                    break;
                case 11:
                    currProperty = Attachments;
                    break;
                case 12:
                    currProperty = State;
                    break;
                case 13:
                    currProperty = Name;
                    break;
                case 14:
                    currProperty = Prefab;
                    break;
                case 15:
                    currProperty = SomeUnknownResourceThatMayBeUseful;
                    break;
                case 16:
                    currProperty = OnSceneObjectNetId;
                    break;
                case 18:
                    currProperty = Def;
                    break;
                case 19:
                    currProperty = MapOwner;
                    break;
                case 20:
                    currProperty = StaticIdFromExport;
                    break;
                case 21:
                    currProperty = WorldSpaced;
                    break;
                case 23:
                    currProperty = MovementSync;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => -1509605880;
    }

    public class FencePlaceClientFullApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IFencePlaceClientFullApi
    {
        public FencePlaceClientFullApi(SharedCode.Entities.Building.IFencePlace deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.Building.IFencePlace __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.Building.IFencePlace)__deltaObjectBase__;
            }
        }

        public override int TypeId => -14329690;
    }

    public class FencePlaceClientFull : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IFencePlaceClientFull
    {
        public FencePlaceClientFull(SharedCode.Entities.Building.IFencePlace deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.Building.IFencePlace __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.Building.IFencePlace)__deltaObjectBase__;
            }
        }

        IDeltaDictionaryWrapper<System.Guid, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPositionedFenceElementClientFull> __Elements__Wrapper__;
        public IDeltaDictionaryWrapper<System.Guid, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPositionedFenceElementClientFull> Elements
        {
            get
            {
                if (__Elements__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__Elements__Wrapper__).GetBaseDeltaObject() != __deltaObject__.Elements)
                    __Elements__Wrapper__ = __deltaObject__.Elements == null ? null : new DeltaDictionaryWrapper<System.Guid, SharedCode.DeltaObjects.Building.IPositionedFenceElement, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPositionedFenceElementClientFull>(__deltaObject__.Elements);
                return __Elements__Wrapper__;
            }
        }

        IDeltaDictionaryWrapper<System.Guid, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPositionedAttachmentClientFull> __Attachments__Wrapper__;
        public IDeltaDictionaryWrapper<System.Guid, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPositionedAttachmentClientFull> Attachments
        {
            get
            {
                if (__Attachments__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__Attachments__Wrapper__).GetBaseDeltaObject() != __deltaObject__.Attachments)
                    __Attachments__Wrapper__ = __deltaObject__.Attachments == null ? null : new DeltaDictionaryWrapper<System.Guid, SharedCode.DeltaObjects.Building.IPositionedAttachment, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPositionedAttachmentClientFull>(__deltaObject__.Attachments);
                return __Attachments__Wrapper__;
            }
        }

        public SharedCode.DeltaObjects.Building.BuildState State => __deltaObject__.State;
        public string Name => __deltaObject__.Name;
        public string Prefab => __deltaObject__.Prefab;
        public Assets.Src.ResourcesSystem.Base.ISaveableResource SomeUnknownResourceThatMayBeUseful => __deltaObject__.SomeUnknownResourceThatMayBeUseful;
        public SharedCode.Entities.OnSceneObjectNetId OnSceneObjectNetId => __deltaObject__.OnSceneObjectNetId;
        public SharedCode.Entities.GameObjectEntities.IEntityObjectDef Def => __deltaObject__.Def;
        public GeneratedCode.MapSystem.MapOwner MapOwner => __deltaObject__.MapOwner;
        public System.Guid StaticIdFromExport => __deltaObject__.StaticIdFromExport;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedClientFull WorldSpaced => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedClientFull)__deltaObject__.WorldSpaced?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientFull);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncClientFull MovementSync => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncClientFull)__deltaObject__.MovementSync?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.ClientFull);
        public System.Threading.Tasks.Task<bool> NameSet(string value)
        {
            return __deltaObject__.NameSet(value);
        }

        public System.Threading.Tasks.Task<bool> PrefabSet(string value)
        {
            return __deltaObject__.PrefabSet(value);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Elements;
                    break;
                case 11:
                    currProperty = Attachments;
                    break;
                case 12:
                    currProperty = State;
                    break;
                case 13:
                    currProperty = Name;
                    break;
                case 14:
                    currProperty = Prefab;
                    break;
                case 15:
                    currProperty = SomeUnknownResourceThatMayBeUseful;
                    break;
                case 16:
                    currProperty = OnSceneObjectNetId;
                    break;
                case 18:
                    currProperty = Def;
                    break;
                case 19:
                    currProperty = MapOwner;
                    break;
                case 20:
                    currProperty = StaticIdFromExport;
                    break;
                case 21:
                    currProperty = WorldSpaced;
                    break;
                case 23:
                    currProperty = MovementSync;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 188456499;
    }

    public class FencePlaceServerApi : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IFencePlaceServerApi
    {
        public FencePlaceServerApi(SharedCode.Entities.Building.IFencePlace deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.Building.IFencePlace __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.Building.IFencePlace)__deltaObjectBase__;
            }
        }

        public override int TypeId => 1142478298;
    }

    public class FencePlaceServer : BaseEntityWrapper, GeneratedCode.DeltaObjects.ReplicationInterfaces.IFencePlaceServer
    {
        public FencePlaceServer(SharedCode.Entities.Building.IFencePlace deltaObject): base(deltaObject)
        {
        }

        SharedCode.Entities.Building.IFencePlace __deltaObject__
        {
            get
            {
                return (SharedCode.Entities.Building.IFencePlace)__deltaObjectBase__;
            }
        }

        IDeltaDictionaryWrapper<System.Guid, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPositionedFenceElementServer> __Elements__Wrapper__;
        public IDeltaDictionaryWrapper<System.Guid, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPositionedFenceElementServer> Elements
        {
            get
            {
                if (__Elements__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__Elements__Wrapper__).GetBaseDeltaObject() != __deltaObject__.Elements)
                    __Elements__Wrapper__ = __deltaObject__.Elements == null ? null : new DeltaDictionaryWrapper<System.Guid, SharedCode.DeltaObjects.Building.IPositionedFenceElement, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPositionedFenceElementServer>(__deltaObject__.Elements);
                return __Elements__Wrapper__;
            }
        }

        IDeltaDictionaryWrapper<System.Guid, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPositionedAttachmentServer> __Attachments__Wrapper__;
        public IDeltaDictionaryWrapper<System.Guid, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPositionedAttachmentServer> Attachments
        {
            get
            {
                if (__Attachments__Wrapper__ == null || ((IBaseDeltaObjectWrapper)__Attachments__Wrapper__).GetBaseDeltaObject() != __deltaObject__.Attachments)
                    __Attachments__Wrapper__ = __deltaObject__.Attachments == null ? null : new DeltaDictionaryWrapper<System.Guid, SharedCode.DeltaObjects.Building.IPositionedAttachment, GeneratedCode.DeltaObjects.ReplicationInterfaces.IPositionedAttachmentServer>(__deltaObject__.Attachments);
                return __Attachments__Wrapper__;
            }
        }

        public SharedCode.DeltaObjects.Building.BuildState State => __deltaObject__.State;
        public string Name => __deltaObject__.Name;
        public string Prefab => __deltaObject__.Prefab;
        public Assets.Src.ResourcesSystem.Base.ISaveableResource SomeUnknownResourceThatMayBeUseful => __deltaObject__.SomeUnknownResourceThatMayBeUseful;
        public SharedCode.Entities.OnSceneObjectNetId OnSceneObjectNetId => __deltaObject__.OnSceneObjectNetId;
        public SharedCode.Entities.GameObjectEntities.IEntityObjectDef Def => __deltaObject__.Def;
        public GeneratedCode.MapSystem.MapOwner MapOwner => __deltaObject__.MapOwner;
        public System.Guid StaticIdFromExport => __deltaObject__.StaticIdFromExport;
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedServer WorldSpaced => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IWorldSpacedServer)__deltaObject__.WorldSpaced?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.IBuildPlaceServer BuildPlace => (GeneratedCode.DeltaObjects.ReplicationInterfaces.IBuildPlaceServer)__deltaObject__.BuildPlace?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncServer MovementSync => (GeneratedCode.DeltaObjects.ReplicationInterfaces.ISimpleMovementSyncServer)__deltaObject__.MovementSync?.GetReplicationLevel(SharedCode.EntitySystem.ReplicationLevel.Server);
        public System.Threading.Tasks.Task<bool> StateSet(SharedCode.DeltaObjects.Building.BuildState value)
        {
            return __deltaObject__.StateSet(value);
        }

        public System.Threading.Tasks.Task<bool> NameSet(string value)
        {
            return __deltaObject__.NameSet(value);
        }

        public System.Threading.Tasks.Task<bool> PrefabSet(string value)
        {
            return __deltaObject__.PrefabSet(value);
        }

        public System.Threading.Tasks.Task<bool> OnProgress(SharedCode.DeltaObjects.Building.BuildType type, System.Guid elementId)
        {
            return __deltaObject__.OnProgress(type, elementId);
        }

        public override bool TryGetProperty<T>(int address, out T property)
        {
            property = default(T);
            object currProperty = null;
            switch (address)
            {
                case 10:
                    currProperty = Elements;
                    break;
                case 11:
                    currProperty = Attachments;
                    break;
                case 12:
                    currProperty = State;
                    break;
                case 13:
                    currProperty = Name;
                    break;
                case 14:
                    currProperty = Prefab;
                    break;
                case 15:
                    currProperty = SomeUnknownResourceThatMayBeUseful;
                    break;
                case 16:
                    currProperty = OnSceneObjectNetId;
                    break;
                case 18:
                    currProperty = Def;
                    break;
                case 19:
                    currProperty = MapOwner;
                    break;
                case 20:
                    currProperty = StaticIdFromExport;
                    break;
                case 21:
                    currProperty = WorldSpaced;
                    break;
                case 22:
                    currProperty = BuildPlace;
                    break;
                case 23:
                    currProperty = MovementSync;
                    break;
                default:
                    Core.Environment.Logging.Extension.LoggerExtensions.IfError(Log.Logger)?.Message("DeltaObject TryGetProperty not found {0} address {1}", this.GetType().Name, address).Write();
                    return false;
            }

            property = (T)currProperty;
            return true;
        }

        public override int TypeId => 1556591326;
    }
}