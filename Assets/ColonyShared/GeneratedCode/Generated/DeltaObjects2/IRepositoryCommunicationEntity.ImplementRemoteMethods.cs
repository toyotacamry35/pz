// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

namespace GeneratedCode.DeltaObjects
{
    public interface IRepositoryCommunicationEntityImplementRemoteMethods
    {
        System.Threading.Tasks.ValueTask<bool> SetCloudRequirementsMetImpl();
        System.Threading.Tasks.ValueTask<bool> SetInitializationTasksCompletedImpl();
        System.Threading.Tasks.ValueTask<bool> SetExternalCommNodeOpenImpl();
        System.Threading.Tasks.Task<bool> FireOnDisconnectImpl();
        System.Threading.Tasks.Task<bool> NotifyOfExistingConnectionsImpl(System.Collections.Generic.List<SharedCode.Entities.Cloud.EndpointAddress> endpoints);
        System.Threading.Tasks.Task NewNodeConnectedImpl(System.Guid newNodeId);
        System.Threading.Tasks.Task EntityUpdateImpl(SharedCode.EntitySystem.UpdateBatch updateBatch);
        System.Threading.Tasks.Task EntityUpdateImpl(SharedCode.EntitySystem.UpdateBatchContainer updateBatchContainer);
        System.Threading.Tasks.Task EntityUploadImpl(SharedCode.EntitySystem.UploadBatchContainer uploadBatchContainer, SharedCode.Network.INetworkProxy networkProxy);
        System.Threading.Tasks.Task EntityDestroyedImpl(SharedCode.EntitySystem.DestroyBatchContainer destroyBatchContainer);
        System.Threading.Tasks.Task EntityDowngradeImpl(SharedCode.EntitySystem.DowngradeBatchContainer downgradeBatchContainer);
        System.Threading.Tasks.Task DumpImpl(string fileName);
        System.Threading.Tasks.Task DumpEntityImpl(int typeId, System.Guid entityId, string fileName);
        System.Threading.Tasks.Task DumpEntitySerializedDataImpl(string fileName, int entityTypeId, System.Guid entityId, long replicationMask);
        System.Threading.Tasks.Task<bool> SubscribeReplicationImpl(int typeId, System.Guid entityId, System.Guid repositoryId, SharedCode.EntitySystem.ReplicationLevel replicationLevel);
        System.Threading.Tasks.Task<bool> UnsubscribeReplicationImpl(int typeId, System.Guid entityId, System.Guid repositoryId, SharedCode.EntitySystem.ReplicationLevel replicationLevel);
        System.Threading.Tasks.Task<string> GetEntityStatusImpl(int typeId, System.Guid entityId);
        System.Threading.Tasks.Task<string> GetAllServiceEntityStatusImpl();
        System.Threading.Tasks.Task<bool> ForceCloseConnectionImpl(System.Guid userId);
        System.Threading.Tasks.Task<SharedCode.Entities.Cloud.StartMigrateEntityResult> StartMigrateEntityImpl(int entityTypeId, System.Guid entityId);
        System.Threading.Tasks.Task<SharedCode.EntitySystem.FinishMigrateEntityResult> FinishMigrateEntityImpl(int entityTypeId, System.Guid entityId, System.Collections.Generic.Dictionary<(int, System.Guid), System.Collections.Generic.Dictionary<System.Guid, int>> replicateRefsVersions);
        System.Threading.Tasks.Task DispatchMigratedEntityDeferredRpcImpl(int entityTypeId, System.Guid entityId);
    }
}