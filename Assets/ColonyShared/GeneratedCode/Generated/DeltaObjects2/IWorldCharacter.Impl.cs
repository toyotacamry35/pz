// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

namespace GeneratedCode.DeltaObjects
{
    [ProtoBuf.ProtoContract]
    [MongoDB.Bson.Serialization.Attributes.BsonDiscriminator("WorldCharacter")]
    public partial class WorldCharacter : SharedCode.EntitySystem.BaseEntity, SharedCode.Entities.IWorldCharacter, IWorldCharacterImplementRemoteMethods
    {
        public override string CodeVersion => ThisAssembly.AssemblyInformationalVersion;
        public WorldCharacter()
        {
            if (!SharedCode.Serializers._SerializerContext.Pool.Current.Deserialization)
            {
                LastActivatedWasCommonBaken = default(bool);
                ActivatedCommonBakens = new SharedCode.EntitySystem.Delta.DeltaDictionary<System.Guid, long>();
                PointMarkers = new SharedCode.EntitySystem.Delta.DeltaDictionary<System.Guid, Assets.ColonyShared.SharedCode.Aspects.WorldObjects.PointMarker>();
                PointsOfInterest = new SharedCode.EntitySystem.Delta.DeltaList<Assets.ColonyShared.SharedCode.Aspects.WorldObjects.PointOfInterestDef>();
                TimeWhenUserDisconnected = default(long);
                IsIdle = default(bool);
                IsAFK = default(bool);
                SessionId = default(System.Guid);
                AccountId = default(System.Guid);
                Def = default(SharedCode.Entities.GameObjectEntities.IEntityObjectDef);
                MapOwner = default(GeneratedCode.MapSystem.MapOwner);
                StaticIdFromExport = default(System.Guid);
                Name = default(string);
                Prefab = default(string);
                SomeUnknownResourceThatMayBeUseful = default(Assets.Src.ResourcesSystem.Base.ISaveableResource);
                OnSceneObjectNetId = default(SharedCode.Entities.OnSceneObjectNetId);
                AutoAddToWorldSpace = new GeneratedCode.DeltaObjects.AutoAddToWorldSpace();
                WorldSpaced = new GeneratedCode.DeltaObjects.WorldSpaced();
                Inventory = new GeneratedCode.DeltaObjects.Container();
                Currency = new GeneratedCode.DeltaObjects.CurrencyContainer();
                Dialog = new GeneratedCode.DeltaObjects.DialogEngine();
                Doll = new GeneratedCode.DeltaObjects.CharacterDoll();
                TemporaryPerks = new GeneratedCode.DeltaObjects.TemporaryPerks();
                PermanentPerks = new GeneratedCode.DeltaObjects.PermanentPerks();
                SavedPerks = new GeneratedCode.DeltaObjects.SavedPerks();
                Statistics = new SharedCode.EntitySystem.Delta.DeltaDictionary<Assets.ColonyShared.SharedCode.Aspects.Statictic.StatisticType, SharedCode.EntitySystem.Delta.IDeltaDictionary<Assets.ColonyShared.SharedCode.Aspects.Statictic.StatisticType, float>>();
                PerksDestroyCount = new SharedCode.EntitySystem.Delta.DeltaDictionary<SharedCode.Aspects.Item.Templates.BaseItemResource, int>();
                PerkActionsPrices = default(SharedCode.Aspects.Item.Templates.PerkActionsPricesDef);
                StatisticEngine = new GeneratedCode.DeltaObjects.StatisticEngine();
                SlaveWizardHolder = new GeneratedCode.DeltaObjects.SlaveWizardHolder();
                SimpleStupidStats = new SharedCode.EntitySystem.Delta.DeltaDictionary<Assets.Src.Aspects.Impl.Stats.StatResource, float>();
                ContainerApi = new GeneratedCode.DeltaObjects.ContainerApi();
                AllowedSpawnPoint = default(SharedCode.Entities.GameObjectEntities.SpawnPointTypeDef);
                Health = new GeneratedCode.DeltaObjects.HealthEngine();
                Mortal = new GeneratedCode.DeltaObjects.Mortal();
                Brute = new GeneratedCode.DeltaObjects.Brute();
                Stats = new GeneratedCode.DeltaObjects.StatsEngine();
                MutationMechanics = new GeneratedCode.DeltaObjects.MutationMechanics();
                Faction = default(Assets.Src.Aspects.Impl.Factions.Template.FactionDef);
                Gender = default(ResourceSystem.Aspects.Misc.GenderDef);
                Traumas = new GeneratedCode.DeltaObjects.Traumas();
                PingDiagnostics = new GeneratedCode.DeltaObjects.PingDiagnostics();
                ItemsStatsAccumulator = new GeneratedCode.DeltaObjects.ItemsStatsAccumulator();
                AuthorityOwner = new GeneratedCode.DeltaObjects.AuthorityOwner();
                MovementSync = new GeneratedCode.DeltaObjects.CharacterMovementSync();
                LogableEntity = new GeneratedCode.DeltaObjects.LogableEntity();
                LocomotionOwner = new GeneratedCode.DeltaObjects.LocomotionOwner();
                Consumer = new GeneratedCode.DeltaObjects.Consumer();
                Quest = new GeneratedCode.DeltaObjects.QuestEngine();
                InputActionHandlers = new GeneratedCode.DeltaObjects.InputActionHandlers();
                ReactionsOwner = new GeneratedCode.DeltaObjects.ReactionsOwner();
                AttackEngine = new GeneratedCode.DeltaObjects.AttackEngine();
                AnimationDoerOwner = new GeneratedCode.DeltaObjects.AnimationDoerOwner();
                FounderPack = new GeneratedCode.DeltaObjects.FounderPack();
                SpatialDatahandlers = new GeneratedCode.DeltaObjects.SpatialDataHandlers();
                Buffs = new GeneratedCode.DeltaObjects.Buffs();
                LinksEngine = new GeneratedCode.DeltaObjects.LinksEngine();
                FogOfWar = new GeneratedCode.DeltaObjects.FogOfWar();
                WorldObjectInformationSetsEngine = new GeneratedCode.DeltaObjects.WorldObjectInformationSetsEngine();
                worldPersonalMachineEngine = new GeneratedCode.DeltaObjects.WorldPersonalMachineEngine();
                AccountStats = new GeneratedCode.DeltaObjects.AccountStats();
                SpellModifiers = new SharedCode.EntitySystem.Delta.DeltaDictionary<ColonyShared.SharedCode.Modifiers.SpellModifiersCauser, ColonyShared.SharedCode.Modifiers.SpellModifiersCollectionEntry>();
                SpellModifiersCollector = new GeneratedCode.DeltaObjects.SpellModifiersCollector();
                KillingRewardMechanics = new GeneratedCode.DeltaObjects.KillingRewardMechanics();
            }

            constructor();
        }

        public WorldCharacter(System.Guid id): base(id)
        {
            if (!SharedCode.Serializers._SerializerContext.Pool.Current.Deserialization)
            {
                LastActivatedWasCommonBaken = default(bool);
                ActivatedCommonBakens = new SharedCode.EntitySystem.Delta.DeltaDictionary<System.Guid, long>();
                PointMarkers = new SharedCode.EntitySystem.Delta.DeltaDictionary<System.Guid, Assets.ColonyShared.SharedCode.Aspects.WorldObjects.PointMarker>();
                PointsOfInterest = new SharedCode.EntitySystem.Delta.DeltaList<Assets.ColonyShared.SharedCode.Aspects.WorldObjects.PointOfInterestDef>();
                TimeWhenUserDisconnected = default(long);
                IsIdle = default(bool);
                IsAFK = default(bool);
                SessionId = default(System.Guid);
                AccountId = default(System.Guid);
                Def = default(SharedCode.Entities.GameObjectEntities.IEntityObjectDef);
                MapOwner = default(GeneratedCode.MapSystem.MapOwner);
                StaticIdFromExport = default(System.Guid);
                Name = default(string);
                Prefab = default(string);
                SomeUnknownResourceThatMayBeUseful = default(Assets.Src.ResourcesSystem.Base.ISaveableResource);
                OnSceneObjectNetId = default(SharedCode.Entities.OnSceneObjectNetId);
                AutoAddToWorldSpace = new GeneratedCode.DeltaObjects.AutoAddToWorldSpace();
                WorldSpaced = new GeneratedCode.DeltaObjects.WorldSpaced();
                Inventory = new GeneratedCode.DeltaObjects.Container();
                Currency = new GeneratedCode.DeltaObjects.CurrencyContainer();
                Dialog = new GeneratedCode.DeltaObjects.DialogEngine();
                Doll = new GeneratedCode.DeltaObjects.CharacterDoll();
                TemporaryPerks = new GeneratedCode.DeltaObjects.TemporaryPerks();
                PermanentPerks = new GeneratedCode.DeltaObjects.PermanentPerks();
                SavedPerks = new GeneratedCode.DeltaObjects.SavedPerks();
                Statistics = new SharedCode.EntitySystem.Delta.DeltaDictionary<Assets.ColonyShared.SharedCode.Aspects.Statictic.StatisticType, SharedCode.EntitySystem.Delta.IDeltaDictionary<Assets.ColonyShared.SharedCode.Aspects.Statictic.StatisticType, float>>();
                PerksDestroyCount = new SharedCode.EntitySystem.Delta.DeltaDictionary<SharedCode.Aspects.Item.Templates.BaseItemResource, int>();
                PerkActionsPrices = default(SharedCode.Aspects.Item.Templates.PerkActionsPricesDef);
                StatisticEngine = new GeneratedCode.DeltaObjects.StatisticEngine();
                SlaveWizardHolder = new GeneratedCode.DeltaObjects.SlaveWizardHolder();
                SimpleStupidStats = new SharedCode.EntitySystem.Delta.DeltaDictionary<Assets.Src.Aspects.Impl.Stats.StatResource, float>();
                ContainerApi = new GeneratedCode.DeltaObjects.ContainerApi();
                AllowedSpawnPoint = default(SharedCode.Entities.GameObjectEntities.SpawnPointTypeDef);
                Health = new GeneratedCode.DeltaObjects.HealthEngine();
                Mortal = new GeneratedCode.DeltaObjects.Mortal();
                Brute = new GeneratedCode.DeltaObjects.Brute();
                Stats = new GeneratedCode.DeltaObjects.StatsEngine();
                MutationMechanics = new GeneratedCode.DeltaObjects.MutationMechanics();
                Faction = default(Assets.Src.Aspects.Impl.Factions.Template.FactionDef);
                Gender = default(ResourceSystem.Aspects.Misc.GenderDef);
                Traumas = new GeneratedCode.DeltaObjects.Traumas();
                PingDiagnostics = new GeneratedCode.DeltaObjects.PingDiagnostics();
                ItemsStatsAccumulator = new GeneratedCode.DeltaObjects.ItemsStatsAccumulator();
                AuthorityOwner = new GeneratedCode.DeltaObjects.AuthorityOwner();
                MovementSync = new GeneratedCode.DeltaObjects.CharacterMovementSync();
                LogableEntity = new GeneratedCode.DeltaObjects.LogableEntity();
                LocomotionOwner = new GeneratedCode.DeltaObjects.LocomotionOwner();
                Consumer = new GeneratedCode.DeltaObjects.Consumer();
                Quest = new GeneratedCode.DeltaObjects.QuestEngine();
                InputActionHandlers = new GeneratedCode.DeltaObjects.InputActionHandlers();
                ReactionsOwner = new GeneratedCode.DeltaObjects.ReactionsOwner();
                AttackEngine = new GeneratedCode.DeltaObjects.AttackEngine();
                AnimationDoerOwner = new GeneratedCode.DeltaObjects.AnimationDoerOwner();
                FounderPack = new GeneratedCode.DeltaObjects.FounderPack();
                SpatialDatahandlers = new GeneratedCode.DeltaObjects.SpatialDataHandlers();
                Buffs = new GeneratedCode.DeltaObjects.Buffs();
                LinksEngine = new GeneratedCode.DeltaObjects.LinksEngine();
                FogOfWar = new GeneratedCode.DeltaObjects.FogOfWar();
                WorldObjectInformationSetsEngine = new GeneratedCode.DeltaObjects.WorldObjectInformationSetsEngine();
                worldPersonalMachineEngine = new GeneratedCode.DeltaObjects.WorldPersonalMachineEngine();
                AccountStats = new GeneratedCode.DeltaObjects.AccountStats();
                SpellModifiers = new SharedCode.EntitySystem.Delta.DeltaDictionary<ColonyShared.SharedCode.Modifiers.SpellModifiersCauser, ColonyShared.SharedCode.Modifiers.SpellModifiersCollectionEntry>();
                SpellModifiersCollector = new GeneratedCode.DeltaObjects.SpellModifiersCollector();
                KillingRewardMechanics = new GeneratedCode.DeltaObjects.KillingRewardMechanics();
            }

            constructor();
        }

        public override void GetAllLinkedEntities(long replicationMask, System.Collections.Generic.List<(long level, SharedCode.Refs.IEntityRef entityRef)> entities, long currentLevel, bool onlyDbEntities)
        {
            if (_BuildingEngine != null && ((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & replicationMask) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull && (!onlyDbEntities || GeneratedCode.EntitySystem.DeltaObjectHelper.DbEntity(_BuildingEngine)))
                entities.Add((currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull, _BuildingEngine));
            if (_KnowledgeEngine != null && ((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & replicationMask) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull && (!onlyDbEntities || GeneratedCode.EntitySystem.DeltaObjectHelper.DbEntity(_KnowledgeEngine)))
                entities.Add((currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull, _KnowledgeEngine));
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull)
                if (_ActivatedCommonBakens != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_ActivatedCommonBakens).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull)
                if (_PointMarkers != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_PointMarkers).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull)
                if (_PointsOfInterest != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_PointsOfInterest).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.Master) == (long)SharedCode.EntitySystem.ReplicationLevel.Master)
                if (_AutoAddToWorldSpace != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_AutoAddToWorldSpace).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.Master, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.Always) == (long)SharedCode.EntitySystem.ReplicationLevel.Always)
                if (_WorldSpaced != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_WorldSpaced).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.Always, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull)
                if (_Inventory != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_Inventory).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull)
                if (_Currency != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_Currency).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull)
                if (_Dialog != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_Dialog).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast)
                if (_Doll != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_Doll).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull)
                if (_TemporaryPerks != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_TemporaryPerks).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull)
                if (_PermanentPerks != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_PermanentPerks).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull)
                if (_SavedPerks != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_SavedPerks).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.Server) == (long)SharedCode.EntitySystem.ReplicationLevel.Server)
                if (_Statistics != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_Statistics).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.Server, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull)
                if (_PerksDestroyCount != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_PerksDestroyCount).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.Server) == (long)SharedCode.EntitySystem.ReplicationLevel.Server)
                if (_StatisticEngine != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_StatisticEngine).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.Server, onlyDbEntities);
            if (_CraftEngine != null && ((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & replicationMask) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull && (!onlyDbEntities || GeneratedCode.EntitySystem.DeltaObjectHelper.DbEntity(_CraftEngine)))
                entities.Add((currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull, _CraftEngine));
            if (_Wizard != null && ((long)SharedCode.EntitySystem.ReplicationLevel.Always & replicationMask) == (long)SharedCode.EntitySystem.ReplicationLevel.Always && (!onlyDbEntities || GeneratedCode.EntitySystem.DeltaObjectHelper.DbEntity(_Wizard)))
                entities.Add((currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.Always, _Wizard));
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast)
                if (_SlaveWizardHolder != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_SlaveWizardHolder).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.Always) == (long)SharedCode.EntitySystem.ReplicationLevel.Always)
                if (_SimpleStupidStats != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_SimpleStupidStats).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.Always, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.Always) == (long)SharedCode.EntitySystem.ReplicationLevel.Always)
                if (_ContainerApi != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_ContainerApi).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.Always, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast)
                if (_Health != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_Health).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.Always) == (long)SharedCode.EntitySystem.ReplicationLevel.Always)
                if (_Mortal != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_Mortal).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.Always, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull)
                if (_Brute != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_Brute).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast)
                if (_Stats != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_Stats).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast)
                if (_MutationMechanics != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_MutationMechanics).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull)
                if (_Traumas != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_Traumas).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull)
                if (_PingDiagnostics != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_PingDiagnostics).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull)
                if (_ItemsStatsAccumulator != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_ItemsStatsAccumulator).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull)
                if (_AuthorityOwner != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_AuthorityOwner).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.Always) == (long)SharedCode.EntitySystem.ReplicationLevel.Always)
                if (_MovementSync != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_MovementSync).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.Always, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.Always) == (long)SharedCode.EntitySystem.ReplicationLevel.Always)
                if (_LogableEntity != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_LogableEntity).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.Always, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast)
                if (_LocomotionOwner != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_LocomotionOwner).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull)
                if (_Consumer != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_Consumer).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull)
                if (_Quest != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_Quest).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull)
                if (_InputActionHandlers != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_InputActionHandlers).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.Master) == (long)SharedCode.EntitySystem.ReplicationLevel.Master)
                if (_ReactionsOwner != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_ReactionsOwner).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.Master, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull)
                if (_AttackEngine != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_AttackEngine).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast)
                if (_AnimationDoerOwner != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_AnimationDoerOwner).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull)
                if (_FounderPack != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_FounderPack).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.Master) == (long)SharedCode.EntitySystem.ReplicationLevel.Master)
                if (_SpatialDatahandlers != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_SpatialDatahandlers).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.Master, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.Always) == (long)SharedCode.EntitySystem.ReplicationLevel.Always)
                if (_Buffs != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_Buffs).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.Always, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast)
                if (_LinksEngine != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_LinksEngine).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull)
                if (_FogOfWar != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_FogOfWar).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull)
                if (_WorldObjectInformationSetsEngine != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_WorldObjectInformationSetsEngine).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientFull, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast)
                if (_worldPersonalMachineEngine != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_worldPersonalMachineEngine).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast)
                if (_AccountStats != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_AccountStats).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast) == (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast)
                if (_SpellModifiers != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_SpellModifiers).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.Master) == (long)SharedCode.EntitySystem.ReplicationLevel.Master)
                if (_SpellModifiersCollector != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_SpellModifiersCollector).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.Master, onlyDbEntities);
            if ((replicationMask & (long)SharedCode.EntitySystem.ReplicationLevel.Server) == (long)SharedCode.EntitySystem.ReplicationLevel.Server)
                if (_KillingRewardMechanics != null)
                    ((SharedCode.EntitySystem.IDeltaObject)_KillingRewardMechanics).GetAllLinkedEntities(replicationMask, entities, currentLevel | (long)SharedCode.EntitySystem.ReplicationLevel.Server, onlyDbEntities);
            base.GetAllLinkedEntities(replicationMask, entities, currentLevel, onlyDbEntities);
        }

        public override void LinkEntityRefs(SharedCode.EntitySystem.IEntitiesRepository repository)
        {
            base.LinkEntityRefs(repository);
            BuildingEngine = GeneratedCode.EntitySystem.DeltaObjectHelper.LinkEntityRef(GetType(), BuildingEngine, nameof(BuildingEngine), repository);
            KnowledgeEngine = GeneratedCode.EntitySystem.DeltaObjectHelper.LinkEntityRef(GetType(), KnowledgeEngine, nameof(KnowledgeEngine), repository);
            CraftEngine = GeneratedCode.EntitySystem.DeltaObjectHelper.LinkEntityRef(GetType(), CraftEngine, nameof(CraftEngine), repository);
            Wizard = GeneratedCode.EntitySystem.DeltaObjectHelper.LinkEntityRef(GetType(), Wizard, nameof(Wizard), repository);
        }

        public override void FillReplicationSetRecursive(System.Collections.Generic.Dictionary<SharedCode.EntitySystem.ReplicationLevel, System.Collections.Generic.Dictionary<SharedCode.EntitySystem.IDeltaObject, SharedCode.EntitySystem.DeltaObjectReplicationInfo>> replicationSets, System.Collections.Generic.HashSet<SharedCode.EntitySystem.ReplicationLevel> traverseReplicationLevels, SharedCode.EntitySystem.ReplicationLevel currentLevel, bool withBsonIgnore)
        {
            base.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, currentLevel, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _ActivatedCommonBakens, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientFull ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientFull, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _PointMarkers, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientFull ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientFull, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _PointsOfInterest, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientFull ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientFull, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _AutoAddToWorldSpace, currentLevel > SharedCode.EntitySystem.ReplicationLevel.Master ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.Master, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _WorldSpaced, currentLevel > SharedCode.EntitySystem.ReplicationLevel.Always ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.Always, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _Inventory, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientFull ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientFull, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _Currency, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientFull ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientFull, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _Dialog, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientFull ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientFull, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _Doll, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _TemporaryPerks, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientFull ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientFull, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _PermanentPerks, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientFull ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientFull, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _SavedPerks, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientFull ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientFull, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _Statistics, currentLevel > SharedCode.EntitySystem.ReplicationLevel.Server ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.Server, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _PerksDestroyCount, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientFull ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientFull, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _StatisticEngine, currentLevel > SharedCode.EntitySystem.ReplicationLevel.Server ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.Server, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _SlaveWizardHolder, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _SimpleStupidStats, currentLevel > SharedCode.EntitySystem.ReplicationLevel.Always ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.Always, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _ContainerApi, currentLevel > SharedCode.EntitySystem.ReplicationLevel.Always ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.Always, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _Health, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _Mortal, currentLevel > SharedCode.EntitySystem.ReplicationLevel.Always ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.Always, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _Brute, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientFull ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientFull, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _Stats, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _MutationMechanics, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _Traumas, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientFull ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientFull, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _PingDiagnostics, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientFull ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientFull, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _ItemsStatsAccumulator, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientFull ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientFull, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _AuthorityOwner, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientFull ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientFull, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _MovementSync, currentLevel > SharedCode.EntitySystem.ReplicationLevel.Always ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.Always, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _LogableEntity, currentLevel > SharedCode.EntitySystem.ReplicationLevel.Always ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.Always, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _LocomotionOwner, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _Consumer, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientFull ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientFull, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _Quest, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientFull ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientFull, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _InputActionHandlers, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientFull ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientFull, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _ReactionsOwner, currentLevel > SharedCode.EntitySystem.ReplicationLevel.Master ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.Master, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _AttackEngine, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientFull ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientFull, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _AnimationDoerOwner, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _FounderPack, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientFull ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientFull, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _SpatialDatahandlers, currentLevel > SharedCode.EntitySystem.ReplicationLevel.Master ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.Master, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _Buffs, currentLevel > SharedCode.EntitySystem.ReplicationLevel.Always ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.Always, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _LinksEngine, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _FogOfWar, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientFull ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientFull, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _WorldObjectInformationSetsEngine, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientFull ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientFull, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _worldPersonalMachineEngine, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _AccountStats, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _SpellModifiers, currentLevel > SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, false, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _SpellModifiersCollector, currentLevel > SharedCode.EntitySystem.ReplicationLevel.Master ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.Master, true, withBsonIgnore);
            GeneratedCode.EntitySystem.DeltaObjectHelper.FillReplicationSetRecursive(replicationSets, traverseReplicationLevels, _KillingRewardMechanics, currentLevel > SharedCode.EntitySystem.ReplicationLevel.Server ? currentLevel : SharedCode.EntitySystem.ReplicationLevel.Server, true, withBsonIgnore);
        }

        public override void LinkChangedDeltaObjects(System.Collections.Generic.Dictionary<ulong, SharedCode.Serializers.Protobuf.DeserializedObjectInfo> deserializedObjects, SharedCode.EntitySystem.IEntity parentEntity)
        {
            base.LinkChangedDeltaObjects(deserializedObjects, parentEntity);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _ActivatedCommonBakens, 13, false, SharedCode.EntitySystem.ReplicationLevel.ClientFull);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _PointMarkers, 14, false, SharedCode.EntitySystem.ReplicationLevel.ClientFull);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _PointsOfInterest, 15, false, SharedCode.EntitySystem.ReplicationLevel.ClientFull);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _AutoAddToWorldSpace, 28, false, SharedCode.EntitySystem.ReplicationLevel.Master);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _WorldSpaced, 29, false, SharedCode.EntitySystem.ReplicationLevel.Always);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _Inventory, 30, false, SharedCode.EntitySystem.ReplicationLevel.ClientFull);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _Currency, 31, false, SharedCode.EntitySystem.ReplicationLevel.ClientFull);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _Dialog, 32, false, SharedCode.EntitySystem.ReplicationLevel.ClientFull);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _Doll, 33, false, SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _TemporaryPerks, 34, false, SharedCode.EntitySystem.ReplicationLevel.ClientFull);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _PermanentPerks, 35, false, SharedCode.EntitySystem.ReplicationLevel.ClientFull);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _SavedPerks, 36, false, SharedCode.EntitySystem.ReplicationLevel.ClientFull);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _Statistics, 37, false, SharedCode.EntitySystem.ReplicationLevel.Server);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _PerksDestroyCount, 38, false, SharedCode.EntitySystem.ReplicationLevel.ClientFull);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _StatisticEngine, 40, false, SharedCode.EntitySystem.ReplicationLevel.Server);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _SlaveWizardHolder, 43, false, SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _SimpleStupidStats, 44, false, SharedCode.EntitySystem.ReplicationLevel.Always);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _ContainerApi, 45, false, SharedCode.EntitySystem.ReplicationLevel.Always);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _Health, 47, false, SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _Mortal, 48, false, SharedCode.EntitySystem.ReplicationLevel.Always);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _Brute, 49, false, SharedCode.EntitySystem.ReplicationLevel.ClientFull);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _Stats, 50, false, SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _MutationMechanics, 51, false, SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _Traumas, 54, false, SharedCode.EntitySystem.ReplicationLevel.ClientFull);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _PingDiagnostics, 55, false, SharedCode.EntitySystem.ReplicationLevel.ClientFull);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _ItemsStatsAccumulator, 56, false, SharedCode.EntitySystem.ReplicationLevel.ClientFull);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _AuthorityOwner, 57, false, SharedCode.EntitySystem.ReplicationLevel.ClientFull);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _MovementSync, 58, false, SharedCode.EntitySystem.ReplicationLevel.Always);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _LogableEntity, 59, false, SharedCode.EntitySystem.ReplicationLevel.Always);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _LocomotionOwner, 60, false, SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _Consumer, 61, false, SharedCode.EntitySystem.ReplicationLevel.ClientFull);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _Quest, 62, false, SharedCode.EntitySystem.ReplicationLevel.ClientFull);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _InputActionHandlers, 63, true, SharedCode.EntitySystem.ReplicationLevel.ClientFull);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _ReactionsOwner, 64, false, SharedCode.EntitySystem.ReplicationLevel.Master);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _AttackEngine, 65, false, SharedCode.EntitySystem.ReplicationLevel.ClientFull);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _AnimationDoerOwner, 66, false, SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _FounderPack, 67, false, SharedCode.EntitySystem.ReplicationLevel.ClientFull);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _SpatialDatahandlers, 68, false, SharedCode.EntitySystem.ReplicationLevel.Master);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _Buffs, 69, false, SharedCode.EntitySystem.ReplicationLevel.Always);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _LinksEngine, 70, false, SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _FogOfWar, 71, false, SharedCode.EntitySystem.ReplicationLevel.ClientFull);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _WorldObjectInformationSetsEngine, 72, false, SharedCode.EntitySystem.ReplicationLevel.ClientFull);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _worldPersonalMachineEngine, 73, false, SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _AccountStats, 74, false, SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _SpellModifiers, 75, false, SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _SpellModifiersCollector, 76, false, SharedCode.EntitySystem.ReplicationLevel.Master);
            GeneratedCode.EntitySystem.DeltaObjectHelper.LinkChangedDeltaObject(deserializedObjects, parentEntity, this, ref _KillingRewardMechanics, 77, false, SharedCode.EntitySystem.ReplicationLevel.Server);
        }

        public override void IncrementParentRefs(SharedCode.EntitySystem.IEntity parentEntity, bool trackChanged)
        {
            base.IncrementParentRefs(parentEntity, trackChanged);
            if (ParentEntityRefCount == 1)
            {
                ((SharedCode.EntitySystem.IDeltaObjectExt)_ActivatedCommonBakens)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_PointMarkers)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_PointsOfInterest)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_AutoAddToWorldSpace)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_WorldSpaced)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Inventory)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Currency)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Dialog)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Doll)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_TemporaryPerks)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_PermanentPerks)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_SavedPerks)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Statistics)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_PerksDestroyCount)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_StatisticEngine)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_SlaveWizardHolder)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_SimpleStupidStats)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_ContainerApi)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Health)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Mortal)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Brute)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Stats)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_MutationMechanics)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Traumas)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_PingDiagnostics)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_ItemsStatsAccumulator)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_AuthorityOwner)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_MovementSync)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_LogableEntity)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_LocomotionOwner)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Consumer)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Quest)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_InputActionHandlers)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_ReactionsOwner)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_AttackEngine)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_AnimationDoerOwner)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_FounderPack)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_SpatialDatahandlers)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Buffs)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_LinksEngine)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_FogOfWar)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_WorldObjectInformationSetsEngine)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_worldPersonalMachineEngine)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_AccountStats)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_SpellModifiers)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_SpellModifiersCollector)?.IncrementParentRefs(parentEntity, trackChanged);
                ((SharedCode.EntitySystem.IDeltaObjectExt)_KillingRewardMechanics)?.IncrementParentRefs(parentEntity, trackChanged);
            }
        }

        public override void ReplicationLevelActualize(SharedCode.EntitySystem.ReplicationLevel? actualParentLevel, SharedCode.EntitySystem.ReplicationLevel? oldParentLevel)
        {
            base.ReplicationLevelActualize(actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize((SharedCode.EntitySystem.IEntitiesRepositoryExtension)EntitiesRepository, parentEntity, _BuildingEngine, SharedCode.EntitySystem.ReplicationLevel.ClientFull, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize((SharedCode.EntitySystem.IEntitiesRepositoryExtension)EntitiesRepository, parentEntity, _KnowledgeEngine, SharedCode.EntitySystem.ReplicationLevel.ClientFull, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _ActivatedCommonBakens, SharedCode.EntitySystem.ReplicationLevel.ClientFull, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _PointMarkers, SharedCode.EntitySystem.ReplicationLevel.ClientFull, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _PointsOfInterest, SharedCode.EntitySystem.ReplicationLevel.ClientFull, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _AutoAddToWorldSpace, SharedCode.EntitySystem.ReplicationLevel.Master, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _WorldSpaced, SharedCode.EntitySystem.ReplicationLevel.Always, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _Inventory, SharedCode.EntitySystem.ReplicationLevel.ClientFull, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _Currency, SharedCode.EntitySystem.ReplicationLevel.ClientFull, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _Dialog, SharedCode.EntitySystem.ReplicationLevel.ClientFull, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _Doll, SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _TemporaryPerks, SharedCode.EntitySystem.ReplicationLevel.ClientFull, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _PermanentPerks, SharedCode.EntitySystem.ReplicationLevel.ClientFull, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _SavedPerks, SharedCode.EntitySystem.ReplicationLevel.ClientFull, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _Statistics, SharedCode.EntitySystem.ReplicationLevel.Server, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _PerksDestroyCount, SharedCode.EntitySystem.ReplicationLevel.ClientFull, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _StatisticEngine, SharedCode.EntitySystem.ReplicationLevel.Server, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize((SharedCode.EntitySystem.IEntitiesRepositoryExtension)EntitiesRepository, parentEntity, _CraftEngine, SharedCode.EntitySystem.ReplicationLevel.ClientFull, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize((SharedCode.EntitySystem.IEntitiesRepositoryExtension)EntitiesRepository, parentEntity, _Wizard, SharedCode.EntitySystem.ReplicationLevel.Always, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _SlaveWizardHolder, SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _SimpleStupidStats, SharedCode.EntitySystem.ReplicationLevel.Always, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _ContainerApi, SharedCode.EntitySystem.ReplicationLevel.Always, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _Health, SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _Mortal, SharedCode.EntitySystem.ReplicationLevel.Always, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _Brute, SharedCode.EntitySystem.ReplicationLevel.ClientFull, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _Stats, SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _MutationMechanics, SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _Traumas, SharedCode.EntitySystem.ReplicationLevel.ClientFull, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _PingDiagnostics, SharedCode.EntitySystem.ReplicationLevel.ClientFull, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _ItemsStatsAccumulator, SharedCode.EntitySystem.ReplicationLevel.ClientFull, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _AuthorityOwner, SharedCode.EntitySystem.ReplicationLevel.ClientFull, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _MovementSync, SharedCode.EntitySystem.ReplicationLevel.Always, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _LogableEntity, SharedCode.EntitySystem.ReplicationLevel.Always, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _LocomotionOwner, SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _Consumer, SharedCode.EntitySystem.ReplicationLevel.ClientFull, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _Quest, SharedCode.EntitySystem.ReplicationLevel.ClientFull, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _InputActionHandlers, SharedCode.EntitySystem.ReplicationLevel.ClientFull, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _ReactionsOwner, SharedCode.EntitySystem.ReplicationLevel.Master, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _AttackEngine, SharedCode.EntitySystem.ReplicationLevel.ClientFull, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _AnimationDoerOwner, SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _FounderPack, SharedCode.EntitySystem.ReplicationLevel.ClientFull, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _SpatialDatahandlers, SharedCode.EntitySystem.ReplicationLevel.Master, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _Buffs, SharedCode.EntitySystem.ReplicationLevel.Always, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _LinksEngine, SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _FogOfWar, SharedCode.EntitySystem.ReplicationLevel.ClientFull, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _WorldObjectInformationSetsEngine, SharedCode.EntitySystem.ReplicationLevel.ClientFull, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _worldPersonalMachineEngine, SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _AccountStats, SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _SpellModifiers, SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _SpellModifiersCollector, SharedCode.EntitySystem.ReplicationLevel.Master, actualParentLevel, oldParentLevel);
            GeneratedCode.EntitySystem.DeltaObjectHelper.ReplicationLevelActualize(parentEntity, _KillingRewardMechanics, SharedCode.EntitySystem.ReplicationLevel.Server, actualParentLevel, oldParentLevel);
        }

        public override void DecrementParentRefs()
        {
            base.DecrementParentRefs();
            if (!HasParentRef())
            {
                ((SharedCode.EntitySystem.IDeltaObjectExt)_ActivatedCommonBakens)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_PointMarkers)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_PointsOfInterest)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_AutoAddToWorldSpace)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_WorldSpaced)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Inventory)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Currency)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Dialog)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Doll)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_TemporaryPerks)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_PermanentPerks)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_SavedPerks)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Statistics)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_PerksDestroyCount)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_StatisticEngine)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_SlaveWizardHolder)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_SimpleStupidStats)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_ContainerApi)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Health)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Mortal)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Brute)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Stats)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_MutationMechanics)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Traumas)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_PingDiagnostics)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_ItemsStatsAccumulator)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_AuthorityOwner)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_MovementSync)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_LogableEntity)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_LocomotionOwner)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Consumer)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Quest)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_InputActionHandlers)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_ReactionsOwner)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_AttackEngine)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_AnimationDoerOwner)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_FounderPack)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_SpatialDatahandlers)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Buffs)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_LinksEngine)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_FogOfWar)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_WorldObjectInformationSetsEngine)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_worldPersonalMachineEngine)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_AccountStats)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_SpellModifiers)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_SpellModifiersCollector)?.DecrementParentRefs();
                ((SharedCode.EntitySystem.IDeltaObjectExt)_KillingRewardMechanics)?.DecrementParentRefs();
            }
        }

        protected override void Subscribe(string propertyName, SharedCode.EntitySystem.PropertyChangedDelegate callback)
        {
            base.Subscribe(propertyName, callback);
            switch (propertyName)
            {
                case "BuildingEngine":
                    BuildingEngine__Changed += callback;
                    break;
                case "KnowledgeEngine":
                    KnowledgeEngine__Changed += callback;
                    break;
                case "LastActivatedWasCommonBaken":
                    LastActivatedWasCommonBaken__Changed += callback;
                    break;
                case "ActivatedCommonBakens":
                    ActivatedCommonBakens__Changed += callback;
                    break;
                case "PointMarkers":
                    PointMarkers__Changed += callback;
                    break;
                case "PointsOfInterest":
                    PointsOfInterest__Changed += callback;
                    break;
                case "TimeWhenUserDisconnected":
                    TimeWhenUserDisconnected__Changed += callback;
                    break;
                case "IsIdle":
                    IsIdle__Changed += callback;
                    break;
                case "IsAFK":
                    IsAFK__Changed += callback;
                    break;
                case "SessionId":
                    SessionId__Changed += callback;
                    break;
                case "AccountId":
                    AccountId__Changed += callback;
                    break;
                case "Def":
                    Def__Changed += callback;
                    break;
                case "MapOwner":
                    MapOwner__Changed += callback;
                    break;
                case "StaticIdFromExport":
                    StaticIdFromExport__Changed += callback;
                    break;
                case "Name":
                    Name__Changed += callback;
                    break;
                case "Prefab":
                    Prefab__Changed += callback;
                    break;
                case "SomeUnknownResourceThatMayBeUseful":
                    SomeUnknownResourceThatMayBeUseful__Changed += callback;
                    break;
                case "OnSceneObjectNetId":
                    OnSceneObjectNetId__Changed += callback;
                    break;
                case "AutoAddToWorldSpace":
                    AutoAddToWorldSpace__Changed += callback;
                    break;
                case "WorldSpaced":
                    WorldSpaced__Changed += callback;
                    break;
                case "Inventory":
                    Inventory__Changed += callback;
                    break;
                case "Currency":
                    Currency__Changed += callback;
                    break;
                case "Dialog":
                    Dialog__Changed += callback;
                    break;
                case "Doll":
                    Doll__Changed += callback;
                    break;
                case "TemporaryPerks":
                    TemporaryPerks__Changed += callback;
                    break;
                case "PermanentPerks":
                    PermanentPerks__Changed += callback;
                    break;
                case "SavedPerks":
                    SavedPerks__Changed += callback;
                    break;
                case "Statistics":
                    Statistics__Changed += callback;
                    break;
                case "PerksDestroyCount":
                    PerksDestroyCount__Changed += callback;
                    break;
                case "PerkActionsPrices":
                    PerkActionsPrices__Changed += callback;
                    break;
                case "StatisticEngine":
                    StatisticEngine__Changed += callback;
                    break;
                case "CraftEngine":
                    CraftEngine__Changed += callback;
                    break;
                case "Wizard":
                    Wizard__Changed += callback;
                    break;
                case "SlaveWizardHolder":
                    SlaveWizardHolder__Changed += callback;
                    break;
                case "SimpleStupidStats":
                    SimpleStupidStats__Changed += callback;
                    break;
                case "ContainerApi":
                    ContainerApi__Changed += callback;
                    break;
                case "AllowedSpawnPoint":
                    AllowedSpawnPoint__Changed += callback;
                    break;
                case "Health":
                    Health__Changed += callback;
                    break;
                case "Mortal":
                    Mortal__Changed += callback;
                    break;
                case "Brute":
                    Brute__Changed += callback;
                    break;
                case "Stats":
                    Stats__Changed += callback;
                    break;
                case "MutationMechanics":
                    MutationMechanics__Changed += callback;
                    break;
                case "Faction":
                    Faction__Changed += callback;
                    break;
                case "Gender":
                    Gender__Changed += callback;
                    break;
                case "Traumas":
                    Traumas__Changed += callback;
                    break;
                case "PingDiagnostics":
                    PingDiagnostics__Changed += callback;
                    break;
                case "ItemsStatsAccumulator":
                    ItemsStatsAccumulator__Changed += callback;
                    break;
                case "AuthorityOwner":
                    AuthorityOwner__Changed += callback;
                    break;
                case "MovementSync":
                    MovementSync__Changed += callback;
                    break;
                case "LogableEntity":
                    LogableEntity__Changed += callback;
                    break;
                case "LocomotionOwner":
                    LocomotionOwner__Changed += callback;
                    break;
                case "Consumer":
                    Consumer__Changed += callback;
                    break;
                case "Quest":
                    Quest__Changed += callback;
                    break;
                case "InputActionHandlers":
                    InputActionHandlers__Changed += callback;
                    break;
                case "ReactionsOwner":
                    ReactionsOwner__Changed += callback;
                    break;
                case "AttackEngine":
                    AttackEngine__Changed += callback;
                    break;
                case "AnimationDoerOwner":
                    AnimationDoerOwner__Changed += callback;
                    break;
                case "FounderPack":
                    FounderPack__Changed += callback;
                    break;
                case "SpatialDatahandlers":
                    SpatialDatahandlers__Changed += callback;
                    break;
                case "Buffs":
                    Buffs__Changed += callback;
                    break;
                case "LinksEngine":
                    LinksEngine__Changed += callback;
                    break;
                case "FogOfWar":
                    FogOfWar__Changed += callback;
                    break;
                case "WorldObjectInformationSetsEngine":
                    WorldObjectInformationSetsEngine__Changed += callback;
                    break;
                case "worldPersonalMachineEngine":
                    worldPersonalMachineEngine__Changed += callback;
                    break;
                case "AccountStats":
                    AccountStats__Changed += callback;
                    break;
                case "SpellModifiers":
                    SpellModifiers__Changed += callback;
                    break;
                case "SpellModifiersCollector":
                    SpellModifiersCollector__Changed += callback;
                    break;
                case "KillingRewardMechanics":
                    KillingRewardMechanics__Changed += callback;
                    break;
                default:
                    throw new System.ArgumentException($"Field {propertyName} does not exist in {GetType()}", nameof(propertyName));
            }
        }

        protected override void Unsubscribe(string propertyName, SharedCode.EntitySystem.PropertyChangedDelegate callback)
        {
            base.Unsubscribe(propertyName, callback);
            switch (propertyName)
            {
                case "BuildingEngine":
                    BuildingEngine__Changed -= callback;
                    break;
                case "KnowledgeEngine":
                    KnowledgeEngine__Changed -= callback;
                    break;
                case "LastActivatedWasCommonBaken":
                    LastActivatedWasCommonBaken__Changed -= callback;
                    break;
                case "ActivatedCommonBakens":
                    ActivatedCommonBakens__Changed -= callback;
                    break;
                case "PointMarkers":
                    PointMarkers__Changed -= callback;
                    break;
                case "PointsOfInterest":
                    PointsOfInterest__Changed -= callback;
                    break;
                case "TimeWhenUserDisconnected":
                    TimeWhenUserDisconnected__Changed -= callback;
                    break;
                case "IsIdle":
                    IsIdle__Changed -= callback;
                    break;
                case "IsAFK":
                    IsAFK__Changed -= callback;
                    break;
                case "SessionId":
                    SessionId__Changed -= callback;
                    break;
                case "AccountId":
                    AccountId__Changed -= callback;
                    break;
                case "Def":
                    Def__Changed -= callback;
                    break;
                case "MapOwner":
                    MapOwner__Changed -= callback;
                    break;
                case "StaticIdFromExport":
                    StaticIdFromExport__Changed -= callback;
                    break;
                case "Name":
                    Name__Changed -= callback;
                    break;
                case "Prefab":
                    Prefab__Changed -= callback;
                    break;
                case "SomeUnknownResourceThatMayBeUseful":
                    SomeUnknownResourceThatMayBeUseful__Changed -= callback;
                    break;
                case "OnSceneObjectNetId":
                    OnSceneObjectNetId__Changed -= callback;
                    break;
                case "AutoAddToWorldSpace":
                    AutoAddToWorldSpace__Changed -= callback;
                    break;
                case "WorldSpaced":
                    WorldSpaced__Changed -= callback;
                    break;
                case "Inventory":
                    Inventory__Changed -= callback;
                    break;
                case "Currency":
                    Currency__Changed -= callback;
                    break;
                case "Dialog":
                    Dialog__Changed -= callback;
                    break;
                case "Doll":
                    Doll__Changed -= callback;
                    break;
                case "TemporaryPerks":
                    TemporaryPerks__Changed -= callback;
                    break;
                case "PermanentPerks":
                    PermanentPerks__Changed -= callback;
                    break;
                case "SavedPerks":
                    SavedPerks__Changed -= callback;
                    break;
                case "Statistics":
                    Statistics__Changed -= callback;
                    break;
                case "PerksDestroyCount":
                    PerksDestroyCount__Changed -= callback;
                    break;
                case "PerkActionsPrices":
                    PerkActionsPrices__Changed -= callback;
                    break;
                case "StatisticEngine":
                    StatisticEngine__Changed -= callback;
                    break;
                case "CraftEngine":
                    CraftEngine__Changed -= callback;
                    break;
                case "Wizard":
                    Wizard__Changed -= callback;
                    break;
                case "SlaveWizardHolder":
                    SlaveWizardHolder__Changed -= callback;
                    break;
                case "SimpleStupidStats":
                    SimpleStupidStats__Changed -= callback;
                    break;
                case "ContainerApi":
                    ContainerApi__Changed -= callback;
                    break;
                case "AllowedSpawnPoint":
                    AllowedSpawnPoint__Changed -= callback;
                    break;
                case "Health":
                    Health__Changed -= callback;
                    break;
                case "Mortal":
                    Mortal__Changed -= callback;
                    break;
                case "Brute":
                    Brute__Changed -= callback;
                    break;
                case "Stats":
                    Stats__Changed -= callback;
                    break;
                case "MutationMechanics":
                    MutationMechanics__Changed -= callback;
                    break;
                case "Faction":
                    Faction__Changed -= callback;
                    break;
                case "Gender":
                    Gender__Changed -= callback;
                    break;
                case "Traumas":
                    Traumas__Changed -= callback;
                    break;
                case "PingDiagnostics":
                    PingDiagnostics__Changed -= callback;
                    break;
                case "ItemsStatsAccumulator":
                    ItemsStatsAccumulator__Changed -= callback;
                    break;
                case "AuthorityOwner":
                    AuthorityOwner__Changed -= callback;
                    break;
                case "MovementSync":
                    MovementSync__Changed -= callback;
                    break;
                case "LogableEntity":
                    LogableEntity__Changed -= callback;
                    break;
                case "LocomotionOwner":
                    LocomotionOwner__Changed -= callback;
                    break;
                case "Consumer":
                    Consumer__Changed -= callback;
                    break;
                case "Quest":
                    Quest__Changed -= callback;
                    break;
                case "InputActionHandlers":
                    InputActionHandlers__Changed -= callback;
                    break;
                case "ReactionsOwner":
                    ReactionsOwner__Changed -= callback;
                    break;
                case "AttackEngine":
                    AttackEngine__Changed -= callback;
                    break;
                case "AnimationDoerOwner":
                    AnimationDoerOwner__Changed -= callback;
                    break;
                case "FounderPack":
                    FounderPack__Changed -= callback;
                    break;
                case "SpatialDatahandlers":
                    SpatialDatahandlers__Changed -= callback;
                    break;
                case "Buffs":
                    Buffs__Changed -= callback;
                    break;
                case "LinksEngine":
                    LinksEngine__Changed -= callback;
                    break;
                case "FogOfWar":
                    FogOfWar__Changed -= callback;
                    break;
                case "WorldObjectInformationSetsEngine":
                    WorldObjectInformationSetsEngine__Changed -= callback;
                    break;
                case "worldPersonalMachineEngine":
                    worldPersonalMachineEngine__Changed -= callback;
                    break;
                case "AccountStats":
                    AccountStats__Changed -= callback;
                    break;
                case "SpellModifiers":
                    SpellModifiers__Changed -= callback;
                    break;
                case "SpellModifiersCollector":
                    SpellModifiersCollector__Changed -= callback;
                    break;
                case "KillingRewardMechanics":
                    KillingRewardMechanics__Changed -= callback;
                    break;
                default:
                    throw new System.ArgumentException($"Field {propertyName} does not exist in {GetType()}", nameof(propertyName));
            }
        }

        protected override void Unsubscribe(string propertyName)
        {
            base.Unsubscribe(propertyName);
            switch (propertyName)
            {
                case "BuildingEngine":
                    BuildingEngine__Changed = null;
                    break;
                case "KnowledgeEngine":
                    KnowledgeEngine__Changed = null;
                    break;
                case "LastActivatedWasCommonBaken":
                    LastActivatedWasCommonBaken__Changed = null;
                    break;
                case "ActivatedCommonBakens":
                    ActivatedCommonBakens__Changed = null;
                    break;
                case "PointMarkers":
                    PointMarkers__Changed = null;
                    break;
                case "PointsOfInterest":
                    PointsOfInterest__Changed = null;
                    break;
                case "TimeWhenUserDisconnected":
                    TimeWhenUserDisconnected__Changed = null;
                    break;
                case "IsIdle":
                    IsIdle__Changed = null;
                    break;
                case "IsAFK":
                    IsAFK__Changed = null;
                    break;
                case "SessionId":
                    SessionId__Changed = null;
                    break;
                case "AccountId":
                    AccountId__Changed = null;
                    break;
                case "Def":
                    Def__Changed = null;
                    break;
                case "MapOwner":
                    MapOwner__Changed = null;
                    break;
                case "StaticIdFromExport":
                    StaticIdFromExport__Changed = null;
                    break;
                case "Name":
                    Name__Changed = null;
                    break;
                case "Prefab":
                    Prefab__Changed = null;
                    break;
                case "SomeUnknownResourceThatMayBeUseful":
                    SomeUnknownResourceThatMayBeUseful__Changed = null;
                    break;
                case "OnSceneObjectNetId":
                    OnSceneObjectNetId__Changed = null;
                    break;
                case "AutoAddToWorldSpace":
                    AutoAddToWorldSpace__Changed = null;
                    break;
                case "WorldSpaced":
                    WorldSpaced__Changed = null;
                    break;
                case "Inventory":
                    Inventory__Changed = null;
                    break;
                case "Currency":
                    Currency__Changed = null;
                    break;
                case "Dialog":
                    Dialog__Changed = null;
                    break;
                case "Doll":
                    Doll__Changed = null;
                    break;
                case "TemporaryPerks":
                    TemporaryPerks__Changed = null;
                    break;
                case "PermanentPerks":
                    PermanentPerks__Changed = null;
                    break;
                case "SavedPerks":
                    SavedPerks__Changed = null;
                    break;
                case "Statistics":
                    Statistics__Changed = null;
                    break;
                case "PerksDestroyCount":
                    PerksDestroyCount__Changed = null;
                    break;
                case "PerkActionsPrices":
                    PerkActionsPrices__Changed = null;
                    break;
                case "StatisticEngine":
                    StatisticEngine__Changed = null;
                    break;
                case "CraftEngine":
                    CraftEngine__Changed = null;
                    break;
                case "Wizard":
                    Wizard__Changed = null;
                    break;
                case "SlaveWizardHolder":
                    SlaveWizardHolder__Changed = null;
                    break;
                case "SimpleStupidStats":
                    SimpleStupidStats__Changed = null;
                    break;
                case "ContainerApi":
                    ContainerApi__Changed = null;
                    break;
                case "AllowedSpawnPoint":
                    AllowedSpawnPoint__Changed = null;
                    break;
                case "Health":
                    Health__Changed = null;
                    break;
                case "Mortal":
                    Mortal__Changed = null;
                    break;
                case "Brute":
                    Brute__Changed = null;
                    break;
                case "Stats":
                    Stats__Changed = null;
                    break;
                case "MutationMechanics":
                    MutationMechanics__Changed = null;
                    break;
                case "Faction":
                    Faction__Changed = null;
                    break;
                case "Gender":
                    Gender__Changed = null;
                    break;
                case "Traumas":
                    Traumas__Changed = null;
                    break;
                case "PingDiagnostics":
                    PingDiagnostics__Changed = null;
                    break;
                case "ItemsStatsAccumulator":
                    ItemsStatsAccumulator__Changed = null;
                    break;
                case "AuthorityOwner":
                    AuthorityOwner__Changed = null;
                    break;
                case "MovementSync":
                    MovementSync__Changed = null;
                    break;
                case "LogableEntity":
                    LogableEntity__Changed = null;
                    break;
                case "LocomotionOwner":
                    LocomotionOwner__Changed = null;
                    break;
                case "Consumer":
                    Consumer__Changed = null;
                    break;
                case "Quest":
                    Quest__Changed = null;
                    break;
                case "InputActionHandlers":
                    InputActionHandlers__Changed = null;
                    break;
                case "ReactionsOwner":
                    ReactionsOwner__Changed = null;
                    break;
                case "AttackEngine":
                    AttackEngine__Changed = null;
                    break;
                case "AnimationDoerOwner":
                    AnimationDoerOwner__Changed = null;
                    break;
                case "FounderPack":
                    FounderPack__Changed = null;
                    break;
                case "SpatialDatahandlers":
                    SpatialDatahandlers__Changed = null;
                    break;
                case "Buffs":
                    Buffs__Changed = null;
                    break;
                case "LinksEngine":
                    LinksEngine__Changed = null;
                    break;
                case "FogOfWar":
                    FogOfWar__Changed = null;
                    break;
                case "WorldObjectInformationSetsEngine":
                    WorldObjectInformationSetsEngine__Changed = null;
                    break;
                case "worldPersonalMachineEngine":
                    worldPersonalMachineEngine__Changed = null;
                    break;
                case "AccountStats":
                    AccountStats__Changed = null;
                    break;
                case "SpellModifiers":
                    SpellModifiers__Changed = null;
                    break;
                case "SpellModifiersCollector":
                    SpellModifiersCollector__Changed = null;
                    break;
                case "KillingRewardMechanics":
                    KillingRewardMechanics__Changed = null;
                    break;
                default:
                    throw new System.ArgumentException($"Field {propertyName} does not exist in {GetType()}", nameof(propertyName));
            }
        }

        protected override void Unsubscribe()
        {
            base.Unsubscribe();
            BuildingEngine__Changed = null;
            KnowledgeEngine__Changed = null;
            LastActivatedWasCommonBaken__Changed = null;
            ActivatedCommonBakens__Changed = null;
            PointMarkers__Changed = null;
            PointsOfInterest__Changed = null;
            TimeWhenUserDisconnected__Changed = null;
            IsIdle__Changed = null;
            IsAFK__Changed = null;
            SessionId__Changed = null;
            AccountId__Changed = null;
            Def__Changed = null;
            MapOwner__Changed = null;
            StaticIdFromExport__Changed = null;
            Name__Changed = null;
            Prefab__Changed = null;
            SomeUnknownResourceThatMayBeUseful__Changed = null;
            OnSceneObjectNetId__Changed = null;
            AutoAddToWorldSpace__Changed = null;
            WorldSpaced__Changed = null;
            Inventory__Changed = null;
            Currency__Changed = null;
            Dialog__Changed = null;
            Doll__Changed = null;
            TemporaryPerks__Changed = null;
            PermanentPerks__Changed = null;
            SavedPerks__Changed = null;
            Statistics__Changed = null;
            PerksDestroyCount__Changed = null;
            PerkActionsPrices__Changed = null;
            StatisticEngine__Changed = null;
            CraftEngine__Changed = null;
            Wizard__Changed = null;
            SlaveWizardHolder__Changed = null;
            SimpleStupidStats__Changed = null;
            ContainerApi__Changed = null;
            AllowedSpawnPoint__Changed = null;
            Health__Changed = null;
            Mortal__Changed = null;
            Brute__Changed = null;
            Stats__Changed = null;
            MutationMechanics__Changed = null;
            Faction__Changed = null;
            Gender__Changed = null;
            Traumas__Changed = null;
            PingDiagnostics__Changed = null;
            ItemsStatsAccumulator__Changed = null;
            AuthorityOwner__Changed = null;
            MovementSync__Changed = null;
            LogableEntity__Changed = null;
            LocomotionOwner__Changed = null;
            Consumer__Changed = null;
            Quest__Changed = null;
            InputActionHandlers__Changed = null;
            ReactionsOwner__Changed = null;
            AttackEngine__Changed = null;
            AnimationDoerOwner__Changed = null;
            FounderPack__Changed = null;
            SpatialDatahandlers__Changed = null;
            Buffs__Changed = null;
            LinksEngine__Changed = null;
            FogOfWar__Changed = null;
            WorldObjectInformationSetsEngine__Changed = null;
            worldPersonalMachineEngine__Changed = null;
            AccountStats__Changed = null;
            SpellModifiers__Changed = null;
            SpellModifiersCollector__Changed = null;
            KillingRewardMechanics__Changed = null;
        }

        protected override void FireEvents(System.Collections.Generic.List<System.Func<System.Threading.Tasks.Task>> container)
        {
            base.FireEvents(container);
            if (NeedFireEvent(10) && BuildingEngine__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 10;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_BuildingEngine, nameof(BuildingEngine), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, BuildingEngine__Changed);
            }

            if (NeedFireEvent(11) && KnowledgeEngine__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 11;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_KnowledgeEngine, nameof(KnowledgeEngine), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, KnowledgeEngine__Changed);
            }

            if (NeedFireEvent(12) && LastActivatedWasCommonBaken__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 12;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_LastActivatedWasCommonBaken, nameof(LastActivatedWasCommonBaken), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, LastActivatedWasCommonBaken__Changed);
            }

            if (NeedFireEvent(13) && ActivatedCommonBakens__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 13;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_ActivatedCommonBakens, nameof(ActivatedCommonBakens), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, ActivatedCommonBakens__Changed);
            }

            if (NeedFireEvent(14) && PointMarkers__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 14;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_PointMarkers, nameof(PointMarkers), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, PointMarkers__Changed);
            }

            if (NeedFireEvent(15) && PointsOfInterest__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 15;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_PointsOfInterest, nameof(PointsOfInterest), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, PointsOfInterest__Changed);
            }

            if (NeedFireEvent(16) && TimeWhenUserDisconnected__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 16;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_TimeWhenUserDisconnected, nameof(TimeWhenUserDisconnected), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, TimeWhenUserDisconnected__Changed);
            }

            if (NeedFireEvent(17) && IsIdle__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 17;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_IsIdle, nameof(IsIdle), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, IsIdle__Changed);
            }

            if (NeedFireEvent(18) && IsAFK__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 18;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_IsAFK, nameof(IsAFK), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, IsAFK__Changed);
            }

            if (NeedFireEvent(19) && SessionId__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 19;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_SessionId, nameof(SessionId), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, SessionId__Changed);
            }

            if (NeedFireEvent(20) && AccountId__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 20;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_AccountId, nameof(AccountId), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, AccountId__Changed);
            }

            if (NeedFireEvent(21) && Def__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 21;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Def, nameof(Def), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Def__Changed);
            }

            if (NeedFireEvent(22) && MapOwner__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 22;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_MapOwner, nameof(MapOwner), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, MapOwner__Changed);
            }

            if (NeedFireEvent(23) && StaticIdFromExport__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 23;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_StaticIdFromExport, nameof(StaticIdFromExport), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, StaticIdFromExport__Changed);
            }

            if (NeedFireEvent(24) && Name__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 24;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Name, nameof(Name), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Name__Changed);
            }

            if (NeedFireEvent(25) && Prefab__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 25;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Prefab, nameof(Prefab), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Prefab__Changed);
            }

            if (NeedFireEvent(26) && SomeUnknownResourceThatMayBeUseful__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 26;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_SomeUnknownResourceThatMayBeUseful, nameof(SomeUnknownResourceThatMayBeUseful), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, SomeUnknownResourceThatMayBeUseful__Changed);
            }

            if (NeedFireEvent(27) && OnSceneObjectNetId__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 27;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_OnSceneObjectNetId, nameof(OnSceneObjectNetId), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, OnSceneObjectNetId__Changed);
            }

            if (NeedFireEvent(28) && AutoAddToWorldSpace__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 28;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_AutoAddToWorldSpace, nameof(AutoAddToWorldSpace), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, AutoAddToWorldSpace__Changed);
            }

            if (NeedFireEvent(29) && WorldSpaced__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 29;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_WorldSpaced, nameof(WorldSpaced), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, WorldSpaced__Changed);
            }

            if (NeedFireEvent(30) && Inventory__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 30;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Inventory, nameof(Inventory), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Inventory__Changed);
            }

            if (NeedFireEvent(31) && Currency__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 31;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Currency, nameof(Currency), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Currency__Changed);
            }

            if (NeedFireEvent(32) && Dialog__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 32;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Dialog, nameof(Dialog), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Dialog__Changed);
            }

            if (NeedFireEvent(33) && Doll__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 33;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Doll, nameof(Doll), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Doll__Changed);
            }

            if (NeedFireEvent(34) && TemporaryPerks__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 34;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_TemporaryPerks, nameof(TemporaryPerks), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, TemporaryPerks__Changed);
            }

            if (NeedFireEvent(35) && PermanentPerks__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 35;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_PermanentPerks, nameof(PermanentPerks), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, PermanentPerks__Changed);
            }

            if (NeedFireEvent(36) && SavedPerks__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 36;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_SavedPerks, nameof(SavedPerks), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, SavedPerks__Changed);
            }

            if (NeedFireEvent(37) && Statistics__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 37;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Statistics, nameof(Statistics), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Statistics__Changed);
            }

            if (NeedFireEvent(38) && PerksDestroyCount__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 38;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_PerksDestroyCount, nameof(PerksDestroyCount), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, PerksDestroyCount__Changed);
            }

            if (NeedFireEvent(39) && PerkActionsPrices__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 39;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_PerkActionsPrices, nameof(PerkActionsPrices), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, PerkActionsPrices__Changed);
            }

            if (NeedFireEvent(40) && StatisticEngine__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 40;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_StatisticEngine, nameof(StatisticEngine), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, StatisticEngine__Changed);
            }

            if (NeedFireEvent(41) && CraftEngine__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 41;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_CraftEngine, nameof(CraftEngine), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, CraftEngine__Changed);
            }

            if (NeedFireEvent(42) && Wizard__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 42;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Wizard, nameof(Wizard), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Wizard__Changed);
            }

            if (NeedFireEvent(43) && SlaveWizardHolder__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 43;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_SlaveWizardHolder, nameof(SlaveWizardHolder), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, SlaveWizardHolder__Changed);
            }

            if (NeedFireEvent(44) && SimpleStupidStats__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 44;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_SimpleStupidStats, nameof(SimpleStupidStats), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, SimpleStupidStats__Changed);
            }

            if (NeedFireEvent(45) && ContainerApi__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 45;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_ContainerApi, nameof(ContainerApi), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, ContainerApi__Changed);
            }

            if (NeedFireEvent(46) && AllowedSpawnPoint__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 46;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_AllowedSpawnPoint, nameof(AllowedSpawnPoint), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, AllowedSpawnPoint__Changed);
            }

            if (NeedFireEvent(47) && Health__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 47;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Health, nameof(Health), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Health__Changed);
            }

            if (NeedFireEvent(48) && Mortal__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 48;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Mortal, nameof(Mortal), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Mortal__Changed);
            }

            if (NeedFireEvent(49) && Brute__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 49;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Brute, nameof(Brute), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Brute__Changed);
            }

            if (NeedFireEvent(50) && Stats__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 50;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Stats, nameof(Stats), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Stats__Changed);
            }

            if (NeedFireEvent(51) && MutationMechanics__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 51;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_MutationMechanics, nameof(MutationMechanics), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, MutationMechanics__Changed);
            }

            if (NeedFireEvent(52) && Faction__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 52;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Faction, nameof(Faction), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Faction__Changed);
            }

            if (NeedFireEvent(53) && Gender__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 53;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Gender, nameof(Gender), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Gender__Changed);
            }

            if (NeedFireEvent(54) && Traumas__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 54;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Traumas, nameof(Traumas), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Traumas__Changed);
            }

            if (NeedFireEvent(55) && PingDiagnostics__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 55;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_PingDiagnostics, nameof(PingDiagnostics), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, PingDiagnostics__Changed);
            }

            if (NeedFireEvent(56) && ItemsStatsAccumulator__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 56;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_ItemsStatsAccumulator, nameof(ItemsStatsAccumulator), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, ItemsStatsAccumulator__Changed);
            }

            if (NeedFireEvent(57) && AuthorityOwner__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 57;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_AuthorityOwner, nameof(AuthorityOwner), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, AuthorityOwner__Changed);
            }

            if (NeedFireEvent(58) && MovementSync__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 58;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_MovementSync, nameof(MovementSync), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, MovementSync__Changed);
            }

            if (NeedFireEvent(59) && LogableEntity__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 59;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_LogableEntity, nameof(LogableEntity), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, LogableEntity__Changed);
            }

            if (NeedFireEvent(60) && LocomotionOwner__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 60;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_LocomotionOwner, nameof(LocomotionOwner), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, LocomotionOwner__Changed);
            }

            if (NeedFireEvent(61) && Consumer__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 61;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Consumer, nameof(Consumer), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Consumer__Changed);
            }

            if (NeedFireEvent(62) && Quest__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 62;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Quest, nameof(Quest), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Quest__Changed);
            }

            if (NeedFireEvent(63) && InputActionHandlers__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 63;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_InputActionHandlers, nameof(InputActionHandlers), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, InputActionHandlers__Changed);
            }

            if (NeedFireEvent(64) && ReactionsOwner__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 64;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_ReactionsOwner, nameof(ReactionsOwner), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, ReactionsOwner__Changed);
            }

            if (NeedFireEvent(65) && AttackEngine__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 65;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_AttackEngine, nameof(AttackEngine), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, AttackEngine__Changed);
            }

            if (NeedFireEvent(66) && AnimationDoerOwner__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 66;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_AnimationDoerOwner, nameof(AnimationDoerOwner), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, AnimationDoerOwner__Changed);
            }

            if (NeedFireEvent(67) && FounderPack__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 67;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_FounderPack, nameof(FounderPack), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, FounderPack__Changed);
            }

            if (NeedFireEvent(68) && SpatialDatahandlers__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 68;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_SpatialDatahandlers, nameof(SpatialDatahandlers), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, SpatialDatahandlers__Changed);
            }

            if (NeedFireEvent(69) && Buffs__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 69;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_Buffs, nameof(Buffs), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, Buffs__Changed);
            }

            if (NeedFireEvent(70) && LinksEngine__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 70;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_LinksEngine, nameof(LinksEngine), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, LinksEngine__Changed);
            }

            if (NeedFireEvent(71) && FogOfWar__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 71;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_FogOfWar, nameof(FogOfWar), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, FogOfWar__Changed);
            }

            if (NeedFireEvent(72) && WorldObjectInformationSetsEngine__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 72;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_WorldObjectInformationSetsEngine, nameof(WorldObjectInformationSetsEngine), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, WorldObjectInformationSetsEngine__Changed);
            }

            if (NeedFireEvent(73) && worldPersonalMachineEngine__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 73;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_worldPersonalMachineEngine, nameof(worldPersonalMachineEngine), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, worldPersonalMachineEngine__Changed);
            }

            if (NeedFireEvent(74) && AccountStats__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 74;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_AccountStats, nameof(AccountStats), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, AccountStats__Changed);
            }

            if (NeedFireEvent(75) && SpellModifiers__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 75;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_SpellModifiers, nameof(SpellModifiers), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, SpellModifiers__Changed);
            }

            if (NeedFireEvent(76) && SpellModifiersCollector__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 76;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_SpellModifiersCollector, nameof(SpellModifiersCollector), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, SpellModifiersCollector__Changed);
            }

            if (NeedFireEvent(77) && KillingRewardMechanics__Changed != null)
            {
                SharedCode.EntitySystem.PropertyAddress __propAddress__ = SharedCode.EntitySystem.EntityPropertyResolvers.EntityPropertyResolver.GetPropertyAddress(this);
                __propAddress__.DeltaObjectFieldId = 77;
                var __Event__Args__ = new SharedCode.EntitySystem.EntityEventArgs(_KillingRewardMechanics, nameof(KillingRewardMechanics), __propAddress__, this);
                GeneratedCode.EntitySystem.EventHelper.FireEvent(container, __Event__Args__, KillingRewardMechanics__Changed);
            }
        }

        public override void Downgrade(long mask)
        {
            base.Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                BuildingEngine = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                KnowledgeEngine = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                LastActivatedWasCommonBaken = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                ActivatedCommonBakens = default;
            if (_ActivatedCommonBakens != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_ActivatedCommonBakens).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                PointMarkers = default;
            if (_PointMarkers != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_PointMarkers).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                PointsOfInterest = default;
            if (_PointsOfInterest != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_PointsOfInterest).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Master & mask) > 0)
                TimeWhenUserDisconnected = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast & mask) > 0)
                IsIdle = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast & mask) > 0)
                IsAFK = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast & mask) > 0)
                AccountId = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                MapOwner = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                Name = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                Prefab = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                SomeUnknownResourceThatMayBeUseful = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                OnSceneObjectNetId = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Master & mask) > 0)
                AutoAddToWorldSpace = default;
            if (_AutoAddToWorldSpace != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_AutoAddToWorldSpace).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                WorldSpaced = default;
            if (_WorldSpaced != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_WorldSpaced).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                Inventory = default;
            if (_Inventory != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Inventory).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                Currency = default;
            if (_Currency != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Currency).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                Dialog = default;
            if (_Dialog != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Dialog).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast & mask) > 0)
                Doll = default;
            if (_Doll != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Doll).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                TemporaryPerks = default;
            if (_TemporaryPerks != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_TemporaryPerks).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                PermanentPerks = default;
            if (_PermanentPerks != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_PermanentPerks).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                SavedPerks = default;
            if (_SavedPerks != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_SavedPerks).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Server & mask) > 0)
                Statistics = default;
            if (_Statistics != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Statistics).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                PerksDestroyCount = default;
            if (_PerksDestroyCount != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_PerksDestroyCount).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                PerkActionsPrices = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Server & mask) > 0)
                StatisticEngine = default;
            if (_StatisticEngine != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_StatisticEngine).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                CraftEngine = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                Wizard = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast & mask) > 0)
                SlaveWizardHolder = default;
            if (_SlaveWizardHolder != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_SlaveWizardHolder).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                SimpleStupidStats = default;
            if (_SimpleStupidStats != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_SimpleStupidStats).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                ContainerApi = default;
            if (_ContainerApi != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_ContainerApi).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                AllowedSpawnPoint = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast & mask) > 0)
                Health = default;
            if (_Health != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Health).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                Mortal = default;
            if (_Mortal != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Mortal).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                Brute = default;
            if (_Brute != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Brute).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast & mask) > 0)
                Stats = default;
            if (_Stats != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Stats).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast & mask) > 0)
                MutationMechanics = default;
            if (_MutationMechanics != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_MutationMechanics).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast & mask) > 0)
                Faction = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                Gender = default;
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                Traumas = default;
            if (_Traumas != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Traumas).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                PingDiagnostics = default;
            if (_PingDiagnostics != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_PingDiagnostics).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                ItemsStatsAccumulator = default;
            if (_ItemsStatsAccumulator != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_ItemsStatsAccumulator).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                AuthorityOwner = default;
            if (_AuthorityOwner != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_AuthorityOwner).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                MovementSync = default;
            if (_MovementSync != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_MovementSync).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                LogableEntity = default;
            if (_LogableEntity != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_LogableEntity).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast & mask) > 0)
                LocomotionOwner = default;
            if (_LocomotionOwner != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_LocomotionOwner).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                Consumer = default;
            if (_Consumer != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Consumer).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                Quest = default;
            if (_Quest != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Quest).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                InputActionHandlers = default;
            if (_InputActionHandlers != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_InputActionHandlers).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Master & mask) > 0)
                ReactionsOwner = default;
            if (_ReactionsOwner != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_ReactionsOwner).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                AttackEngine = default;
            if (_AttackEngine != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_AttackEngine).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast & mask) > 0)
                AnimationDoerOwner = default;
            if (_AnimationDoerOwner != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_AnimationDoerOwner).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                FounderPack = default;
            if (_FounderPack != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_FounderPack).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Master & mask) > 0)
                SpatialDatahandlers = default;
            if (_SpatialDatahandlers != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_SpatialDatahandlers).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Always & mask) > 0)
                Buffs = default;
            if (_Buffs != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_Buffs).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast & mask) > 0)
                LinksEngine = default;
            if (_LinksEngine != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_LinksEngine).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                FogOfWar = default;
            if (_FogOfWar != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_FogOfWar).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientFull & mask) > 0)
                WorldObjectInformationSetsEngine = default;
            if (_WorldObjectInformationSetsEngine != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_WorldObjectInformationSetsEngine).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast & mask) > 0)
                worldPersonalMachineEngine = default;
            if (_worldPersonalMachineEngine != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_worldPersonalMachineEngine).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast & mask) > 0)
                AccountStats = default;
            if (_AccountStats != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_AccountStats).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast & mask) > 0)
                SpellModifiers = default;
            if (_SpellModifiers != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_SpellModifiers).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Master & mask) > 0)
                SpellModifiersCollector = default;
            if (_SpellModifiersCollector != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_SpellModifiersCollector).Downgrade(mask);
            if (((long)SharedCode.EntitySystem.ReplicationLevel.Server & mask) > 0)
                KillingRewardMechanics = default;
            if (_KillingRewardMechanics != null)
                ((SharedCode.EntitySystem.IDeltaObjectExt)_KillingRewardMechanics).Downgrade(mask);
        }
    }
}