// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

using System;
using SharedCode.Entities.Service;
using SharedCode.EntitySystem.ChainCalls;
using SharedCode.Logging;
using SharedCode.OurSimpleIoC;
using SharedCode.Serializers;
using SharedCode.Utils;
using System.Linq;
using System.Collections.Generic;
using System.CodeDom.Compiler;
using GeneratedCode.DeltaObjects.Chain;

[GeneratedCode("CodeGen", "1.0")]
public class RealmsCollectionEntityAlwaysChainProxy : IChainedEntity
{
    private RealmsCollectionEntityChainProxy __chain__;
    public RealmsCollectionEntityAlwaysChainProxy(RealmsCollectionEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public RealmsCollectionEntityAlwaysChainProxy AddRealm(ChainArgument<System.Guid> mapId, ChainArgument<SharedCode.Aspects.Sessions.RealmRulesDef> realmDef)
    {
        __chain__.AddRealm(mapId, realmDef);
        return this;
    }

    public RealmsCollectionEntityAlwaysChainProxy RemoveRealm(ChainArgument<System.Guid> mapId)
    {
        __chain__.RemoveRealm(mapId);
        return this;
    }

    public RealmsCollectionEntityAlwaysChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public RealmsCollectionEntityAlwaysChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public RealmsCollectionEntityAlwaysChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static RealmsCollectionEntityAlwaysChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IRealmsCollectionEntityAlways entity)
    {
        return new RealmsCollectionEntityAlwaysChainProxy(new RealmsCollectionEntityChainProxy((SharedCode.Entities.IRealmsCollectionEntity)entity.GetBaseDeltaObject()));
    }

    public static RealmsCollectionEntityAlwaysChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IRealmsCollectionEntityAlways entity, IChainedEntity fromChain)
    {
        return new RealmsCollectionEntityAlwaysChainProxy(new RealmsCollectionEntityChainProxy((SharedCode.Entities.IRealmsCollectionEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class RealmsCollectionEntityClientBroadcastChainProxy : IChainedEntity
{
    private RealmsCollectionEntityChainProxy __chain__;
    public RealmsCollectionEntityClientBroadcastChainProxy(RealmsCollectionEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public RealmsCollectionEntityClientBroadcastChainProxy AddRealm(ChainArgument<System.Guid> mapId, ChainArgument<SharedCode.Aspects.Sessions.RealmRulesDef> realmDef)
    {
        __chain__.AddRealm(mapId, realmDef);
        return this;
    }

    public RealmsCollectionEntityClientBroadcastChainProxy RemoveRealm(ChainArgument<System.Guid> mapId)
    {
        __chain__.RemoveRealm(mapId);
        return this;
    }

    public RealmsCollectionEntityClientBroadcastChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public RealmsCollectionEntityClientBroadcastChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public RealmsCollectionEntityClientBroadcastChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static RealmsCollectionEntityClientBroadcastChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IRealmsCollectionEntityClientBroadcast entity)
    {
        return new RealmsCollectionEntityClientBroadcastChainProxy(new RealmsCollectionEntityChainProxy((SharedCode.Entities.IRealmsCollectionEntity)entity.GetBaseDeltaObject()));
    }

    public static RealmsCollectionEntityClientBroadcastChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IRealmsCollectionEntityClientBroadcast entity, IChainedEntity fromChain)
    {
        return new RealmsCollectionEntityClientBroadcastChainProxy(new RealmsCollectionEntityChainProxy((SharedCode.Entities.IRealmsCollectionEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class RealmsCollectionEntityClientFullApiChainProxy : IChainedEntity
{
    private RealmsCollectionEntityChainProxy __chain__;
    public RealmsCollectionEntityClientFullApiChainProxy(RealmsCollectionEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public RealmsCollectionEntityClientFullApiChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public RealmsCollectionEntityClientFullApiChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public RealmsCollectionEntityClientFullApiChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static RealmsCollectionEntityClientFullApiChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IRealmsCollectionEntityClientFullApi entity)
    {
        return new RealmsCollectionEntityClientFullApiChainProxy(new RealmsCollectionEntityChainProxy((SharedCode.Entities.IRealmsCollectionEntity)entity.GetBaseDeltaObject()));
    }

    public static RealmsCollectionEntityClientFullApiChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IRealmsCollectionEntityClientFullApi entity, IChainedEntity fromChain)
    {
        return new RealmsCollectionEntityClientFullApiChainProxy(new RealmsCollectionEntityChainProxy((SharedCode.Entities.IRealmsCollectionEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class RealmsCollectionEntityClientFullChainProxy : IChainedEntity
{
    private RealmsCollectionEntityChainProxy __chain__;
    public RealmsCollectionEntityClientFullChainProxy(RealmsCollectionEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public RealmsCollectionEntityClientFullChainProxy AddRealm(ChainArgument<System.Guid> mapId, ChainArgument<SharedCode.Aspects.Sessions.RealmRulesDef> realmDef)
    {
        __chain__.AddRealm(mapId, realmDef);
        return this;
    }

    public RealmsCollectionEntityClientFullChainProxy RemoveRealm(ChainArgument<System.Guid> mapId)
    {
        __chain__.RemoveRealm(mapId);
        return this;
    }

    public RealmsCollectionEntityClientFullChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public RealmsCollectionEntityClientFullChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public RealmsCollectionEntityClientFullChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static RealmsCollectionEntityClientFullChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IRealmsCollectionEntityClientFull entity)
    {
        return new RealmsCollectionEntityClientFullChainProxy(new RealmsCollectionEntityChainProxy((SharedCode.Entities.IRealmsCollectionEntity)entity.GetBaseDeltaObject()));
    }

    public static RealmsCollectionEntityClientFullChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IRealmsCollectionEntityClientFull entity, IChainedEntity fromChain)
    {
        return new RealmsCollectionEntityClientFullChainProxy(new RealmsCollectionEntityChainProxy((SharedCode.Entities.IRealmsCollectionEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class RealmsCollectionEntityServerApiChainProxy : IChainedEntity
{
    private RealmsCollectionEntityChainProxy __chain__;
    public RealmsCollectionEntityServerApiChainProxy(RealmsCollectionEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public RealmsCollectionEntityServerApiChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public RealmsCollectionEntityServerApiChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public RealmsCollectionEntityServerApiChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static RealmsCollectionEntityServerApiChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IRealmsCollectionEntityServerApi entity)
    {
        return new RealmsCollectionEntityServerApiChainProxy(new RealmsCollectionEntityChainProxy((SharedCode.Entities.IRealmsCollectionEntity)entity.GetBaseDeltaObject()));
    }

    public static RealmsCollectionEntityServerApiChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IRealmsCollectionEntityServerApi entity, IChainedEntity fromChain)
    {
        return new RealmsCollectionEntityServerApiChainProxy(new RealmsCollectionEntityChainProxy((SharedCode.Entities.IRealmsCollectionEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class RealmsCollectionEntityServerChainProxy : IChainedEntity
{
    private RealmsCollectionEntityChainProxy __chain__;
    public RealmsCollectionEntityServerChainProxy(RealmsCollectionEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public RealmsCollectionEntityServerChainProxy AddRealm(ChainArgument<System.Guid> mapId, ChainArgument<SharedCode.Aspects.Sessions.RealmRulesDef> realmDef)
    {
        __chain__.AddRealm(mapId, realmDef);
        return this;
    }

    public RealmsCollectionEntityServerChainProxy RemoveRealm(ChainArgument<System.Guid> mapId)
    {
        __chain__.RemoveRealm(mapId);
        return this;
    }

    public RealmsCollectionEntityServerChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public RealmsCollectionEntityServerChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public RealmsCollectionEntityServerChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static RealmsCollectionEntityServerChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IRealmsCollectionEntityServer entity)
    {
        return new RealmsCollectionEntityServerChainProxy(new RealmsCollectionEntityChainProxy((SharedCode.Entities.IRealmsCollectionEntity)entity.GetBaseDeltaObject()));
    }

    public static RealmsCollectionEntityServerChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IRealmsCollectionEntityServer entity, IChainedEntity fromChain)
    {
        return new RealmsCollectionEntityServerChainProxy(new RealmsCollectionEntityChainProxy((SharedCode.Entities.IRealmsCollectionEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class RealmEntityAlwaysChainProxy : IChainedEntity
{
    private RealmEntityChainProxy __chain__;
    public RealmEntityAlwaysChainProxy(RealmEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public RealmEntityAlwaysChainProxy AddMap(ChainArgument<System.Guid> mapId, ChainArgument<SharedCode.MapSystem.MapMeta> mapMeta)
    {
        __chain__.AddMap(mapId, mapMeta);
        return this;
    }

    public RealmEntityAlwaysChainProxy RemoveMap(ChainArgument<System.Guid> mapId)
    {
        __chain__.RemoveMap(mapId);
        return this;
    }

    public RealmEntityAlwaysChainProxy SetActive(ChainArgument<bool> active)
    {
        __chain__.SetActive(active);
        return this;
    }

    public RealmEntityAlwaysChainProxy SetMapDead(ChainArgument<System.Guid> mapId)
    {
        __chain__.SetMapDead(mapId);
        return this;
    }

    public RealmEntityAlwaysChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public RealmEntityAlwaysChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public RealmEntityAlwaysChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static RealmEntityAlwaysChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IRealmEntityAlways entity)
    {
        return new RealmEntityAlwaysChainProxy(new RealmEntityChainProxy((SharedCode.Entities.IRealmEntity)entity.GetBaseDeltaObject()));
    }

    public static RealmEntityAlwaysChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IRealmEntityAlways entity, IChainedEntity fromChain)
    {
        return new RealmEntityAlwaysChainProxy(new RealmEntityChainProxy((SharedCode.Entities.IRealmEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class RealmEntityClientBroadcastChainProxy : IChainedEntity
{
    private RealmEntityChainProxy __chain__;
    public RealmEntityClientBroadcastChainProxy(RealmEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public RealmEntityClientBroadcastChainProxy AddMap(ChainArgument<System.Guid> mapId, ChainArgument<SharedCode.MapSystem.MapMeta> mapMeta)
    {
        __chain__.AddMap(mapId, mapMeta);
        return this;
    }

    public RealmEntityClientBroadcastChainProxy RemoveMap(ChainArgument<System.Guid> mapId)
    {
        __chain__.RemoveMap(mapId);
        return this;
    }

    public RealmEntityClientBroadcastChainProxy SetActive(ChainArgument<bool> active)
    {
        __chain__.SetActive(active);
        return this;
    }

    public RealmEntityClientBroadcastChainProxy SetMapDead(ChainArgument<System.Guid> mapId)
    {
        __chain__.SetMapDead(mapId);
        return this;
    }

    public RealmEntityClientBroadcastChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public RealmEntityClientBroadcastChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public RealmEntityClientBroadcastChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static RealmEntityClientBroadcastChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IRealmEntityClientBroadcast entity)
    {
        return new RealmEntityClientBroadcastChainProxy(new RealmEntityChainProxy((SharedCode.Entities.IRealmEntity)entity.GetBaseDeltaObject()));
    }

    public static RealmEntityClientBroadcastChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IRealmEntityClientBroadcast entity, IChainedEntity fromChain)
    {
        return new RealmEntityClientBroadcastChainProxy(new RealmEntityChainProxy((SharedCode.Entities.IRealmEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class RealmEntityClientFullApiChainProxy : IChainedEntity
{
    private RealmEntityChainProxy __chain__;
    public RealmEntityClientFullApiChainProxy(RealmEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public RealmEntityClientFullApiChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public RealmEntityClientFullApiChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public RealmEntityClientFullApiChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static RealmEntityClientFullApiChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IRealmEntityClientFullApi entity)
    {
        return new RealmEntityClientFullApiChainProxy(new RealmEntityChainProxy((SharedCode.Entities.IRealmEntity)entity.GetBaseDeltaObject()));
    }

    public static RealmEntityClientFullApiChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IRealmEntityClientFullApi entity, IChainedEntity fromChain)
    {
        return new RealmEntityClientFullApiChainProxy(new RealmEntityChainProxy((SharedCode.Entities.IRealmEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class RealmEntityClientFullChainProxy : IChainedEntity
{
    private RealmEntityChainProxy __chain__;
    public RealmEntityClientFullChainProxy(RealmEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public RealmEntityClientFullChainProxy AddMap(ChainArgument<System.Guid> mapId, ChainArgument<SharedCode.MapSystem.MapMeta> mapMeta)
    {
        __chain__.AddMap(mapId, mapMeta);
        return this;
    }

    public RealmEntityClientFullChainProxy RemoveMap(ChainArgument<System.Guid> mapId)
    {
        __chain__.RemoveMap(mapId);
        return this;
    }

    public RealmEntityClientFullChainProxy SetActive(ChainArgument<bool> active)
    {
        __chain__.SetActive(active);
        return this;
    }

    public RealmEntityClientFullChainProxy SetMapDead(ChainArgument<System.Guid> mapId)
    {
        __chain__.SetMapDead(mapId);
        return this;
    }

    public RealmEntityClientFullChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public RealmEntityClientFullChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public RealmEntityClientFullChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static RealmEntityClientFullChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IRealmEntityClientFull entity)
    {
        return new RealmEntityClientFullChainProxy(new RealmEntityChainProxy((SharedCode.Entities.IRealmEntity)entity.GetBaseDeltaObject()));
    }

    public static RealmEntityClientFullChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IRealmEntityClientFull entity, IChainedEntity fromChain)
    {
        return new RealmEntityClientFullChainProxy(new RealmEntityChainProxy((SharedCode.Entities.IRealmEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class RealmEntityServerApiChainProxy : IChainedEntity
{
    private RealmEntityChainProxy __chain__;
    public RealmEntityServerApiChainProxy(RealmEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public RealmEntityServerApiChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public RealmEntityServerApiChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public RealmEntityServerApiChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static RealmEntityServerApiChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IRealmEntityServerApi entity)
    {
        return new RealmEntityServerApiChainProxy(new RealmEntityChainProxy((SharedCode.Entities.IRealmEntity)entity.GetBaseDeltaObject()));
    }

    public static RealmEntityServerApiChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IRealmEntityServerApi entity, IChainedEntity fromChain)
    {
        return new RealmEntityServerApiChainProxy(new RealmEntityChainProxy((SharedCode.Entities.IRealmEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}

[GeneratedCode("CodeGen", "1.0")]
public class RealmEntityServerChainProxy : IChainedEntity
{
    private RealmEntityChainProxy __chain__;
    public RealmEntityServerChainProxy(RealmEntityChainProxy chain)
    {
        __chain__ = chain;
    }

    public ChainCancellationToken Run()
    {
        return __chain__.Run();
    }

    public RealmEntityServerChainProxy TryAttach(ChainArgument<System.Guid> account)
    {
        __chain__.TryAttach(account);
        return this;
    }

    public RealmEntityServerChainProxy Enter(ChainArgument<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>> account)
    {
        __chain__.Enter(account);
        return this;
    }

    public RealmEntityServerChainProxy Leave(ChainArgument<SharedCode.EntitySystem.OuterRef<SharedCode.EntitySystem.IEntity>> account)
    {
        __chain__.Leave(account);
        return this;
    }

    public RealmEntityServerChainProxy AddMap(ChainArgument<System.Guid> mapId, ChainArgument<SharedCode.MapSystem.MapMeta> mapMeta)
    {
        __chain__.AddMap(mapId, mapMeta);
        return this;
    }

    public RealmEntityServerChainProxy RemoveMap(ChainArgument<System.Guid> mapId)
    {
        __chain__.RemoveMap(mapId);
        return this;
    }

    public RealmEntityServerChainProxy SetActive(ChainArgument<bool> active)
    {
        __chain__.SetActive(active);
        return this;
    }

    public RealmEntityServerChainProxy SetMapDead(ChainArgument<System.Guid> mapId)
    {
        __chain__.SetMapDead(mapId);
        return this;
    }

    public RealmEntityServerChainProxy Delay(float duration, bool repeat = false, bool fromUtcNow = true)
    {
        __chain__.Delay(duration, repeat, fromUtcNow);
        return this;
    }

    public RealmEntityServerChainProxy DelayCount(float duration, int count, bool fromUtcNow = true)
    {
        __chain__.DelayCount(duration, count, fromUtcNow);
        return this;
    }

    public RealmEntityServerChainProxy StoreResult(string name)
    {
        __chain__.StoreResult(name);
        return this;
    }

    BaseChainEntity IChainedEntity.GetBaseChainEntity()
    {
        return (BaseChainEntity)__chain__;
    }
}

public static partial class ChainProxyExtensions
{
    public static RealmEntityServerChainProxy Chain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IRealmEntityServer entity)
    {
        return new RealmEntityServerChainProxy(new RealmEntityChainProxy((SharedCode.Entities.IRealmEntity)entity.GetBaseDeltaObject()));
    }

    public static RealmEntityServerChainProxy ContinueChain(this GeneratedCode.DeltaObjects.ReplicationInterfaces.IRealmEntityServer entity, IChainedEntity fromChain)
    {
        return new RealmEntityServerChainProxy(new RealmEntityChainProxy((SharedCode.Entities.IRealmEntity)entity.GetBaseDeltaObject(), fromChain));
    }
}