// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>

namespace GeneratedCode.DeltaObjects.ReplicationInterfaces
{
    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.Always, -1246035440, typeof(SharedCode.MovementSync.IMobMovementSync))]
    public interface IMobMovementSyncAlways : SharedCode.EntitySystem.IDeltaObject, IPositionedObjectAlways, IPositionableObjectAlways, IDebugPositionLoggerAlways, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
        SharedCode.MovementSync.IMobMovementStateEvent OnMovementStateChanged
        {
            get;
        }

        SharedCode.MovementSync.MobMovementStatePacked __SyncMovementReliable
        {
            get;
        }

        SharedCode.Wizardry.SpellEffectDef def
        {
            get;
        }

        SharedCode.MovementSync.MovementData MovementData
        {
            get;
        }

        System.Guid PathFindingOwnerRepositoryId
        {
            get;
        }

        System.Guid PathFindingOwnerRepositoryIdRuntime
        {
            get;
        }

        System.Threading.Tasks.Task SetMovementData(SharedCode.MovementSync.MovementData data);
        System.Threading.Tasks.Task<bool> SetPathFindingOwnerRepositoryId(System.Guid repositoryId);
        System.Threading.Tasks.Task UpdateMovement(SharedCode.MovementSync.MobMovementStatePacked state, long counter, bool important);
        System.Threading.Tasks.Task StopMovement(SharedCode.Wizardry.SpellId spellId, GeneratedDefsForSpells.MoveEffectDef moveEffectDef, bool success);
        event System.Func<SharedCode.MovementSync.MobMovementStatePacked, System.Threading.Tasks.Task> __SyncMovementUnreliable;
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.ClientBroadcast, 383677986, typeof(SharedCode.MovementSync.IMobMovementSync))]
    public interface IMobMovementSyncClientBroadcast : SharedCode.EntitySystem.IDeltaObject, IPositionedObjectClientBroadcast, IPositionableObjectClientBroadcast, IDebugPositionLoggerClientBroadcast, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
        SharedCode.MovementSync.IMobMovementStateEvent OnMovementStateChanged
        {
            get;
        }

        SharedCode.MovementSync.MobMovementStatePacked __SyncMovementReliable
        {
            get;
        }

        SharedCode.Wizardry.SpellEffectDef def
        {
            get;
        }

        SharedCode.MovementSync.MovementData MovementData
        {
            get;
        }

        System.Guid PathFindingOwnerRepositoryId
        {
            get;
        }

        System.Guid PathFindingOwnerRepositoryIdRuntime
        {
            get;
        }

        System.Threading.Tasks.Task SetMovementData(SharedCode.MovementSync.MovementData data);
        System.Threading.Tasks.Task<bool> SetPathFindingOwnerRepositoryId(System.Guid repositoryId);
        System.Threading.Tasks.Task UpdateMovement(SharedCode.MovementSync.MobMovementStatePacked state, long counter, bool important);
        System.Threading.Tasks.Task StopMovement(SharedCode.Wizardry.SpellId spellId, GeneratedDefsForSpells.MoveEffectDef moveEffectDef, bool success);
        event System.Func<SharedCode.MovementSync.MobMovementStatePacked, System.Threading.Tasks.Task> __SyncMovementUnreliable;
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.ClientFullApi, -2043076142, typeof(SharedCode.MovementSync.IMobMovementSync))]
    public interface IMobMovementSyncClientFullApi : SharedCode.EntitySystem.IDeltaObject, IPositionedObjectClientFullApi, IPositionableObjectClientFullApi, IDebugPositionLoggerClientFullApi, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.ClientFull, -696211936, typeof(SharedCode.MovementSync.IMobMovementSync))]
    public interface IMobMovementSyncClientFull : SharedCode.EntitySystem.IDeltaObject, IPositionedObjectClientFull, IPositionableObjectClientFull, IDebugPositionLoggerClientFull, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
        SharedCode.MovementSync.IMobMovementStateEvent OnMovementStateChanged
        {
            get;
        }

        SharedCode.MovementSync.MobMovementStatePacked __SyncMovementReliable
        {
            get;
        }

        SharedCode.Wizardry.SpellEffectDef def
        {
            get;
        }

        SharedCode.MovementSync.MovementData MovementData
        {
            get;
        }

        System.Guid PathFindingOwnerRepositoryId
        {
            get;
        }

        System.Guid PathFindingOwnerRepositoryIdRuntime
        {
            get;
        }

        System.Threading.Tasks.Task SetMovementData(SharedCode.MovementSync.MovementData data);
        System.Threading.Tasks.Task<bool> SetPathFindingOwnerRepositoryId(System.Guid repositoryId);
        System.Threading.Tasks.Task UpdateMovement(SharedCode.MovementSync.MobMovementStatePacked state, long counter, bool important);
        System.Threading.Tasks.Task StopMovement(SharedCode.Wizardry.SpellId spellId, GeneratedDefsForSpells.MoveEffectDef moveEffectDef, bool success);
        event System.Func<SharedCode.MovementSync.MobMovementStatePacked, System.Threading.Tasks.Task> __SyncMovementUnreliable;
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.ServerApi, 1531557172, typeof(SharedCode.MovementSync.IMobMovementSync))]
    public interface IMobMovementSyncServerApi : SharedCode.EntitySystem.IDeltaObject, IPositionedObjectServerApi, IPositionableObjectServerApi, IDebugPositionLoggerServerApi, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
    }

    [SharedCode.EntitySystem.ReplicationInterface(SharedCode.EntitySystem.ReplicationLevel.Server, 828629277, typeof(SharedCode.MovementSync.IMobMovementSync))]
    public interface IMobMovementSyncServer : SharedCode.EntitySystem.IDeltaObject, IPositionedObjectServer, IPositionableObjectServer, IDebugPositionLoggerServer, SharedCode.EntitySystem.IBaseDeltaObjectWrapper
    {
        SharedCode.MovementSync.IMobMovementStateEvent OnMovementStateChanged
        {
            get;
        }

        SharedCode.MovementSync.MobMovementStatePacked __SyncMovementReliable
        {
            get;
        }

        SharedCode.Wizardry.SpellEffectDef def
        {
            get;
        }

        SharedCode.MovementSync.MovementData MovementData
        {
            get;
        }

        System.Guid PathFindingOwnerRepositoryId
        {
            get;
        }

        System.Guid PathFindingOwnerRepositoryIdRuntime
        {
            get;
        }

        System.Threading.Tasks.Task SetMovementData(SharedCode.MovementSync.MovementData data);
        System.Threading.Tasks.Task<bool> SetPathFindingOwnerRepositoryId(System.Guid repositoryId);
        System.Threading.Tasks.Task UpdateMovement(SharedCode.MovementSync.MobMovementStatePacked state, long counter, bool important);
        System.Threading.Tasks.Task StopMovement(SharedCode.Wizardry.SpellId spellId, GeneratedDefsForSpells.MoveEffectDef moveEffectDef, bool success);
        event System.Func<SharedCode.MovementSync.MobMovementStatePacked, System.Threading.Tasks.Task> __SyncMovementUnreliable;
    }
}